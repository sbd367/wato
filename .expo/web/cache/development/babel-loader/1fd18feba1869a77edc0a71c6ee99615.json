{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"containerStyle\", \"onPress\", \"onLongPress\", \"Component\", \"disabled\", \"disabledStyle\", \"bottomDivider\", \"topDivider\", \"pad\", \"linearGradientProps\", \"ViewComponent\", \"theme\", \"children\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { PadView } from \"./components/PadView\";\nimport { defaultTheme } from \"../helpers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var ListItemBase = function ListItemBase(props) {\n  var _theme$colors, _theme$colors2;\n\n  var containerStyle = props.containerStyle,\n      onPress = props.onPress,\n      onLongPress = props.onLongPress,\n      _props$Component = props.Component,\n      Component = _props$Component === void 0 ? onPress || onLongPress ? Pressable : View : _props$Component,\n      disabled = props.disabled,\n      disabledStyle = props.disabledStyle,\n      bottomDivider = props.bottomDivider,\n      topDivider = props.topDivider,\n      _props$pad = props.pad,\n      pad = _props$pad === void 0 ? 16 : _props$pad,\n      linearGradientProps = props.linearGradientProps,\n      _props$ViewComponent = props.ViewComponent,\n      ViewComponent = _props$ViewComponent === void 0 ? View : _props$ViewComponent,\n      _props$theme = props.theme,\n      theme = _props$theme === void 0 ? defaultTheme : _props$theme,\n      children = props.children,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  if (props.linearGradientProps && !props.ViewComponent) {\n    console.error(\"You need to pass a ViewComponent to use linearGradientProps !\\nExample: ViewComponent={require('react-native-linear-gradient')}\");\n  }\n\n  return _jsx(Component, _objectSpread(_objectSpread({}, rest), {}, {\n    onPress: onPress,\n    onLongPress: onLongPress,\n    disabled: disabled,\n    children: _jsx(PadView, _objectSpread(_objectSpread({\n      Component: ViewComponent\n    }, linearGradientProps), {}, {\n      style: StyleSheet.flatten([_objectSpread(_objectSpread({}, Platform.select({\n        ios: {\n          padding: 14\n        },\n        default: {\n          padding: 16\n        }\n      })), {}, {\n        flexDirection: 'row',\n        alignItems: 'center',\n        backgroundColor: theme == null ? void 0 : (_theme$colors = theme.colors) == null ? void 0 : _theme$colors.white,\n        borderColor: theme == null ? void 0 : (_theme$colors2 = theme.colors) == null ? void 0 : _theme$colors2.divider\n      }), topDivider && {\n        borderTopWidth: StyleSheet.hairlineWidth\n      }, bottomDivider && {\n        borderBottomWidth: StyleSheet.hairlineWidth\n      }, containerStyle, disabled && disabledStyle]),\n      pad: pad,\n      children: children\n    }))\n  }));\n};\nListItemBase.displayName = 'ListItem';","map":{"version":3,"sources":["C:/Users/Spencer/Documents/Code/WATO/wato/node_modules/@react-native-elements/base/dist/ListItem/ListItem.js"],"names":["React","PadView","defaultTheme","ListItemBase","props","containerStyle","onPress","onLongPress","Component","Pressable","View","disabled","disabledStyle","bottomDivider","topDivider","pad","linearGradientProps","ViewComponent","theme","children","rest","console","error","StyleSheet","flatten","Platform","select","ios","padding","default","flexDirection","alignItems","backgroundColor","colors","white","borderColor","divider","borderTopWidth","hairlineWidth","borderBottomWidth","displayName"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,OAAT;AACA,SAASC,YAAT;;AACA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA;;AACnC,MAAQC,cAAR,GAA0PD,KAA1P,CAAQC,cAAR;AAAA,MAAwBC,OAAxB,GAA0PF,KAA1P,CAAwBE,OAAxB;AAAA,MAAiCC,WAAjC,GAA0PH,KAA1P,CAAiCG,WAAjC;AAAA,yBAA0PH,KAA1P,CAA8CI,SAA9C;AAAA,MAA8CA,SAA9C,iCAA0DF,OAAO,IAAIC,WAAX,GAAyBE,SAAzB,GAAqCC,IAA/F;AAAA,MAAqGC,QAArG,GAA0PP,KAA1P,CAAqGO,QAArG;AAAA,MAA+GC,aAA/G,GAA0PR,KAA1P,CAA+GQ,aAA/G;AAAA,MAA8HC,aAA9H,GAA0PT,KAA1P,CAA8HS,aAA9H;AAAA,MAA6IC,UAA7I,GAA0PV,KAA1P,CAA6IU,UAA7I;AAAA,mBAA0PV,KAA1P,CAAyJW,GAAzJ;AAAA,MAAyJA,GAAzJ,2BAA+J,EAA/J;AAAA,MAAmKC,mBAAnK,GAA0PZ,KAA1P,CAAmKY,mBAAnK;AAAA,6BAA0PZ,KAA1P,CAAwLa,aAAxL;AAAA,MAAwLA,aAAxL,qCAAwMP,IAAxM;AAAA,qBAA0PN,KAA1P,CAA8Mc,KAA9M;AAAA,MAA8MA,KAA9M,6BAAsNhB,YAAtN;AAAA,MAAoOiB,QAApO,GAA0Pf,KAA1P,CAAoOe,QAApO;AAAA,MAAiPC,IAAjP,4BAA0PhB,KAA1P;;AACA,MAAIA,KAAK,CAACY,mBAAN,IAA6B,CAACZ,KAAK,CAACa,aAAxC,EAAuD;AACnDI,IAAAA,OAAO,CAACC,KAAR,CAAc,iIAAd;AACH;;AACD,SAAQ,KAAC,SAAD,kCAAeF,IAAf;AAAqB,IAAA,OAAO,EAAEd,OAA9B;AAAuC,IAAA,WAAW,EAAEC,WAApD;AAAiE,IAAA,QAAQ,EAAEI,QAA3E;AAAA,cACN,KAAC,OAAD;AAAS,MAAA,SAAS,EAAEM;AAApB,OAAuCD,mBAAvC;AAA4D,MAAA,KAAK,EAAEO,UAAU,CAACC,OAAX,CAAmB,iCAEzEC,QAAQ,CAACC,MAAT,CAAgB;AACfC,QAAAA,GAAG,EAAE;AACDC,UAAAA,OAAO,EAAE;AADR,SADU;AAIfC,QAAAA,OAAO,EAAE;AACLD,UAAAA,OAAO,EAAE;AADJ;AAJM,OAAhB,CAFyE;AAU5EE,QAAAA,aAAa,EAAE,KAV6D;AAW5EC,QAAAA,UAAU,EAAE,QAXgE;AAY5EC,QAAAA,eAAe,EAAEd,KAAF,qCAAEA,KAAK,CAAEe,MAAT,qBAAE,cAAeC,KAZ4C;AAa5EC,QAAAA,WAAW,EAAEjB,KAAF,sCAAEA,KAAK,CAAEe,MAAT,qBAAE,eAAeG;AAbgD,UAehFtB,UAAU,IAAI;AAAEuB,QAAAA,cAAc,EAAEd,UAAU,CAACe;AAA7B,OAfkE,EAgBhFzB,aAAa,IAAI;AAAE0B,QAAAA,iBAAiB,EAAEhB,UAAU,CAACe;AAAhC,OAhB+D,EAiBhFjC,cAjBgF,EAkBhFM,QAAQ,IAAIC,aAlBoE,CAAnB,CAAnE;AAmBM,MAAA,GAAG,EAAEG,GAnBX;AAAA,gBAoBGI;AApBH;AADM,KAAR;AAwBH,CA7BM;AA8BPhB,YAAY,CAACqC,WAAb,GAA2B,UAA3B","sourcesContent":["import React from 'react';\nimport { Platform, StyleSheet, Pressable, View, } from 'react-native';\nimport { PadView } from './components/PadView';\nimport { defaultTheme } from '../helpers';\nexport const ListItemBase = (props) => {\n    const { containerStyle, onPress, onLongPress, Component = onPress || onLongPress ? Pressable : View, disabled, disabledStyle, bottomDivider, topDivider, pad = 16, linearGradientProps, ViewComponent = View, theme = defaultTheme, children, ...rest } = props;\n    if (props.linearGradientProps && !props.ViewComponent) {\n        console.error(\"You need to pass a ViewComponent to use linearGradientProps !\\nExample: ViewComponent={require('react-native-linear-gradient')}\");\n    }\n    return (<Component {...rest} onPress={onPress} onLongPress={onLongPress} disabled={disabled}>\n      <PadView Component={ViewComponent} {...linearGradientProps} style={StyleSheet.flatten([\n            {\n                ...Platform.select({\n                    ios: {\n                        padding: 14,\n                    },\n                    default: {\n                        padding: 16,\n                    },\n                }),\n                flexDirection: 'row',\n                alignItems: 'center',\n                backgroundColor: theme?.colors?.white,\n                borderColor: theme?.colors?.divider,\n            },\n            topDivider && { borderTopWidth: StyleSheet.hairlineWidth },\n            bottomDivider && { borderBottomWidth: StyleSheet.hairlineWidth },\n            containerStyle,\n            disabled && disabledStyle,\n        ])} pad={pad}>\n        {children}\n      </PadView>\n    </Component>);\n};\nListItemBase.displayName = 'ListItem';\n"]},"metadata":{},"sourceType":"module"}