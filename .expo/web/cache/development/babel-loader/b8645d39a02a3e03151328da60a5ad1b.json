{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"onPress\", \"onLongPress\", \"onPressIn\", \"onPressOut\", \"Component\", \"placeholderStyle\", \"PlaceholderContent\", \"containerStyle\", \"childrenContainerStyle\", \"style\", \"ImageComponent\", \"onLoad\", \"children\", \"transition\", \"transitionDuration\", \"pressableProps\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useCallback } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport ImageNative from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Image = function Image(_ref) {\n  var onPress = _ref.onPress,\n      onLongPress = _ref.onLongPress,\n      onPressIn = _ref.onPressIn,\n      onPressOut = _ref.onPressOut,\n      _ref$Component = _ref.Component,\n      Component = _ref$Component === void 0 ? onPress || onLongPress || onPressIn || onPressOut ? Pressable : View : _ref$Component,\n      placeholderStyle = _ref.placeholderStyle,\n      PlaceholderContent = _ref.PlaceholderContent,\n      containerStyle = _ref.containerStyle,\n      _ref$childrenContaine = _ref.childrenContainerStyle,\n      childrenContainerStyle = _ref$childrenContaine === void 0 ? null : _ref$childrenContaine,\n      _ref$style = _ref.style,\n      style = _ref$style === void 0 ? {} : _ref$style,\n      _ref$ImageComponent = _ref.ImageComponent,\n      ImageComponent = _ref$ImageComponent === void 0 ? ImageNative : _ref$ImageComponent,\n      onLoad = _ref.onLoad,\n      children = _ref.children,\n      transition = _ref.transition,\n      _ref$transitionDurati = _ref.transitionDuration,\n      transitionDuration = _ref$transitionDurati === void 0 ? 360 : _ref$transitionDurati,\n      pressableProps = _ref.pressableProps,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var placeholderOpacity = React.useRef(new Animated.Value(1));\n  var onLoadHandler = useCallback(function (event) {\n    if (transition) {\n      Animated.timing(placeholderOpacity.current, {\n        toValue: 0,\n        duration: transitionDuration,\n        useNativeDriver: true\n      }).start();\n    } else {\n      placeholderOpacity.current.setValue(0);\n    }\n\n    onLoad == null ? void 0 : onLoad(event);\n  }, [transition, transitionDuration, onLoad]);\n  var hasImage = Boolean(props.source);\n  return _jsxs(Component, _objectSpread(_objectSpread({}, pressableProps), {}, {\n    onPress: onPress,\n    onPressIn: onPressIn,\n    onPressOut: onPressOut,\n    onLongPress: onLongPress,\n    accessibilityIgnoresInvertColors: true,\n    style: StyleSheet.flatten([styles.container, containerStyle]),\n    children: [_jsx(ImageComponent, _objectSpread(_objectSpread({\n      testID: \"RNE__Image\"\n    }, props), {}, {\n      transition: transition,\n      transitionDuration: transitionDuration,\n      onLoad: onLoadHandler,\n      style: StyleSheet.flatten([StyleSheet.absoluteFill, style])\n    })), _jsx(Animated.View, {\n      pointerEvents: hasImage ? 'none' : 'auto',\n      accessibilityElementsHidden: hasImage,\n      importantForAccessibility: hasImage ? 'no-hide-descendants' : 'yes',\n      style: [StyleSheet.absoluteFillObject, {\n        opacity: hasImage ? placeholderOpacity.current : 1\n      }],\n      children: _jsx(View, {\n        testID: \"RNE__Image__placeholder\",\n        style: StyleSheet.flatten([style, styles.placeholder, placeholderStyle]),\n        children: React.isValidElement(PlaceholderContent) ? PlaceholderContent : PlaceholderContent && _jsx(Text, {\n          testID: \"RNE__Image__Placeholder__Content\",\n          children: PlaceholderContent\n        })\n      })\n    }), _jsx(View, {\n      testID: \"RNE__Image__children__container\",\n      style: childrenContainerStyle != null ? childrenContainerStyle : style,\n      children: children\n    })]\n  }));\n};\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'transparent',\n    position: 'relative',\n    overflow: 'hidden'\n  },\n  placeholder: {\n    backgroundColor: '#bdbdbd',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nImage.displayName = 'Image';","map":{"version":3,"sources":["C:/Users/Spencer/Documents/Code/WATO/wato/node_modules/@react-native-elements/base/dist/Image/Image.js"],"names":["React","useCallback","Image","onPress","onLongPress","onPressIn","onPressOut","Component","Pressable","View","placeholderStyle","PlaceholderContent","containerStyle","childrenContainerStyle","style","ImageComponent","ImageNative","onLoad","children","transition","transitionDuration","pressableProps","props","placeholderOpacity","useRef","Animated","Value","onLoadHandler","event","timing","current","toValue","duration","useNativeDriver","start","setValue","hasImage","Boolean","source","StyleSheet","flatten","styles","container","absoluteFill","absoluteFillObject","opacity","placeholder","isValidElement","create","backgroundColor","position","overflow","alignItems","justifyContent","displayName"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;;;;;;;;;AAEA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAE6M;AAAA,MAF1MC,OAE0M,QAF1MA,OAE0M;AAAA,MAFjMC,WAEiM,QAFjMA,WAEiM;AAAA,MAFpLC,SAEoL,QAFpLA,SAEoL;AAAA,MAFzKC,UAEyK,QAFzKA,UAEyK;AAAA,4BAF7JC,SAE6J;AAAA,MAF7JA,SAE6J,+BAFjJJ,OAAO,IAAIC,WAAX,IAA0BC,SAA1B,IAAuCC,UAAvC,GAC3EE,SAD2E,GAE3EC,IAA4N;AAAA,MAAtNC,gBAAsN,QAAtNA,gBAAsN;AAAA,MAApMC,kBAAoM,QAApMA,kBAAoM;AAAA,MAAhLC,cAAgL,QAAhLA,cAAgL;AAAA,mCAAhKC,sBAAgK;AAAA,MAAhKA,sBAAgK,sCAAvI,IAAuI;AAAA,wBAAjIC,KAAiI;AAAA,MAAjIA,KAAiI,2BAAzH,EAAyH;AAAA,iCAArHC,cAAqH;AAAA,MAArHA,cAAqH,oCAApGC,WAAoG;AAAA,MAAvFC,MAAuF,QAAvFA,MAAuF;AAAA,MAA/EC,QAA+E,QAA/EA,QAA+E;AAAA,MAArEC,UAAqE,QAArEA,UAAqE;AAAA,mCAAzDC,kBAAyD;AAAA,MAAzDA,kBAAyD,sCAApC,GAAoC;AAAA,MAA/BC,cAA+B,QAA/BA,cAA+B;AAAA,MAAZC,KAAY;;AAC9N,MAAMC,kBAAkB,GAAGvB,KAAK,CAACwB,MAAN,CAAa,IAAIC,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAb,CAA3B;AACA,MAAMC,aAAa,GAAG1B,WAAW,CAAC,UAAC2B,KAAD,EAAW;AACzC,QAAIT,UAAJ,EAAgB;AACZM,MAAAA,QAAQ,CAACI,MAAT,CAAgBN,kBAAkB,CAACO,OAAnC,EAA4C;AACxCC,QAAAA,OAAO,EAAE,CAD+B;AAExCC,QAAAA,QAAQ,EAAEZ,kBAF8B;AAGxCa,QAAAA,eAAe,EAAE;AAHuB,OAA5C,EAIGC,KAJH;AAKH,KAND,MAOK;AACDX,MAAAA,kBAAkB,CAACO,OAAnB,CAA2BK,QAA3B,CAAoC,CAApC;AACH;;AACDlB,IAAAA,MAAM,QAAN,YAAAA,MAAM,CAAGW,KAAH,CAAN;AACH,GAZgC,EAY9B,CAACT,UAAD,EAAaC,kBAAb,EAAiCH,MAAjC,CAZ8B,CAAjC;AAaA,MAAMmB,QAAQ,GAAGC,OAAO,CAACf,KAAK,CAACgB,MAAP,CAAxB;AACA,SAAQ,MAAC,SAAD,kCAAejB,cAAf;AAAqClB,IAAAA,OAAO,EAAPA,OAArC;AAA8CE,IAAAA,SAAS,EAATA,SAA9C;AAAyDC,IAAAA,UAAU,EAAVA,UAAzD;AAAqEF,IAAAA,WAAW,EAAXA,WAArE;AAAoF,IAAA,gCAAgC,EAAE,IAAtH;AAA4H,IAAA,KAAK,EAAEmC,UAAU,CAACC,OAAX,CAAmB,CAACC,MAAM,CAACC,SAAR,EAAmB9B,cAAnB,CAAnB,CAAnI;AAAA,eACN,KAAC,cAAD;AAAgB,MAAA,MAAM,EAAC;AAAvB,OAAwCU,KAAxC;AAAqDH,MAAAA,UAAU,EAAVA,UAArD;AAAiEC,MAAAA,kBAAkB,EAAlBA,kBAAjE;AAAuF,MAAA,MAAM,EAAEO,aAA/F;AAA8G,MAAA,KAAK,EAAEY,UAAU,CAACC,OAAX,CAAmB,CAACD,UAAU,CAACI,YAAZ,EAA0B7B,KAA1B,CAAnB;AAArH,OADM,EAGN,KAAC,QAAD,CAAU,IAAV;AAAe,MAAA,aAAa,EAAEsB,QAAQ,GAAG,MAAH,GAAY,MAAlD;AAA0D,MAAA,2BAA2B,EAAEA,QAAvF;AAAiG,MAAA,yBAAyB,EAAEA,QAAQ,GAAG,qBAAH,GAA2B,KAA/J;AAAsK,MAAA,KAAK,EAAE,CACvKG,UAAU,CAACK,kBAD4J,EAEvK;AACIC,QAAAA,OAAO,EAAET,QAAQ,GAAGb,kBAAkB,CAACO,OAAtB,GAAgC;AADrD,OAFuK,CAA7K;AAAA,gBAME,KAAC,IAAD;AAAM,QAAA,MAAM,EAAC,yBAAb;AAAuC,QAAA,KAAK,EAAES,UAAU,CAACC,OAAX,CAAmB,CAC7D1B,KAD6D,EAE7D2B,MAAM,CAACK,WAFsD,EAG7DpC,gBAH6D,CAAnB,CAA9C;AAAA,kBAKGV,KAAK,CAAC+C,cAAN,CAAqBpC,kBAArB,IACGA,kBADH,GAEGA,kBAAkB,IAAK,KAAC,IAAD;AAAM,UAAA,MAAM,EAAC,kCAAb;AAAA,oBAClBA;AADkB;AAP7B;AANF,MAHM,EAsBN,KAAC,IAAD;AAAM,MAAA,MAAM,EAAC,iCAAb;AAA+C,MAAA,KAAK,EAAEE,sBAAF,WAAEA,sBAAF,GAA4BC,KAAhF;AAAA,gBACGI;AADH,MAtBM;AAAA,KAAR;AA0BH,CA5CM;AA6CP,IAAMuB,MAAM,GAAGF,UAAU,CAACS,MAAX,CAAkB;AAC7BN,EAAAA,SAAS,EAAE;AACPO,IAAAA,eAAe,EAAE,aADV;AAEPC,IAAAA,QAAQ,EAAE,UAFH;AAGPC,IAAAA,QAAQ,EAAE;AAHH,GADkB;AAM7BL,EAAAA,WAAW,EAAE;AACTG,IAAAA,eAAe,EAAE,SADR;AAETG,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE;AAHP;AANgB,CAAlB,CAAf;AAYAnD,KAAK,CAACoD,WAAN,GAAoB,OAApB","sourcesContent":["import React, { useCallback } from 'react';\nimport { Animated, Image as ImageNative, StyleSheet, View, Pressable, Text, } from 'react-native';\nexport const Image = ({ onPress, onLongPress, onPressIn, onPressOut, Component = onPress || onLongPress || onPressIn || onPressOut\n    ? Pressable\n    : View, placeholderStyle, PlaceholderContent, containerStyle, childrenContainerStyle = null, style = {}, ImageComponent = ImageNative, onLoad, children, transition, transitionDuration = 360, pressableProps, ...props }) => {\n    const placeholderOpacity = React.useRef(new Animated.Value(1));\n    const onLoadHandler = useCallback((event) => {\n        if (transition) {\n            Animated.timing(placeholderOpacity.current, {\n                toValue: 0,\n                duration: transitionDuration,\n                useNativeDriver: true,\n            }).start();\n        }\n        else {\n            placeholderOpacity.current.setValue(0);\n        }\n        onLoad?.(event);\n    }, [transition, transitionDuration, onLoad]);\n    const hasImage = Boolean(props.source);\n    return (<Component {...pressableProps} {...{ onPress, onPressIn, onPressOut, onLongPress }} accessibilityIgnoresInvertColors={true} style={StyleSheet.flatten([styles.container, containerStyle])}>\n      <ImageComponent testID=\"RNE__Image\" {...props} {...{ transition, transitionDuration }} onLoad={onLoadHandler} style={StyleSheet.flatten([StyleSheet.absoluteFill, style])}/>\n      \n      <Animated.View pointerEvents={hasImage ? 'none' : 'auto'} accessibilityElementsHidden={hasImage} importantForAccessibility={hasImage ? 'no-hide-descendants' : 'yes'} style={[\n            StyleSheet.absoluteFillObject,\n            {\n                opacity: hasImage ? placeholderOpacity.current : 1,\n            },\n        ]}>\n        <View testID=\"RNE__Image__placeholder\" style={StyleSheet.flatten([\n            style,\n            styles.placeholder,\n            placeholderStyle,\n        ])}>\n          {React.isValidElement(PlaceholderContent)\n            ? PlaceholderContent\n            : PlaceholderContent && (<Text testID=\"RNE__Image__Placeholder__Content\">\n                  {PlaceholderContent}\n                </Text>)}\n        </View>\n      </Animated.View>\n      \n      <View testID=\"RNE__Image__children__container\" style={childrenContainerStyle ?? style}>\n        {children}\n      </View>\n    </Component>);\n};\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: 'transparent',\n        position: 'relative',\n        overflow: 'hidden',\n    },\n    placeholder: {\n        backgroundColor: '#bdbdbd',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n});\nImage.displayName = 'Image';\n"]},"metadata":{},"sourceType":"module"}