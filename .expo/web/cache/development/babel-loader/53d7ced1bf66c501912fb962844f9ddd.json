{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"theme\", \"children\", \"value\", \"scrollable\", \"onChange\", \"indicatorStyle\", \"disableIndicator\", \"variant\", \"containerStyle\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { defaultTheme } from \"../helpers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var TabBase = function TabBase(_ref) {\n  var _tabItemsPosition$cur, _theme$colors, _theme$colors2;\n\n  var _ref$theme = _ref.theme,\n      theme = _ref$theme === void 0 ? defaultTheme : _ref$theme,\n      children = _ref.children,\n      value = _ref.value,\n      _ref$scrollable = _ref.scrollable,\n      scrollable = _ref$scrollable === void 0 ? false : _ref$scrollable,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === void 0 ? function () {} : _ref$onChange,\n      indicatorStyle = _ref.indicatorStyle,\n      disableIndicator = _ref.disableIndicator,\n      variant = _ref.variant,\n      containerStyle = _ref.containerStyle,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var animationRef = React.useRef(new Animated.Value(0));\n  var scrollViewRef = React.useRef(null);\n  var scrollViewPosition = React.useRef(0);\n  var tabItemsPosition = React.useRef([]);\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      tabContainerWidth = _React$useState2[0],\n      setTabContainerWidth = _React$useState2[1];\n\n  var scrollHandler = React.useCallback(function () {\n    if (tabItemsPosition.current.length > value) {\n      var itemStartPosition = value === 0 ? 0 : tabItemsPosition.current[value - 1].position;\n      var itemEndPosition = tabItemsPosition.current[value].position;\n      var scrollCurrentPosition = scrollViewPosition.current;\n      var tabContainerCurrentWidth = tabContainerWidth;\n      var scrollX = scrollCurrentPosition;\n\n      if (itemStartPosition < scrollCurrentPosition) {\n        scrollX += itemStartPosition - scrollCurrentPosition;\n      } else if (scrollCurrentPosition + tabContainerCurrentWidth < itemEndPosition) {\n        scrollX += itemEndPosition - (scrollCurrentPosition + tabContainerCurrentWidth);\n      }\n\n      scrollViewRef.current.scrollTo({\n        x: scrollX,\n        y: 0,\n        animated: true\n      });\n    }\n  }, [tabContainerWidth, value]);\n  React.useEffect(function () {\n    Animated.timing(animationRef.current, {\n      toValue: value,\n      useNativeDriver: true,\n      duration: 170\n    }).start();\n    scrollable && requestAnimationFrame(scrollHandler);\n  }, [animationRef, scrollHandler, value, scrollable]);\n  var onScrollHandler = React.useCallback(function (event) {\n    scrollViewPosition.current = event.nativeEvent.contentOffset.x;\n  }, []);\n  var indicatorTransitionInterpolate = React.useMemo(function () {\n    var countItems = React.Children.count(children);\n\n    if (countItems < 2 || !tabItemsPosition.current.length) {\n      return 0;\n    }\n\n    var inputRange = _toConsumableArray(Array(countItems).keys());\n\n    var outputRange = tabItemsPosition.current.map(function (_ref2) {\n      var position = _ref2.position;\n      return position;\n    });\n\n    if (inputRange.length !== outputRange.length) {\n      return 0;\n    }\n\n    return animationRef.current.interpolate({\n      inputRange: inputRange,\n      outputRange: [0].concat(_toConsumableArray(outputRange)).slice(0, -1)\n    });\n  }, [animationRef, children]);\n  var WIDTH = (_tabItemsPosition$cur = tabItemsPosition.current[value]) == null ? void 0 : _tabItemsPosition$cur.width;\n  return _jsx(View, _objectSpread(_objectSpread({}, rest), {}, {\n    accessibilityRole: \"tablist\",\n    style: [variant === 'primary' && {\n      backgroundColor: theme == null ? void 0 : (_theme$colors = theme.colors) == null ? void 0 : _theme$colors.primary\n    }, styles.viewStyle, containerStyle],\n    onLayout: function onLayout(_ref3) {\n      var layout = _ref3.nativeEvent.layout;\n      setTabContainerWidth(layout.width);\n    },\n    children: React.createElement(scrollable ? ScrollView : React.Fragment, _objectSpread(_objectSpread({}, scrollable && {\n      horizontal: true,\n      ref: scrollViewRef,\n      onScroll: onScrollHandler,\n      showsHorizontalScrollIndicator: false\n    }), {}, {\n      children: _jsxs(_Fragment, {\n        children: [React.Children.map(children, function (child, index) {\n          return React.cloneElement(child, {\n            onPress: function onPress() {\n              return onChange(index);\n            },\n            onLayout: function onLayout(event) {\n              var _tabItemsPosition$cur2;\n\n              var width = event.nativeEvent.layout.width;\n              var previousItemPosition = ((_tabItemsPosition$cur2 = tabItemsPosition.current[index - 1]) == null ? void 0 : _tabItemsPosition$cur2.position) || 0;\n              tabItemsPosition.current[index] = {\n                position: previousItemPosition + width,\n                width: width\n              };\n            },\n            active: index === value,\n            variant: variant\n          });\n        }), !disableIndicator && _jsx(Animated.View, {\n          style: [styles.indicator, {\n            backgroundColor: theme == null ? void 0 : (_theme$colors2 = theme.colors) == null ? void 0 : _theme$colors2.secondary,\n            transform: [{\n              translateX: indicatorTransitionInterpolate\n            }],\n            width: WIDTH\n          }, indicatorStyle]\n        })]\n      })\n    }))\n  }));\n};\nvar styles = StyleSheet.create({\n  buttonStyle: {\n    borderRadius: 0,\n    backgroundColor: 'transparent'\n  },\n  titleStyle: {\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    textTransform: 'uppercase'\n  },\n  containerStyle: {\n    flex: 1,\n    borderRadius: 0\n  },\n  viewStyle: {\n    flexDirection: 'row',\n    position: 'relative'\n  },\n  indicator: {\n    display: 'flex',\n    position: 'absolute',\n    height: 2,\n    bottom: 0\n  }\n});\nTabBase.displayName = 'Tab';","map":{"version":3,"sources":["C:/Users/Spencer/Documents/Code/WATO/wato/node_modules/@react-native-elements/base/dist/Tab/Tab.js"],"names":["React","defaultTheme","TabBase","theme","children","value","scrollable","onChange","indicatorStyle","disableIndicator","variant","containerStyle","rest","animationRef","useRef","Animated","Value","scrollViewRef","scrollViewPosition","tabItemsPosition","useState","tabContainerWidth","setTabContainerWidth","scrollHandler","useCallback","current","length","itemStartPosition","position","itemEndPosition","scrollCurrentPosition","tabContainerCurrentWidth","scrollX","scrollTo","x","y","animated","useEffect","timing","toValue","useNativeDriver","duration","start","requestAnimationFrame","onScrollHandler","event","nativeEvent","contentOffset","indicatorTransitionInterpolate","useMemo","countItems","Children","count","inputRange","Array","keys","outputRange","map","interpolate","slice","WIDTH","width","backgroundColor","colors","primary","styles","viewStyle","layout","createElement","ScrollView","Fragment","horizontal","ref","onScroll","showsHorizontalScrollIndicator","child","index","cloneElement","onPress","onLayout","previousItemPosition","active","indicator","secondary","transform","translateX","StyleSheet","create","buttonStyle","borderRadius","titleStyle","paddingHorizontal","paddingVertical","textTransform","flex","flexDirection","display","height","bottom","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Animated, StyleSheet, ScrollView, } from 'react-native';\nimport { defaultTheme } from '../helpers';\nexport const TabBase = ({ theme = defaultTheme, children, value, scrollable = false, onChange = () => { }, indicatorStyle, disableIndicator, variant, containerStyle, ...rest }) => {\n    const animationRef = React.useRef(new Animated.Value(0));\n    const scrollViewRef = React.useRef(null);\n    const scrollViewPosition = React.useRef(0);\n    const tabItemsPosition = React.useRef([]);\n    const [tabContainerWidth, setTabContainerWidth] = React.useState(0);\n    const scrollHandler = React.useCallback(() => {\n        if (tabItemsPosition.current.length > value) {\n            let itemStartPosition = value === 0 ? 0 : tabItemsPosition.current[value - 1].position;\n            let itemEndPosition = tabItemsPosition.current[value].position;\n            const scrollCurrentPosition = scrollViewPosition.current;\n            const tabContainerCurrentWidth = tabContainerWidth;\n            let scrollX = scrollCurrentPosition;\n            if (itemStartPosition < scrollCurrentPosition) {\n                scrollX += itemStartPosition - scrollCurrentPosition;\n            }\n            else if (scrollCurrentPosition + tabContainerCurrentWidth <\n                itemEndPosition) {\n                scrollX +=\n                    itemEndPosition - (scrollCurrentPosition + tabContainerCurrentWidth);\n            }\n            scrollViewRef.current.scrollTo({\n                x: scrollX,\n                y: 0,\n                animated: true,\n            });\n        }\n    }, [tabContainerWidth, value]);\n    React.useEffect(() => {\n        Animated.timing(animationRef.current, {\n            toValue: value,\n            useNativeDriver: true,\n            duration: 170,\n        }).start();\n        scrollable && requestAnimationFrame(scrollHandler);\n    }, [animationRef, scrollHandler, value, scrollable]);\n    const onScrollHandler = React.useCallback((event) => {\n        scrollViewPosition.current = event.nativeEvent.contentOffset.x;\n    }, []);\n    const indicatorTransitionInterpolate = React.useMemo(() => {\n        const countItems = React.Children.count(children);\n        if (countItems < 2 || !tabItemsPosition.current.length) {\n            return 0;\n        }\n        const inputRange = [...Array(countItems).keys()];\n        const outputRange = tabItemsPosition.current.map(({ position }) => position);\n        if (inputRange.length !== outputRange.length) {\n            return 0;\n        }\n        return animationRef.current.interpolate({\n            inputRange,\n            outputRange: [0, ...outputRange].slice(0, -1),\n        });\n    }, [animationRef, children]);\n    const WIDTH = tabItemsPosition.current[value]?.width;\n    return (<View {...rest} accessibilityRole=\"tablist\" style={[\n            variant === 'primary' && {\n                backgroundColor: theme?.colors?.primary,\n            },\n            styles.viewStyle,\n            containerStyle,\n        ]} onLayout={({ nativeEvent: { layout } }) => {\n            setTabContainerWidth(layout.width);\n        }}>\n      {React.createElement(scrollable ? ScrollView : React.Fragment, {\n            ...(scrollable && {\n                horizontal: true,\n                ref: scrollViewRef,\n                onScroll: onScrollHandler,\n                showsHorizontalScrollIndicator: false,\n            }),\n            children: (<>\n            {React.Children.map(children, (child, index) => {\n                    return React.cloneElement(child, {\n                        onPress: () => onChange(index),\n                        onLayout: (event) => {\n                            const { width } = event.nativeEvent.layout;\n                            const previousItemPosition = tabItemsPosition.current[index - 1]?.position || 0;\n                            tabItemsPosition.current[index] = {\n                                position: previousItemPosition + width,\n                                width,\n                            };\n                        },\n                        active: index === value,\n                        variant,\n                    });\n                })}\n            {!disableIndicator && (<Animated.View style={[\n                        styles.indicator,\n                        {\n                            backgroundColor: theme?.colors?.secondary,\n                            transform: [\n                                {\n                                    translateX: indicatorTransitionInterpolate,\n                                },\n                            ],\n                            width: WIDTH,\n                        },\n                        indicatorStyle,\n                    ]}/>)}\n          </>),\n        })}\n    </View>);\n};\nconst styles = StyleSheet.create({\n    buttonStyle: {\n        borderRadius: 0,\n        backgroundColor: 'transparent',\n    },\n    titleStyle: {\n        paddingHorizontal: 16,\n        paddingVertical: 8,\n        textTransform: 'uppercase',\n    },\n    containerStyle: {\n        flex: 1,\n        borderRadius: 0,\n    },\n    viewStyle: {\n        flexDirection: 'row',\n        position: 'relative',\n    },\n    indicator: {\n        display: 'flex',\n        position: 'absolute',\n        height: 2,\n        bottom: 0,\n    },\n});\nTabBase.displayName = 'Tab';\n"]},"metadata":{},"sourceType":"module"}