{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"value\", \"disabled\", \"onValueChange\", \"color\", \"style\", \"theme\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport NativeSwitch from \"react-native-web/dist/exports/Switch\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { defaultTheme } from \"../helpers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var Switch = function Switch(_ref) {\n  var _theme$colors, _theme$colors2, _theme$colors3;\n\n  var _ref$value = _ref.value,\n      value = _ref$value === void 0 ? false : _ref$value,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      onValueChange = _ref.onValueChange,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'primary' : _ref$color,\n      style = _ref.style,\n      _ref$theme = _ref.theme,\n      theme = _ref$theme === void 0 ? defaultTheme : _ref$theme,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var switchedOnColor = color === 'primary' ? theme != null && (_theme$colors = theme.colors) != null && _theme$colors.primary ? theme.colors.primary : '' : color;\n  var onTintColor = Platform.OS === 'ios' || !disabled ? switchedOnColor : theme != null && (_theme$colors2 = theme.colors) != null && _theme$colors2.disabled ? theme.colors.disabled : '';\n  var thumbTintColor = Platform.OS === 'ios' ? undefined : disabled || !value ? theme == null ? void 0 : (_theme$colors3 = theme.colors) == null ? void 0 : _theme$colors3.disabled : switchedOnColor;\n  var props = Platform.OS === 'web' ? {\n    activeTrackColor: onTintColor,\n    thumbColor: thumbTintColor,\n    activeThumbColor: switchedOnColor\n  } : {\n    thumbColor: thumbTintColor,\n    trackColor: {\n      true: onTintColor,\n      false: ''\n    }\n  };\n  return _jsx(NativeSwitch, _objectSpread(_objectSpread({\n    testID: \"RNE__SWITCH\",\n    value: value,\n    accessibilityState: {\n      checked: value,\n      disabled: disabled\n    },\n    disabled: disabled,\n    onValueChange: disabled ? undefined : onValueChange,\n    style: style\n  }, props), rest));\n};\nSwitch.displayName = 'Switch';","map":{"version":3,"sources":["C:/Users/Spencer/Documents/Code/WATO/wato/node_modules/@react-native-elements/base/dist/Switch/Switch.js"],"names":["React","defaultTheme","Switch","value","disabled","onValueChange","color","style","theme","rest","switchedOnColor","colors","primary","onTintColor","Platform","OS","thumbTintColor","undefined","props","activeTrackColor","thumbColor","activeThumbColor","trackColor","true","false","checked","displayName"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,YAAT;;AACA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAiH;AAAA;;AAAA,wBAA9GC,KAA8G;AAAA,MAA9GA,KAA8G,2BAAtG,KAAsG;AAAA,2BAA/FC,QAA+F;AAAA,MAA/FA,QAA+F,8BAApF,KAAoF;AAAA,MAA7EC,aAA6E,QAA7EA,aAA6E;AAAA,wBAA9DC,KAA8D;AAAA,MAA9DA,KAA8D,2BAAtD,SAAsD;AAAA,MAA3CC,KAA2C,QAA3CA,KAA2C;AAAA,wBAApCC,KAAoC;AAAA,MAApCA,KAAoC,2BAA5BP,YAA4B;AAAA,MAAXQ,IAAW;;AACnI,MAAMC,eAAe,GAAGJ,KAAK,KAAK,SAAV,GAClBE,KAAK,QAAL,qBAAAA,KAAK,CAAEG,MAAP,2BAAeC,OAAf,GACIJ,KAAK,CAACG,MAAN,CAAaC,OADjB,GAEI,EAHc,GAIlBN,KAJN;AAKA,MAAMO,WAAW,GAAGC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,IAAyB,CAACX,QAA1B,GACdM,eADc,GAEdF,KAAK,QAAL,sBAAAA,KAAK,CAAEG,MAAP,4BAAeP,QAAf,GACII,KAAK,CAACG,MAAN,CAAaP,QADjB,GAEI,EAJV;AAKA,MAAMY,cAAc,GAAGF,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GACjBE,SADiB,GAEjBb,QAAQ,IAAI,CAACD,KAAb,GACIK,KADJ,sCACIA,KAAK,CAAEG,MADX,qBACI,eAAeP,QADnB,GAEIM,eAJV;AAKA,MAAMQ,KAAK,GAAGJ,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GACR;AACEI,IAAAA,gBAAgB,EAAEN,WADpB;AAEEO,IAAAA,UAAU,EAAEJ,cAFd;AAGEK,IAAAA,gBAAgB,EAAEX;AAHpB,GADQ,GAMR;AACEU,IAAAA,UAAU,EAAEJ,cADd;AAEEM,IAAAA,UAAU,EAAE;AACRC,MAAAA,IAAI,EAAEV,WADE;AAERW,MAAAA,KAAK,EAAE;AAFC;AAFd,GANN;AAaA,SAAQ,KAAC,YAAD;AAAc,IAAA,MAAM,EAAC,aAArB;AAAmC,IAAA,KAAK,EAAErB,KAA1C;AAAiD,IAAA,kBAAkB,EAAE;AACrEsB,MAAAA,OAAO,EAAEtB,KAD4D;AAErEC,MAAAA,QAAQ,EAARA;AAFqE,KAArE;AAGD,IAAA,QAAQ,EAAEA,QAHT;AAGmB,IAAA,aAAa,EAAEA,QAAQ,GAAGa,SAAH,GAAeZ,aAHzD;AAGwE,IAAA,KAAK,EAAEE;AAH/E,KAG0FW,KAH1F,GAGqGT,IAHrG,EAAR;AAIH,CAjCM;AAkCPP,MAAM,CAACwB,WAAP,GAAqB,QAArB","sourcesContent":["import React from 'react';\nimport { Switch as NativeSwitch, Platform, } from 'react-native';\nimport { defaultTheme } from '../helpers';\nexport const Switch = ({ value = false, disabled = false, onValueChange, color = 'primary', style, theme = defaultTheme, ...rest }) => {\n    const switchedOnColor = color === 'primary'\n        ? theme?.colors?.primary\n            ? theme.colors.primary\n            : ''\n        : color;\n    const onTintColor = Platform.OS === 'ios' || !disabled\n        ? switchedOnColor\n        : theme?.colors?.disabled\n            ? theme.colors.disabled\n            : '';\n    const thumbTintColor = Platform.OS === 'ios'\n        ? undefined\n        : disabled || !value\n            ? theme?.colors?.disabled\n            : switchedOnColor;\n    const props = Platform.OS === 'web'\n        ? {\n            activeTrackColor: onTintColor,\n            thumbColor: thumbTintColor,\n            activeThumbColor: switchedOnColor,\n        }\n        : {\n            thumbColor: thumbTintColor,\n            trackColor: {\n                true: onTintColor,\n                false: '',\n            },\n        };\n    return (<NativeSwitch testID=\"RNE__SWITCH\" value={value} accessibilityState={{\n            checked: value,\n            disabled,\n        }} disabled={disabled} onValueChange={disabled ? undefined : onValueChange} style={style} {...props} {...rest}/>);\n};\nSwitch.displayName = 'Switch';\n"]},"metadata":{},"sourceType":"module"}