{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"updateTheme\", \"replaceTheme\", \"onClear\"];\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport color from 'color';\nimport renderNode from \"./renderNode\";\nimport getIconType from \"./getIconType\";\nimport normalizeText from \"./normalizeText\";\nimport { colors } from \"./index-config\";\nvar Screen = Dimensions.get('window');\nvar ScreenWidth = Screen.width;\nvar ScreenHeight = Screen.height;\nvar isIOS = Platform.OS === 'ios';\nexport var defaultTheme = {\n  colors: colors\n};\nexport var androidRipple = function androidRipple(rippleColor) {\n  return {\n    borderless: false,\n    color: rippleColor,\n    radius: -5\n  };\n};\nexport var patchWebProps = function patchWebProps(_ref) {\n  var updateTheme = _ref.updateTheme,\n      replaceTheme = _ref.replaceTheme,\n      onClear = _ref.onClear,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return rest;\n};\nexport { renderNode, getIconType, normalizeText, ScreenWidth, ScreenHeight, isIOS, colors, color };","map":{"version":3,"sources":["C:/Users/Spencer/Documents/Code/WATO/wato/node_modules/@react-native-elements/base/dist/helpers/index.js"],"names":["color","renderNode","getIconType","normalizeText","colors","Screen","Dimensions","get","ScreenWidth","width","ScreenHeight","height","isIOS","Platform","OS","defaultTheme","androidRipple","rippleColor","borderless","radius","patchWebProps","updateTheme","replaceTheme","onClear","rest"],"mappings":";;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP;AACA,OAAOC,WAAP;AACA,OAAOC,aAAP;AACA,SAASC,MAAT;AACA,IAAMC,MAAM,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,CAAf;AACA,IAAMC,WAAW,GAAGH,MAAM,CAACI,KAA3B;AACA,IAAMC,YAAY,GAAGL,MAAM,CAACM,MAA5B;AACA,IAAMC,KAAK,GAAGC,QAAQ,CAACC,EAAT,KAAgB,KAA9B;AACA,OAAO,IAAMC,YAAY,GAAG;AACxBX,EAAAA,MAAM,EAANA;AADwB,CAArB;AAGP,OAAO,IAAMY,aAAa,GAAG,SAAhBA,aAAgB,CAACC,WAAD,EAAiB;AAC1C,SAAO;AACHC,IAAAA,UAAU,EAAE,KADT;AAEHlB,IAAAA,KAAK,EAAEiB,WAFJ;AAGHE,IAAAA,MAAM,EAAE,CAAC;AAHN,GAAP;AAKH,CANM;AAOP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAqD;AAAA,MAAlDC,WAAkD,QAAlDA,WAAkD;AAAA,MAArCC,YAAqC,QAArCA,YAAqC;AAAA,MAAvBC,OAAuB,QAAvBA,OAAuB;AAAA,MAAXC,IAAW;;AAC9E,SAAOA,IAAP;AACH,CAFM;AAGP,SAASvB,UAAT,EAAqBC,WAArB,EAAkCC,aAAlC,EAAiDK,WAAjD,EAA8DE,YAA9D,EAA4EE,KAA5E,EAAmFR,MAAnF,EAA2FJ,KAA3F","sourcesContent":["import { Platform, Dimensions, } from 'react-native';\nimport color from 'color';\nimport renderNode from './renderNode';\nimport getIconType from './getIconType';\nimport normalizeText from './normalizeText';\nimport { colors } from './index-config';\nconst Screen = Dimensions.get('window');\nconst ScreenWidth = Screen.width;\nconst ScreenHeight = Screen.height;\nconst isIOS = Platform.OS === 'ios';\nexport const defaultTheme = {\n    colors,\n};\nexport const androidRipple = (rippleColor) => {\n    return {\n        borderless: false,\n        color: rippleColor,\n        radius: -5,\n    };\n};\nexport const patchWebProps = ({ updateTheme, replaceTheme, onClear, ...rest }) => {\n    return rest;\n};\nexport { renderNode, getIconType, normalizeText, ScreenWidth, ScreenHeight, isIOS, colors, color, };\n"]},"metadata":{},"sourceType":"module"}