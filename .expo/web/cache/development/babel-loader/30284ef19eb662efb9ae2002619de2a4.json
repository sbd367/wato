{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"activityIndicatorStyle\", \"button\", \"disabled\", \"fontFamily\", \"fontStyle\", \"fontWeight\", \"iconType\", \"iconColor\", \"iconSize\", \"iconStyle\", \"light\", \"loading\", \"onLongPress\", \"onPress\", \"onPressOut\", \"onPressIn\", \"Component\", \"raised\", \"small\", \"style\", \"title\", \"type\", \"underlayColor\", \"pressableProps\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Icon } from \"../Icon\";\nimport { Text } from \"../Text\";\nimport fonts from \"../helpers/fonts\";\nimport { androidRipple } from \"../helpers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar colors = {\n  'github-alt': '#000000',\n  'google-plus-official': '#dd4b39',\n  google: '#dd4b39',\n  'reddit-alien': '#fc461e',\n  'stack-overflow': '#f27f33',\n  angellist: '#1c4082',\n  codepen: '#000000',\n  envelope: '#000000',\n  etsy: '#f2581e',\n  facebook: '#4267B2',\n  'facebook-messenger': '#0084ff',\n  flickr: '#ff0084',\n  foursquare: '#0072b1',\n  github: '#000000',\n  gitlab: '#e14329',\n  instagram: '#517fa4',\n  linkedin: '#007bb6',\n  medium: '#02b875',\n  pinterest: '#cb2027',\n  quora: '#a82400',\n  soundcloud: '#f50',\n  steam: '#c6c3c1',\n  stumbleupon: '#EB4823',\n  tumblr: '#32506d',\n  twitch: '#6441A5',\n  twitter: '#00aced',\n  vimeo: '#aad450',\n  vk: '#5181b8',\n  wechat: '#7bb32e',\n  weibo: '#e6162d',\n  whatsapp: '#075e54',\n  wordpress: '#21759b',\n  youtube: '#bb0000',\n  microsoft: '#46A4F2',\n  reddit: '#ed452f'\n};\nexport var SocialIcon = function SocialIcon(_ref) {\n  var activityIndicatorStyle = _ref.activityIndicatorStyle,\n      _ref$button = _ref.button,\n      button = _ref$button === void 0 ? false : _ref$button,\n      disabled = _ref.disabled,\n      fontFamily = _ref.fontFamily,\n      fontStyle = _ref.fontStyle,\n      fontWeight = _ref.fontWeight,\n      _ref$iconType = _ref.iconType,\n      iconType = _ref$iconType === void 0 ? 'font-awesome' : _ref$iconType,\n      _ref$iconColor = _ref.iconColor,\n      iconColor = _ref$iconColor === void 0 ? 'white' : _ref$iconColor,\n      _ref$iconSize = _ref.iconSize,\n      iconSize = _ref$iconSize === void 0 ? 24 : _ref$iconSize,\n      iconStyle = _ref.iconStyle,\n      light = _ref.light,\n      loading = _ref.loading,\n      onLongPress = _ref.onLongPress,\n      onPress = _ref.onPress,\n      onPressOut = _ref.onPressOut,\n      onPressIn = _ref.onPressIn,\n      _ref$Component = _ref.Component,\n      Component = _ref$Component === void 0 ? onPress || onLongPress || onPressIn || onPressOut ? Pressable : View : _ref$Component,\n      _ref$raised = _ref.raised,\n      raised = _ref$raised === void 0 ? true : _ref$raised,\n      small = _ref.small,\n      style = _ref.style,\n      title = _ref.title,\n      type = _ref.type,\n      underlayColor = _ref.underlayColor,\n      pressableProps = _ref.pressableProps,\n      attributes = _objectWithoutProperties(_ref, _excluded);\n\n  var shouldShowExpandedButton = button && title;\n  return _jsx(Component, _objectSpread(_objectSpread({}, _objectSpread(_objectSpread({\n    onLongPress: onLongPress,\n    onPress: onPress,\n    onPressOut: onPressOut,\n    onPressIn: onPressIn,\n    android_ripple: androidRipple(light ? 'white' : underlayColor || type && colors[type])\n  }, pressableProps), attributes)), {}, {\n    testID: \"RNE_SocialIcon\",\n    underlayColor: light ? 'white' : underlayColor || type && colors[type],\n    disabled: disabled,\n    style: StyleSheet.flatten([raised && styles.raised, styles.container, button && styles.button, !button && raised && styles.icon, !button && !light && !raised && {\n      width: iconSize * 2 + 4,\n      height: iconSize * 2 + 4,\n      borderRadius: iconSize * 2\n    }, {\n      backgroundColor: type && colors[type]\n    }, {\n      width: iconSize * 2 + 4,\n      height: iconSize * 2 + 4,\n      borderRadius: iconSize * 2\n    }, light && {\n      backgroundColor: 'white'\n    }, style && style]),\n    children: _jsxs(View, {\n      style: styles.wrapper,\n      children: [(shouldShowExpandedButton || !loading) && _jsx(Icon, {\n        testID: \"RNE_Icon\",\n        iconStyle: StyleSheet.flatten([iconStyle && iconStyle]),\n        color: light ? type && colors[type] : iconColor,\n        name: type,\n        size: iconSize,\n        type: iconType\n      }), shouldShowExpandedButton && _jsx(Text, {\n        style: StyleSheet.flatten([styles.title, light && {\n          color: type && colors[type]\n        }, fontFamily && {\n          fontFamily: fontFamily\n        }, fontWeight && {\n          fontWeight: fontWeight\n        }, fontStyle && fontStyle]),\n        children: title\n      }), loading && _jsx(ActivityIndicator, {\n        testID: \"RNE_ActivityIndicator\",\n        animating: true,\n        style: StyleSheet.flatten([styles.activityIndicatorStyle, activityIndicatorStyle]),\n        color: light ? type && colors[type] : iconColor || 'white',\n        size: small && 'small' || 'large'\n      })]\n    })\n  }));\n};\nvar styles = StyleSheet.create({\n  container: {\n    margin: 7,\n    borderRadius: 30,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  button: {\n    paddingTop: 14,\n    paddingBottom: 14\n  },\n  raised: _objectSpread({}, Platform.select({\n    android: {\n      elevation: 2\n    },\n    default: {\n      shadowColor: 'rgba(0,0,0, .4)',\n      shadowOffset: {\n        height: 1,\n        width: 1\n      },\n      shadowOpacity: 1,\n      shadowRadius: 1\n    }\n  })),\n  wrapper: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  title: _objectSpread({\n    color: 'white',\n    marginLeft: 15\n  }, Platform.select({\n    android: _objectSpread({}, fonts.android.black),\n    default: {\n      fontWeight: 'bold'\n    }\n  })),\n  icon: {\n    height: 52,\n    width: 52\n  },\n  activityIndicatorStyle: {\n    marginHorizontal: 10,\n    height: 0\n  }\n});\nSocialIcon.displayName = 'SocialIcon';","map":{"version":3,"sources":["C:/Users/Spencer/Documents/Code/WATO/wato/node_modules/@react-native-elements/base/dist/SocialIcon/SocialIcon.js"],"names":["React","Icon","Text","fonts","androidRipple","colors","google","angellist","codepen","envelope","etsy","facebook","flickr","foursquare","github","gitlab","instagram","linkedin","medium","pinterest","quora","soundcloud","steam","stumbleupon","tumblr","twitch","twitter","vimeo","vk","wechat","weibo","whatsapp","wordpress","youtube","microsoft","reddit","SocialIcon","activityIndicatorStyle","button","disabled","fontFamily","fontStyle","fontWeight","iconType","iconColor","iconSize","iconStyle","light","loading","onLongPress","onPress","onPressOut","onPressIn","Component","Pressable","View","raised","small","style","title","type","underlayColor","pressableProps","attributes","shouldShowExpandedButton","android_ripple","StyleSheet","flatten","styles","container","icon","width","height","borderRadius","backgroundColor","wrapper","color","create","margin","flexDirection","justifyContent","alignItems","paddingTop","paddingBottom","Platform","select","android","elevation","default","shadowColor","shadowOffset","shadowOpacity","shadowRadius","marginLeft","black","marginHorizontal","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, StyleSheet, Platform, Pressable, ActivityIndicator, } from 'react-native';\nimport { Icon } from '../Icon';\nimport { Text } from '../Text';\nimport fonts from '../helpers/fonts';\nimport { androidRipple, } from '../helpers';\nconst colors = {\n    'github-alt': '#000000',\n    'google-plus-official': '#dd4b39',\n    google: '#dd4b39',\n    'reddit-alien': '#fc461e',\n    'stack-overflow': '#f27f33',\n    angellist: '#1c4082',\n    codepen: '#000000',\n    envelope: '#000000',\n    etsy: '#f2581e',\n    facebook: '#4267B2',\n    'facebook-messenger': '#0084ff',\n    flickr: '#ff0084',\n    foursquare: '#0072b1',\n    github: '#000000',\n    gitlab: '#e14329',\n    instagram: '#517fa4',\n    linkedin: '#007bb6',\n    medium: '#02b875',\n    pinterest: '#cb2027',\n    quora: '#a82400',\n    soundcloud: '#f50',\n    steam: '#c6c3c1',\n    stumbleupon: '#EB4823',\n    tumblr: '#32506d',\n    twitch: '#6441A5',\n    twitter: '#00aced',\n    vimeo: '#aad450',\n    vk: '#5181b8',\n    wechat: '#7bb32e',\n    weibo: '#e6162d',\n    whatsapp: '#075e54',\n    wordpress: '#21759b',\n    youtube: '#bb0000',\n    microsoft: '#46A4F2',\n    reddit: '#ed452f',\n};\nexport const SocialIcon = ({ activityIndicatorStyle, button = false, disabled, fontFamily, fontStyle, fontWeight, iconType = 'font-awesome', iconColor = 'white', iconSize = 24, iconStyle, light, loading, onLongPress, onPress, onPressOut, onPressIn, Component = onPress || onLongPress || onPressIn || onPressOut\n    ? Pressable\n    : View, raised = true, small, style, title, type, underlayColor, pressableProps, ...attributes }) => {\n    const shouldShowExpandedButton = button && title;\n    return (<Component {...{\n        onLongPress,\n        onPress,\n        onPressOut,\n        onPressIn,\n        android_ripple: androidRipple(light ? 'white' : underlayColor || (type && colors[type])),\n        ...pressableProps,\n        ...attributes,\n    }} testID=\"RNE_SocialIcon\" underlayColor={light ? 'white' : underlayColor || (type && colors[type])} disabled={disabled} style={StyleSheet.flatten([\n            raised && styles.raised,\n            styles.container,\n            button && styles.button,\n            !button && raised && styles.icon,\n            !button &&\n                !light &&\n                !raised && {\n                width: iconSize * 2 + 4,\n                height: iconSize * 2 + 4,\n                borderRadius: iconSize * 2,\n            },\n            { backgroundColor: type && colors[type] },\n            {\n                width: iconSize * 2 + 4,\n                height: iconSize * 2 + 4,\n                borderRadius: iconSize * 2,\n            },\n            light && { backgroundColor: 'white' },\n            style && style,\n        ])}>\n      <View style={styles.wrapper}>\n        {(shouldShowExpandedButton || !loading) && (<Icon testID=\"RNE_Icon\" iconStyle={StyleSheet.flatten([iconStyle && iconStyle])} color={light ? type && colors[type] : iconColor} name={type} size={iconSize} type={iconType}/>)}\n        {shouldShowExpandedButton && (<Text style={StyleSheet.flatten([\n                styles.title,\n                light && { color: type && colors[type] },\n                fontFamily && { fontFamily },\n                fontWeight && { fontWeight },\n                fontStyle && fontStyle,\n            ])}>\n            {title}\n          </Text>)}\n\n        {loading && (<ActivityIndicator testID=\"RNE_ActivityIndicator\" animating style={StyleSheet.flatten([\n                styles.activityIndicatorStyle,\n                activityIndicatorStyle,\n            ])} color={light ? type && colors[type] : iconColor || 'white'} size={(small && 'small') || 'large'}/>)}\n      </View>\n    </Component>);\n};\nconst styles = StyleSheet.create({\n    container: {\n        margin: 7,\n        borderRadius: 30,\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    button: {\n        paddingTop: 14,\n        paddingBottom: 14,\n    },\n    raised: {\n        ...Platform.select({\n            android: {\n                elevation: 2,\n            },\n            default: {\n                shadowColor: 'rgba(0,0,0, .4)',\n                shadowOffset: { height: 1, width: 1 },\n                shadowOpacity: 1,\n                shadowRadius: 1,\n            },\n        }),\n    },\n    wrapper: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    title: {\n        color: 'white',\n        marginLeft: 15,\n        ...Platform.select({\n            android: {\n                ...fonts.android.black,\n            },\n            default: {\n                fontWeight: 'bold',\n            },\n        }),\n    },\n    icon: {\n        height: 52,\n        width: 52,\n    },\n    activityIndicatorStyle: {\n        marginHorizontal: 10,\n        height: 0,\n    },\n});\nSocialIcon.displayName = 'SocialIcon';\n"]},"metadata":{},"sourceType":"module"}