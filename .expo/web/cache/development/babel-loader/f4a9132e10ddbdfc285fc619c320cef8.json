{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"Component\", \"isVisible\", \"onLayout\", \"style\", \"start\", \"color\", \"vertical\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar THUMB_SIZE = 40;\nexport var SliderThumb = function SliderThumb(_ref) {\n  var Component = _ref.Component,\n      isVisible = _ref.isVisible,\n      onLayout = _ref.onLayout,\n      style = _ref.style,\n      start = _ref.start,\n      color = _ref.color,\n      vertical = _ref.vertical,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var ThumbComponent = Component || Animated.View;\n  var axis = vertical ? 'translateY' : 'translateX';\n  var thumbPosition = [_defineProperty({}, axis, start)];\n  var styleTransform = style && style.transform || [];\n  var visibleStyle = isVisible ? {} : {\n    height: 0,\n    width: 0\n  };\n  return _jsx(ThumbComponent, _objectSpread({\n    testID: \"RNE__Slider_Thumb\",\n    onLayout: onLayout,\n    style: StyleSheet.flatten([_objectSpread({\n      backgroundColor: color,\n      transform: [].concat(thumbPosition, _toConsumableArray(styleTransform))\n    }, visibleStyle), styles.thumb, style])\n  }, props));\n};\nvar styles = StyleSheet.create({\n  thumb: {\n    position: 'absolute',\n    width: THUMB_SIZE,\n    height: THUMB_SIZE,\n    borderRadius: THUMB_SIZE / 2\n  }\n});","map":{"version":3,"sources":["C:/Users/Spencer/Documents/Code/WATO/wato/node_modules/@react-native-elements/base/dist/Slider/components/SliderThumb.js"],"names":["React","THUMB_SIZE","SliderThumb","Component","isVisible","onLayout","style","start","color","vertical","props","ThumbComponent","Animated","View","axis","thumbPosition","styleTransform","transform","visibleStyle","height","width","StyleSheet","flatten","backgroundColor","styles","thumb","create","position","borderRadius"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,IAAMC,UAAU,GAAG,EAAnB;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAiF;AAAA,MAA9EC,SAA8E,QAA9EA,SAA8E;AAAA,MAAnEC,SAAmE,QAAnEA,SAAmE;AAAA,MAAxDC,QAAwD,QAAxDA,QAAwD;AAAA,MAA9CC,KAA8C,QAA9CA,KAA8C;AAAA,MAAvCC,KAAuC,QAAvCA,KAAuC;AAAA,MAAhCC,KAAgC,QAAhCA,KAAgC;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAZC,KAAY;;AACxG,MAAMC,cAAc,GAAGR,SAAS,IAAIS,QAAQ,CAACC,IAA7C;AACA,MAAMC,IAAI,GAAGL,QAAQ,GAAG,YAAH,GAAkB,YAAvC;AACA,MAAMM,aAAa,GAAG,qBAAID,IAAJ,EAAWP,KAAX,EAAtB;AACA,MAAMS,cAAc,GAAIV,KAAK,IAAIA,KAAK,CAACW,SAAhB,IAA8B,EAArD;AACA,MAAMC,YAAY,GAAGd,SAAS,GAAG,EAAH,GAAQ;AAAEe,IAAAA,MAAM,EAAE,CAAV;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAAtC;AACA,SAAQ,KAAC,cAAD;AAAgB,IAAA,MAAM,EAAC,mBAAvB;AAA2C,IAAA,QAAQ,EAAEf,QAArD;AAA+D,IAAA,KAAK,EAAEgB,UAAU,CAACC,OAAX,CAAmB;AAErFC,MAAAA,eAAe,EAAEf,KAFoE;AAGrFS,MAAAA,SAAS,YAAMF,aAAN,qBAAwBC,cAAxB;AAH4E,OAIlFE,YAJkF,GAMzFM,MAAM,CAACC,KANkF,EAOzFnB,KAPyF,CAAnB;AAAtE,KAQII,KARJ,EAAR;AASH,CAfM;AAgBP,IAAMc,MAAM,GAAGH,UAAU,CAACK,MAAX,CAAkB;AAC7BD,EAAAA,KAAK,EAAE;AACHE,IAAAA,QAAQ,EAAE,UADP;AAEHP,IAAAA,KAAK,EAAEnB,UAFJ;AAGHkB,IAAAA,MAAM,EAAElB,UAHL;AAIH2B,IAAAA,YAAY,EAAE3B,UAAU,GAAG;AAJxB;AADsB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, Animated } from 'react-native';\nconst THUMB_SIZE = 40;\nexport const SliderThumb = ({ Component, isVisible, onLayout, style, start, color, vertical, ...props }) => {\n    const ThumbComponent = Component || Animated.View;\n    const axis = vertical ? 'translateY' : 'translateX';\n    const thumbPosition = [{ [axis]: start }];\n    const styleTransform = (style && style.transform) || [];\n    const visibleStyle = isVisible ? {} : { height: 0, width: 0 };\n    return (<ThumbComponent testID=\"RNE__Slider_Thumb\" onLayout={onLayout} style={StyleSheet.flatten([\n            {\n                backgroundColor: color,\n                transform: [...thumbPosition, ...styleTransform],\n                ...visibleStyle,\n            },\n            styles.thumb,\n            style,\n        ])} {...props}/>);\n};\nconst styles = StyleSheet.create({\n    thumb: {\n        position: 'absolute',\n        width: THUMB_SIZE,\n        height: THUMB_SIZE,\n        borderRadius: THUMB_SIZE / 2,\n    },\n});\n"]},"metadata":{},"sourceType":"module"}