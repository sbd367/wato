{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var TabViewBase = function TabViewBase(_ref) {\n  var children = _ref.children,\n      onChange = _ref.onChange,\n      _ref$value = _ref.value,\n      value = _ref$value === void 0 ? 0 : _ref$value,\n      _ref$animationType = _ref.animationType,\n      animationType = _ref$animationType === void 0 ? 'spring' : _ref$animationType,\n      _ref$animationConfig = _ref.animationConfig,\n      animationConfig = _ref$animationConfig === void 0 ? {} : _ref$animationConfig,\n      containerStyle = _ref.containerStyle,\n      tabItemContainerStyle = _ref.tabItemContainerStyle,\n      _ref$disableSwipe = _ref.disableSwipe,\n      disableSwipe = _ref$disableSwipe === void 0 ? false : _ref$disableSwipe,\n      _ref$disableTransitio = _ref.disableTransition,\n      disableTransition = _ref$disableTransitio === void 0 ? false : _ref$disableTransitio;\n\n  var _React$useRef = React.useRef(new Animated.Value(0)),\n      translateX = _React$useRef.current;\n\n  var currentIndex = React.useRef(value);\n  var length = React.Children.count(children);\n  var window = useWindowDimensions();\n\n  var onPanResponderRelease = function onPanResponderRelease(_, _ref2) {\n    var dx = _ref2.dx,\n        dy = _ref2.dy;\n\n    if (dx > 0 && currentIndex.current <= 0 || dx < 0 && currentIndex.current >= length - 1) {\n      return;\n    }\n\n    if (Math.abs(dy) > Math.abs(dx)) {\n      return;\n    }\n\n    var position = dx / -window.width;\n    var next = position > value ? Math.ceil(position) : Math.floor(position);\n    onChange == null ? void 0 : onChange(currentIndex.current + next);\n  };\n\n  var _React$useRef2 = React.useRef(PanResponder.create({\n    onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {\n      return true;\n    },\n    onPanResponderGrant: function onPanResponderGrant() {\n      return true;\n    },\n    onPanResponderRelease: onPanResponderRelease\n  })),\n      panResponder = _React$useRef2.current;\n\n  var animate = React.useCallback(function () {\n    Animated[animationType](translateX, _objectSpread({\n      toValue: value,\n      useNativeDriver: true\n    }, animationConfig)).start();\n  }, [translateX, value, animationType, animationConfig]);\n  React.useEffect(function () {\n    animate();\n    currentIndex.current = value;\n  }, [animate, value]);\n  return _jsx(Animated.View, _objectSpread(_objectSpread({\n    testID: \"tabView-test\",\n    style: StyleSheet.flatten([styles.container, {\n      width: window.width * length,\n      transform: [{\n        translateX: disableTransition ? -value * window.width : translateX.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, -window.width]\n        })\n      }]\n    }, containerStyle])\n  }, !disableSwipe && panResponder.panHandlers), {}, {\n    children: React.Children.map(children, function (child) {\n      return _jsx(View, {\n        style: StyleSheet.flatten([styles.container, {\n          width: window.width\n        }, tabItemContainerStyle]),\n        children: child\n      });\n    })\n  }));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'stretch'\n  }\n});\nTabViewBase.displayName = 'TabView';","map":{"version":3,"sources":["C:/Users/Spencer/Documents/Code/WATO/wato/node_modules/@react-native-elements/base/dist/TabView/TabView.js"],"names":["React","TabViewBase","children","onChange","value","animationType","animationConfig","containerStyle","tabItemContainerStyle","disableSwipe","disableTransition","useRef","Animated","Value","translateX","current","currentIndex","length","Children","count","window","useWindowDimensions","onPanResponderRelease","_","dx","dy","Math","abs","position","width","next","ceil","floor","PanResponder","create","onMoveShouldSetPanResponder","onPanResponderGrant","panResponder","animate","useCallback","toValue","useNativeDriver","start","useEffect","StyleSheet","flatten","styles","container","transform","interpolate","inputRange","outputRange","panHandlers","map","child","flex","flexDirection","alignItems","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Animated, PanResponder, View, StyleSheet, useWindowDimensions, } from 'react-native';\nexport const TabViewBase = ({ children, onChange, value = 0, animationType = 'spring', animationConfig = {}, containerStyle, tabItemContainerStyle, disableSwipe = false, disableTransition = false, }) => {\n    const { current: translateX } = React.useRef(new Animated.Value(0));\n    const currentIndex = React.useRef(value);\n    const length = React.Children.count(children);\n    const window = useWindowDimensions();\n    const onPanResponderRelease = (_, { dx, dy }) => {\n        if ((dx > 0 && currentIndex.current <= 0) ||\n            (dx < 0 && currentIndex.current >= length - 1)) {\n            return;\n        }\n        if (Math.abs(dy) > Math.abs(dx)) {\n            return;\n        }\n        const position = dx / -window.width;\n        const next = position > value ? Math.ceil(position) : Math.floor(position);\n        onChange?.(currentIndex.current + next);\n    };\n    const { current: panResponder } = React.useRef(PanResponder.create({\n        onMoveShouldSetPanResponder: () => true,\n        onPanResponderGrant: () => true,\n        onPanResponderRelease,\n    }));\n    const animate = React.useCallback(() => {\n        Animated[animationType](translateX, {\n            toValue: value,\n            useNativeDriver: true,\n            ...animationConfig,\n        }).start();\n    }, [translateX, value, animationType, animationConfig]);\n    React.useEffect(() => {\n        animate();\n        currentIndex.current = value;\n    }, [animate, value]);\n    return (<Animated.View testID=\"tabView-test\" style={StyleSheet.flatten([\n            styles.container,\n            {\n                width: window.width * length,\n                transform: [\n                    {\n                        translateX: disableTransition\n                            ? -value * window.width\n                            : translateX.interpolate({\n                                inputRange: [0, 1],\n                                outputRange: [0, -window.width],\n                            }),\n                    },\n                ],\n            },\n            containerStyle,\n        ])} {...(!disableSwipe && panResponder.panHandlers)}>\n      {React.Children.map(children, (child) => (<View style={StyleSheet.flatten([\n                styles.container,\n                { width: window.width },\n                tabItemContainerStyle,\n            ])}>\n          {child}\n        </View>))}\n    </Animated.View>);\n};\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        flexDirection: 'row',\n        alignItems: 'stretch',\n    },\n});\nTabViewBase.displayName = 'TabView';\n"]},"metadata":{},"sourceType":"module"}