{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport { Button } from '@react-native-elements/base';\nimport { useState } from 'react';\nimport { BottomSheet, SearchBar } from 'react-native-elements';\nimport { Input } from '@react-native-elements/themed';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      bet = _useState4[0],\n      setBet = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      odds = _useState6[0],\n      setOdds = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      number = _useState8[0],\n      setNumber = _useState8[1];\n\n  var guessANumber = function guessANumber() {\n    setNumber(Math.floor(Math.random() * odds + 1));\n    console.log(number, odds);\n\n    if (number === odds) {\n      console.log('win');\n    } else {\n      console.log('loss');\n    }\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Open up App.js to start working on your app!\"\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsxs(Picker, {\n      selectedValue: odds,\n      style: {\n        height: 50,\n        width: 150\n      },\n      onValueChange: function onValueChange(itemValue, ind) {\n        setOdds(parseInt(itemValue));\n      },\n      children: [_jsx(Picker.Item, {\n        label: \"0\",\n        value: 0\n      }), _jsx(Picker.Item, {\n        label: \"1\",\n        value: 1\n      }), _jsx(Picker.Item, {\n        label: \"2\",\n        value: 2\n      }), _jsx(Picker.Item, {\n        label: \"3\",\n        value: 3\n      }), _jsx(Picker.Item, {\n        label: \"4\",\n        value: 4\n      }), _jsx(Picker.Item, {\n        label: \"5\",\n        value: 5\n      })]\n    }), _jsx(Button, {\n      onPress: function onPress() {\n        return guessANumber();\n      },\n      title: \"Click me\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Spencer/Documents/Code/WATO/wato/App.js"],"names":["StatusBar","Button","useState","BottomSheet","SearchBar","Input","App","page","setPage","bet","setBet","odds","setOdds","number","setNumber","guessANumber","Math","floor","random","console","log","styles","container","height","width","itemValue","ind","parseInt","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;;;;;AAEA,SAASC,MAAT,QAAuB,6BAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAAQC,WAAR,EAAqBC,SAArB,QAAqC,uBAArC;AACA,SAASC,KAAT,QAAsB,+BAAtB;;;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAAwBJ,QAAQ,CAAC,CAAD,CAAhC;AAAA;AAAA,MAAOK,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAsBN,QAAQ,CAAC,EAAD,CAA9B;AAAA;AAAA,MAAOO,GAAP;AAAA,MAAYC,MAAZ;;AACA,mBAAwBR,QAAQ,CAAC,CAAD,CAAhC;AAAA;AAAA,MAAOS,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA4BV,QAAQ,CAAC,CAAD,CAApC;AAAA;AAAA,MAAOW,MAAP;AAAA,MAAeC,SAAf;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBD,IAAAA,SAAS,CAACE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBP,IAAhB,GAAqB,CAAhC,CAAD,CAAT;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ,EAAoBF,IAApB;;AACA,QAAGE,MAAM,KAAKF,IAAd,EAAmB;AACjBQ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACD,KAFD,MAEO;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD;AACF,GARD;;AAUA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,eACE,KAAC,IAAD;AAAA;AAAA,MADF,EAEE,KAAC,SAAD;AAAW,MAAA,KAAK,EAAC;AAAjB,MAFF,EAGE,MAAC,MAAD;AACE,MAAA,aAAa,EAAEX,IADjB;AAEE,MAAA,KAAK,EAAE;AAACY,QAAAA,MAAM,EAAE,EAAT;AAAaC,QAAAA,KAAK,EAAE;AAApB,OAFT;AAGE,MAAA,aAAa,EAAE,uBAACC,SAAD,EAAYC,GAAZ,EAAoB;AAACd,QAAAA,OAAO,CAACe,QAAQ,CAACF,SAAD,CAAT,CAAP;AAA6B,OAHnE;AAAA,iBAKE,KAAC,MAAD,CAAQ,IAAR;AAAa,QAAA,KAAK,EAAC,GAAnB;AAAuB,QAAA,KAAK,EAAE;AAA9B,QALF,EAME,KAAC,MAAD,CAAQ,IAAR;AAAa,QAAA,KAAK,EAAC,GAAnB;AAAuB,QAAA,KAAK,EAAE;AAA9B,QANF,EAOE,KAAC,MAAD,CAAQ,IAAR;AAAa,QAAA,KAAK,EAAC,GAAnB;AAAuB,QAAA,KAAK,EAAE;AAA9B,QAPF,EAQE,KAAC,MAAD,CAAQ,IAAR;AAAa,QAAA,KAAK,EAAC,GAAnB;AAAuB,QAAA,KAAK,EAAE;AAA9B,QARF,EASE,KAAC,MAAD,CAAQ,IAAR;AAAa,QAAA,KAAK,EAAC,GAAnB;AAAuB,QAAA,KAAK,EAAE;AAA9B,QATF,EAUE,KAAC,MAAD,CAAQ,IAAR;AAAa,QAAA,KAAK,EAAC,GAAnB;AAAuB,QAAA,KAAK,EAAE;AAA9B,QAVF;AAAA,MAHF,EAeE,KAAC,MAAD;AAAQ,MAAA,OAAO,EAAE;AAAA,eAAMV,YAAY,EAAlB;AAAA,OAAjB;AAAuC,MAAA,KAAK,EAAC;AAA7C,MAfF;AAAA,IADF;AAmBD;AAED,IAAMM,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, Picker } from 'react-native';\nimport { Button } from '@react-native-elements/base';\nimport { useState } from 'react';\nimport {BottomSheet, SearchBar} from 'react-native-elements';\nimport { Input } from '@react-native-elements/themed';\n\nexport default function App() {\n  const [page, setPage] = useState(0);\n  const [bet, setBet] = useState('');\n  const [odds, setOdds] = useState(0);\n  const [number, setNumber] = useState(0);\n\n  const guessANumber = () => {\n    setNumber(Math.floor(Math.random() * odds+1));\n    console.log(number, odds);\n    if(number === odds){\n      console.log('win');\n    } else {\n      console.log('loss');\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text>Open up App.js to start working on your app!</Text>\n      <StatusBar style=\"auto\" />\n      <Picker\n        selectedValue={odds}\n        style={{height: 50, width: 150}}\n        onValueChange={(itemValue, ind) => {setOdds(parseInt(itemValue))}}\n      >\n        <Picker.Item label='0' value={0}/>\n        <Picker.Item label='1' value={1}/>\n        <Picker.Item label='2' value={2}/>\n        <Picker.Item label='3' value={3}/>\n        <Picker.Item label='4' value={4}/>\n        <Picker.Item label='5' value={5}/>\n      </Picker>\n      <Button onPress={() => guessANumber()} title='Click me'/>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}