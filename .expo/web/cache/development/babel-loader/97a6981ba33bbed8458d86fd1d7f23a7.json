{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Picker, PickerIOS } from '@react-native-picker/picker';\nimport { Button, Overlay } from '@react-native-elements/base';\nimport { useState } from 'react';\nimport { BottomSheet, ButtonGroup, Card, Header, SearchBar } from 'react-native-elements';\nimport { Input } from '@react-native-elements/themed';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport OddsSetter from \"./Views/OddsSetter\";\nimport StatsPage from \"./Views/StatsPage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      bet = _useState4[0],\n      setBet = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      betVisible = _useState6[0],\n      setBetVisible = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      odds = _useState8[0],\n      setOdds = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      number = _useState10[0],\n      setNumber = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      wins = _useState12[0],\n      setWinner = _useState12[1];\n\n  var _useState13 = useState(0),\n      _useState14 = _slicedToArray(_useState13, 2),\n      loss = _useState14[0],\n      setLoser = _useState14[1];\n\n  var guessANumber = function guessANumber() {\n    setNumber(Math.floor(Math.random() * odds + 1));\n    console.log(number, odds);\n\n    if (number === odds) {\n      setWinner(wins + 1);\n    } else {\n      setLoser(loss + 1);\n    }\n  };\n\n  var toggleOverlay = function toggleOverlay() {\n    betVisible ? setBetVisible(false) : setBetVisible(true);\n  };\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(SafeAreaProvider, {\n      children: [_jsx(Header, {\n        leftComponent: {\n          icon: 'menu',\n          color: '#fff'\n        },\n        centerComponent: {\n          text: 'What Are The Odds',\n          style: styles.heading\n        }\n      }), _jsx(Text, {\n        style: styles.topText,\n        h4: true,\n        h4Style: {\n          color: 'black'\n        },\n        children: \"Enter a bet and set the odds.\"\n      }), _jsx(StatusBar, {\n        style: \"auto\"\n      }), page === 0 && _jsx(StatsPage, {}), page === 1 && _jsx(OddsSetter, {}), _jsx(ButtonGroup, {\n        buttons: ['Stats', 'Bet', 'Bounty'],\n        selectedIndex: page,\n        onPress: function onPress(val) {\n          setPage(val);\n        }\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  cardStyle: {},\n  bottomButton: {\n    flex: 0,\n    position: 'relative'\n  },\n  headerContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#397af8',\n    marginBottom: 20,\n    width: '100%',\n    paddingVertical: 15\n  },\n  heading: {\n    color: 'white',\n    fontSize: 22,\n    fontWeight: 'bold'\n  },\n  topText: {\n    color: 'black',\n    textAlign: 'center',\n    marginTop: 15,\n    marginBottom: 50,\n    fontSize: 22,\n    fontWeight: 'bold'\n  },\n  headerRight: {\n    display: 'flex',\n    flexDirection: 'row',\n    marginTop: 5\n  },\n  subheaderText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["C:/Users/Spencer/Documents/Code/WATO/wato/App.js"],"names":["StatusBar","Picker","PickerIOS","Button","Overlay","useState","BottomSheet","ButtonGroup","Card","Header","SearchBar","Input","SafeAreaProvider","OddsSetter","StatsPage","App","page","setPage","bet","setBet","betVisible","setBetVisible","odds","setOdds","number","setNumber","wins","setWinner","loss","setLoser","guessANumber","Math","floor","random","console","log","toggleOverlay","styles","container","icon","color","text","style","heading","topText","val","StyleSheet","create","flex","cardStyle","bottomButton","position","headerContainer","justifyContent","alignItems","backgroundColor","marginBottom","width","paddingVertical","fontSize","fontWeight","textAlign","marginTop","headerRight","display","flexDirection","subheaderText"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\nimport {Picker, PickerIOS} from '@react-native-picker/picker';\nimport { Button, Overlay } from '@react-native-elements/base';\nimport { useState } from 'react';\nimport {BottomSheet, ButtonGroup, Card, Header, SearchBar} from 'react-native-elements';\nimport { Input } from '@react-native-elements/themed';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport OddsSetter from './Views/OddsSetter';\nimport StatsPage from './Views/StatsPage';\n\nexport default function App() {\n  const [page, setPage] = useState(0);\n  const [bet, setBet] = useState('');\n  const [betVisible, setBetVisible] = useState(false);\n  const [odds, setOdds] = useState(0);\n  const [number, setNumber] = useState(0);\n  const [wins, setWinner] = useState(0);\n  const [loss, setLoser] =  useState(0);\n\n  const guessANumber = () => {\n    setNumber(Math.floor(Math.random() * odds+1));\n    console.log(number, odds);\n    if(number === odds){\n      setWinner(wins+1);\n    } else {\n      setLoser(loss+1);\n    }\n  };\n  const toggleOverlay = () => {\n    betVisible ? setBetVisible(false) : setBetVisible(true);\n  }\n\n  return (\n    <View style={styles.container}>\n      <SafeAreaProvider>\n        <Header\n          leftComponent={{icon: 'menu', color:'#fff'}}\n          centerComponent={{ text: 'What Are The Odds', style: styles.heading }}\n        />\n        <Text style={styles.topText} h4 h4Style={{color: 'black'}}>Enter a bet and set the odds.</Text>\n      <StatusBar style=\"auto\" />\n      {page === 0 && <StatsPage/>}\n      {page === 1 && <OddsSetter/>}\n      <ButtonGroup\n        buttons={['Stats', 'Bet', 'Bounty']}\n        selectedIndex={page}\n        onPress={(val) => {\n          setPage(val);\n        }}\n      />\n      </SafeAreaProvider>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  cardStyle: {\n  },\n  bottomButton: {\n    flex: 0,\n    position: 'relative'\n  },\n  headerContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#397af8',\n    marginBottom: 20,\n    width: '100%',\n    paddingVertical: 15,\n  },\n  heading: {\n    color: 'white',\n    fontSize: 22,\n    fontWeight: 'bold',\n  },\n  topText: {\n    color: 'black',\n    textAlign: 'center',\n    marginTop: 15,\n    marginBottom: 50,\n    fontSize: 22,\n    fontWeight: 'bold',\n  },\n  headerRight: {\n    display: 'flex',\n    flexDirection: 'row',\n    marginTop: 5,\n  },\n  subheaderText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  }\n});\n"]},"metadata":{},"sourceType":"module"}