{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"isExpanded\", \"icon\", \"expandIcon\", \"content\", \"noRotation\", \"noIcon\", \"animation\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { ListItemBase } from \"./ListItem\";\nimport { ListItemContent } from \"./ListItem.Content\";\nimport { Icon } from \"../Icon\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport var ListItemAccordion = function ListItemAccordion(_ref) {\n  var children = _ref.children,\n      isExpanded = _ref.isExpanded,\n      icon = _ref.icon,\n      expandIcon = _ref.expandIcon,\n      content = _ref.content,\n      noRotation = _ref.noRotation,\n      noIcon = _ref.noIcon,\n      _ref$animation = _ref.animation,\n      animation = _ref$animation === void 0 ? {\n    duration: 350,\n    type: 'timing'\n  } : _ref$animation,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useRef = React.useRef(new Animated.Value(0)),\n      transition = _React$useRef.current;\n\n  var startAnimation = React.useCallback(function () {\n    if (typeof animation !== 'boolean') {\n      Animated[animation.type || 'timing'](transition, {\n        toValue: Number(isExpanded),\n        useNativeDriver: true,\n        duration: animation.duration || 350\n      }).start();\n    }\n  }, [isExpanded, transition, animation]);\n  React.useEffect(function () {\n    startAnimation();\n  }, [isExpanded, startAnimation]);\n  var rotate = noRotation || typeof animation === 'boolean' && animation ? '0deg' : transition.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '-180deg']\n  });\n  return _jsxs(_Fragment, {\n    children: [_jsxs(ListItemBase, _objectSpread(_objectSpread({}, rest), {}, {\n      children: [React.isValidElement(content) ? content : _jsx(ListItemContent, {}), !noIcon && (icon ? React.createElement(Icon, isExpanded ? expandIcon : icon) : _jsx(Animated.View, {\n        testID: \"RNE__ListItem__Accordion__Icon\",\n        style: {\n          transform: [{\n            rotate: rotate\n          }]\n        },\n        children: _jsx(Icon, {\n          name: 'chevron-down',\n          type: \"material-community\"\n        })\n      }))]\n    })), isExpanded && _jsx(Animated.View, {\n      testID: \"RNE__ListItem__Accordion__Children\",\n      style: [{\n        opacity: transition\n      }],\n      children: children\n    })]\n  });\n};\nListItemAccordion.displayName = 'ListItem.Accordion';","map":{"version":3,"sources":["C:/Users/Spencer/Documents/Code/WATO/wato/node_modules/@react-native-elements/base/dist/ListItem/ListItem.Accordion.js"],"names":["React","ListItemBase","ListItemContent","Icon","ListItemAccordion","children","isExpanded","icon","expandIcon","content","noRotation","noIcon","animation","duration","type","rest","useRef","Animated","Value","transition","current","startAnimation","useCallback","toValue","Number","useNativeDriver","start","useEffect","rotate","interpolate","inputRange","outputRange","isValidElement","createElement","transform","opacity","displayName"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,YAAT;AACA,SAASC,eAAT;AACA,SAASC,IAAT;;;;AACA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAGhB;AAAA,MAHmBC,QAGnB,QAHmBA,QAGnB;AAAA,MAH6BC,UAG7B,QAH6BA,UAG7B;AAAA,MAHyCC,IAGzC,QAHyCA,IAGzC;AAAA,MAH+CC,UAG/C,QAH+CA,UAG/C;AAAA,MAH2DC,OAG3D,QAH2DA,OAG3D;AAAA,MAHoEC,UAGpE,QAHoEA,UAGpE;AAAA,MAHgFC,MAGhF,QAHgFA,MAGhF;AAAA,4BAHwFC,SAGxF;AAAA,MAHwFA,SAGxF,+BAHoG;AACjHC,IAAAA,QAAQ,EAAE,GADuG;AAEjHC,IAAAA,IAAI,EAAE;AAF2G,GAGpG;AAAA,MAAXC,IAAW;;AACb,sBAAgCf,KAAK,CAACgB,MAAN,CAAa,IAAIC,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAb,CAAhC;AAAA,MAAiBC,UAAjB,iBAAQC,OAAR;;AACA,MAAMC,cAAc,GAAGrB,KAAK,CAACsB,WAAN,CAAkB,YAAM;AAC3C,QAAI,OAAOV,SAAP,KAAqB,SAAzB,EAAoC;AAChCK,MAAAA,QAAQ,CAACL,SAAS,CAACE,IAAV,IAAkB,QAAnB,CAAR,CAAqCK,UAArC,EAAiD;AAC7CI,QAAAA,OAAO,EAAEC,MAAM,CAAClB,UAAD,CAD8B;AAE7CmB,QAAAA,eAAe,EAAE,IAF4B;AAG7CZ,QAAAA,QAAQ,EAAED,SAAS,CAACC,QAAV,IAAsB;AAHa,OAAjD,EAIGa,KAJH;AAKH;AACJ,GARsB,EAQpB,CAACpB,UAAD,EAAaa,UAAb,EAAyBP,SAAzB,CARoB,CAAvB;AASAZ,EAAAA,KAAK,CAAC2B,SAAN,CAAgB,YAAM;AAClBN,IAAAA,cAAc;AACjB,GAFD,EAEG,CAACf,UAAD,EAAae,cAAb,CAFH;AAGA,MAAMO,MAAM,GAAGlB,UAAU,IAAK,OAAOE,SAAP,KAAqB,SAArB,IAAkCA,SAAjD,GACT,MADS,GAETO,UAAU,CAACU,WAAX,CAAuB;AACrBC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADS;AAErBC,IAAAA,WAAW,EAAE,CAAC,MAAD,EAAS,SAAT;AAFQ,GAAvB,CAFN;AAMA,SAAQ;AAAA,eACN,MAAC,YAAD,kCAAkBhB,IAAlB;AAAA,iBACGf,KAAK,CAACgC,cAAN,CAAqBvB,OAArB,IAAgCA,OAAhC,GAA0C,KAAC,eAAD,KAD7C,EAEG,CAACE,MAAD,KACIJ,IAAI,GAAIP,KAAK,CAACiC,aAAN,CAAoB9B,IAApB,EAA2BG,UAAU,GAAGE,UAAH,GAAgBD,IAArD,CAAJ,GAAoE,KAAC,QAAD,CAAU,IAAV;AAAe,QAAA,MAAM,EAAC,gCAAtB;AAAuD,QAAA,KAAK,EAAE;AAC/H2B,UAAAA,SAAS,EAAE,CACP;AACIN,YAAAA,MAAM,EAANA;AADJ,WADO;AADoH,SAA9D;AAAA,kBAOvE,KAAC,IAAD;AAAM,UAAA,IAAI,EAAE,cAAZ;AAA4B,UAAA,IAAI,EAAC;AAAjC;AAPuE,QAD5E,CAFH;AAAA,OADM,EAcLtB,UAAU,IAAK,KAAC,QAAD,CAAU,IAAV;AAAe,MAAA,MAAM,EAAC,oCAAtB;AAA2D,MAAA,KAAK,EAAE,CACxE;AACI6B,QAAAA,OAAO,EAAEhB;AADb,OADwE,CAAlE;AAAA,gBAKXd;AALW,MAdV;AAAA,IAAR;AAsBH,CA7CM;AA8CPD,iBAAiB,CAACgC,WAAlB,GAAgC,oBAAhC","sourcesContent":["import React from 'react';\nimport { Animated } from 'react-native';\nimport { ListItemBase } from './ListItem';\nimport { ListItemContent } from './ListItem.Content';\nimport { Icon } from '../Icon';\nexport const ListItemAccordion = ({ children, isExpanded, icon, expandIcon, content, noRotation, noIcon, animation = {\n    duration: 350,\n    type: 'timing',\n}, ...rest }) => {\n    const { current: transition } = React.useRef(new Animated.Value(0));\n    const startAnimation = React.useCallback(() => {\n        if (typeof animation !== 'boolean') {\n            Animated[animation.type || 'timing'](transition, {\n                toValue: Number(isExpanded),\n                useNativeDriver: true,\n                duration: animation.duration || 350,\n            }).start();\n        }\n    }, [isExpanded, transition, animation]);\n    React.useEffect(() => {\n        startAnimation();\n    }, [isExpanded, startAnimation]);\n    const rotate = noRotation || (typeof animation === 'boolean' && animation)\n        ? '0deg'\n        : transition.interpolate({\n            inputRange: [0, 1],\n            outputRange: ['0deg', '-180deg'],\n        });\n    return (<>\n      <ListItemBase {...rest}>\n        {React.isValidElement(content) ? content : <ListItemContent />}\n        {!noIcon &&\n            (icon ? (React.createElement(Icon, (isExpanded ? expandIcon : icon))) : (<Animated.View testID=\"RNE__ListItem__Accordion__Icon\" style={{\n                    transform: [\n                        {\n                            rotate,\n                        },\n                    ],\n                }}>\n              <Icon name={'chevron-down'} type=\"material-community\"/>\n            </Animated.View>))}\n      </ListItemBase>\n      {isExpanded && (<Animated.View testID=\"RNE__ListItem__Accordion__Children\" style={[\n                {\n                    opacity: transition,\n                },\n            ]}>\n          {children}\n        </Animated.View>)}\n    </>);\n};\nListItemAccordion.displayName = 'ListItem.Accordion';\n"]},"metadata":{},"sourceType":"module"}