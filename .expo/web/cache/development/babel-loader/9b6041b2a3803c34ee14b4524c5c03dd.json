{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"containerStyle\", \"wrapperStyle\", \"theme\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { defaultTheme } from \"../helpers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var CardBase = function CardBase(_ref) {\n  var _theme$colors, _theme$colors2;\n\n  var children = _ref.children,\n      containerStyle = _ref.containerStyle,\n      wrapperStyle = _ref.wrapperStyle,\n      _ref$theme = _ref.theme,\n      theme = _ref$theme === void 0 ? defaultTheme : _ref$theme,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return _jsx(View, _objectSpread(_objectSpread({}, rest), {}, {\n    style: StyleSheet.flatten([_objectSpread({\n      backgroundColor: theme == null ? void 0 : (_theme$colors = theme.colors) == null ? void 0 : _theme$colors.white,\n      borderWidth: 1,\n      padding: 15,\n      margin: 15,\n      marginBottom: 0,\n      borderColor: theme == null ? void 0 : (_theme$colors2 = theme.colors) == null ? void 0 : _theme$colors2.grey5\n    }, Platform.select({\n      android: {\n        elevation: 1\n      },\n      default: {\n        shadowColor: 'rgba(0,0,0, .2)',\n        shadowOffset: {\n          height: 0,\n          width: 0\n        },\n        shadowOpacity: 1,\n        shadowRadius: 1\n      }\n    })), containerStyle && containerStyle]),\n    children: _jsx(View, {\n      style: StyleSheet.flatten([styles.wrapper, wrapperStyle && wrapperStyle]),\n      children: children\n    })\n  }));\n};\nvar styles = StyleSheet.create({\n  wrapper: {\n    backgroundColor: 'transparent'\n  }\n});\nCardBase.displayName = 'Card';","map":{"version":3,"sources":["C:/Users/Spencer/Documents/Code/WATO/wato/node_modules/@react-native-elements/base/dist/Card/Card.js"],"names":["React","defaultTheme","CardBase","children","containerStyle","wrapperStyle","theme","rest","StyleSheet","flatten","backgroundColor","colors","white","borderWidth","padding","margin","marginBottom","borderColor","grey5","Platform","select","android","elevation","default","shadowColor","shadowOffset","height","width","shadowOpacity","shadowRadius","styles","wrapper","create","displayName"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,YAAT;;AACA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA+E;AAAA;;AAAA,MAA5EC,QAA4E,QAA5EA,QAA4E;AAAA,MAAlEC,cAAkE,QAAlEA,cAAkE;AAAA,MAAlDC,YAAkD,QAAlDA,YAAkD;AAAA,wBAApCC,KAAoC;AAAA,MAApCA,KAAoC,2BAA5BL,YAA4B;AAAA,MAAXM,IAAW;;AACnG,SAAQ,KAAC,IAAD,kCAAUA,IAAV;AAAgB,IAAA,KAAK,EAAEC,UAAU,CAACC,OAAX,CAAmB;AAEtCC,MAAAA,eAAe,EAAEJ,KAAF,qCAAEA,KAAK,CAAEK,MAAT,qBAAE,cAAeC,KAFM;AAGtCC,MAAAA,WAAW,EAAE,CAHyB;AAItCC,MAAAA,OAAO,EAAE,EAJ6B;AAKtCC,MAAAA,MAAM,EAAE,EAL8B;AAMtCC,MAAAA,YAAY,EAAE,CANwB;AAOtCC,MAAAA,WAAW,EAAEX,KAAF,sCAAEA,KAAK,CAAEK,MAAT,qBAAE,eAAeO;AAPU,OAQnCC,QAAQ,CAACC,MAAT,CAAgB;AACfC,MAAAA,OAAO,EAAE;AACLC,QAAAA,SAAS,EAAE;AADN,OADM;AAIfC,MAAAA,OAAO,EAAE;AACLC,QAAAA,WAAW,EAAE,iBADR;AAELC,QAAAA,YAAY,EAAE;AAAEC,UAAAA,MAAM,EAAE,CAAV;AAAaC,UAAAA,KAAK,EAAE;AAApB,SAFT;AAGLC,QAAAA,aAAa,EAAE,CAHV;AAILC,QAAAA,YAAY,EAAE;AAJT;AAJM,KAAhB,CARmC,GAoB1CzB,cAAc,IAAIA,cApBwB,CAAnB,CAAvB;AAAA,cAsBN,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEI,UAAU,CAACC,OAAX,CAAmB,CAC1BqB,MAAM,CAACC,OADmB,EAE1B1B,YAAY,IAAIA,YAFU,CAAnB,CAAb;AAAA,gBAIGF;AAJH;AAtBM,KAAR;AA6BH,CA9BM;AA+BP,IAAM2B,MAAM,GAAGtB,UAAU,CAACwB,MAAX,CAAkB;AAC7BD,EAAAA,OAAO,EAAE;AACLrB,IAAAA,eAAe,EAAE;AADZ;AADoB,CAAlB,CAAf;AAKAR,QAAQ,CAAC+B,WAAT,GAAuB,MAAvB","sourcesContent":["import React from 'react';\nimport { View, Platform, StyleSheet } from 'react-native';\nimport { defaultTheme } from '../helpers';\nexport const CardBase = ({ children, containerStyle, wrapperStyle, theme = defaultTheme, ...rest }) => {\n    return (<View {...rest} style={StyleSheet.flatten([\n            {\n                backgroundColor: theme?.colors?.white,\n                borderWidth: 1,\n                padding: 15,\n                margin: 15,\n                marginBottom: 0,\n                borderColor: theme?.colors?.grey5,\n                ...Platform.select({\n                    android: {\n                        elevation: 1,\n                    },\n                    default: {\n                        shadowColor: 'rgba(0,0,0, .2)',\n                        shadowOffset: { height: 0, width: 0 },\n                        shadowOpacity: 1,\n                        shadowRadius: 1,\n                    },\n                }),\n            },\n            containerStyle && containerStyle,\n        ])}>\n      <View style={StyleSheet.flatten([\n            styles.wrapper,\n            wrapperStyle && wrapperStyle,\n        ])}>\n        {children}\n      </View>\n    </View>);\n};\nconst styles = StyleSheet.create({\n    wrapper: {\n        backgroundColor: 'transparent',\n    },\n});\nCardBase.displayName = 'Card';\n"]},"metadata":{},"sourceType":"module"}