{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"isOpen\", \"onOpen\", \"onClose\", \"icon\", \"openIcon\", \"children\", \"transitionDuration\", \"style\", \"overlayColor\", \"theme\", \"backdropPressableProps\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { FAB } from \"../FAB\";\nimport Color from 'color';\nimport { defaultTheme } from \"../helpers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var SpeedDial = function SpeedDial(_ref) {\n  var _theme$colors;\n\n  var isOpen = _ref.isOpen,\n      _ref$onOpen = _ref.onOpen,\n      onOpen = _ref$onOpen === void 0 ? function () {} : _ref$onOpen,\n      _ref$onClose = _ref.onClose,\n      onClose = _ref$onClose === void 0 ? function () {} : _ref$onClose,\n      icon = _ref.icon,\n      openIcon = _ref.openIcon,\n      children = _ref.children,\n      _ref$transitionDurati = _ref.transitionDuration,\n      transitionDuration = _ref$transitionDurati === void 0 ? 150 : _ref$transitionDurati,\n      style = _ref.style,\n      overlayColor = _ref.overlayColor,\n      _ref$theme = _ref.theme,\n      theme = _ref$theme === void 0 ? defaultTheme : _ref$theme,\n      pressableProps = _ref.backdropPressableProps,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var animations = React.useRef(_toConsumableArray(new Array(React.Children.count(children))).map(function () {\n    return new Animated.Value(Number(isOpen));\n  }));\n  React.useEffect(function () {\n    Animated.stagger(50, animations.current.map(function (animation) {\n      return Animated.timing(animation, {\n        toValue: Number(isOpen),\n        duration: transitionDuration,\n        useNativeDriver: true\n      });\n    })[isOpen ? 'reverse' : 'sort']()).start();\n  }, [isOpen, animations, children, transitionDuration]);\n  return _jsxs(View, {\n    style: [styles.container, style],\n    pointerEvents: \"box-none\",\n    children: [_jsx(Pressable, _objectSpread(_objectSpread({}, pressableProps), {}, {\n      onPress: onClose,\n      style: [StyleSheet.absoluteFillObject],\n      pointerEvents: isOpen ? 'auto' : 'none',\n      children: _jsx(Animated.View, {\n        style: [StyleSheet.absoluteFillObject, {\n          opacity: animations.current[0],\n          backgroundColor: overlayColor || Color(theme == null ? void 0 : (_theme$colors = theme.colors) == null ? void 0 : _theme$colors.black).alpha(0.6).rgb().toString()\n        }]\n      })\n    })), _jsxs(SafeAreaView, {\n      pointerEvents: \"box-none\",\n      style: styles.safeArea,\n      children: [React.Children.toArray(children).map(function (ChildAction, i) {\n        return _jsx(Animated.View, {\n          pointerEvents: isOpen ? 'auto' : 'none',\n          style: {\n            transform: [{\n              scale: animations.current[i]\n            }],\n            opacity: animations.current[i]\n          },\n          children: ChildAction\n        }, i);\n      }), _jsx(FAB, _objectSpread(_objectSpread({\n        style: [styles.fab],\n        icon: isOpen ? openIcon : icon\n      }, rest), {}, {\n        onPress: isOpen ? onClose : onOpen\n      }))]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end'\n  },\n  container: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    justifyContent: 'flex-end'\n  }),\n  fab: {\n    margin: 16,\n    marginTop: 0\n  }\n});\nSpeedDial.displayName = 'SpeedDial';","map":{"version":3,"sources":["C:/Users/Spencer/Documents/Code/WATO/wato/node_modules/@react-native-elements/base/dist/SpeedDial/SpeedDial.js"],"names":["React","FAB","Color","defaultTheme","SpeedDial","isOpen","onOpen","onClose","icon","openIcon","children","transitionDuration","style","overlayColor","theme","pressableProps","backdropPressableProps","rest","animations","useRef","Array","Children","count","map","Animated","Value","Number","useEffect","stagger","current","animation","timing","toValue","duration","useNativeDriver","start","styles","container","StyleSheet","absoluteFillObject","opacity","backgroundColor","colors","black","alpha","rgb","toString","safeArea","toArray","ChildAction","i","transform","scale","fab","create","alignItems","justifyContent","margin","marginTop","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Animated, StyleSheet, SafeAreaView, Pressable, } from 'react-native';\nimport { FAB } from '../FAB';\nimport Color from 'color';\nimport { defaultTheme } from '../helpers';\nexport const SpeedDial = ({ isOpen, onOpen = () => { }, onClose = () => { }, icon, openIcon, children, transitionDuration = 150, style, overlayColor, theme = defaultTheme, backdropPressableProps: pressableProps, ...rest }) => {\n    const animations = React.useRef([...new Array(React.Children.count(children))].map(() => new Animated.Value(Number(isOpen))));\n    React.useEffect(() => {\n        Animated.stagger(50, animations.current\n            .map((animation) => Animated.timing(animation, {\n            toValue: Number(isOpen),\n            duration: transitionDuration,\n            useNativeDriver: true,\n        }))[isOpen ? 'reverse' : 'sort']()).start();\n    }, [isOpen, animations, children, transitionDuration]);\n    return (<View style={[styles.container, style]} pointerEvents=\"box-none\">\n      \n      <Pressable {...pressableProps} onPress={onClose} style={[StyleSheet.absoluteFillObject]} pointerEvents={isOpen ? 'auto' : 'none'}>\n        <Animated.View style={[\n            StyleSheet.absoluteFillObject,\n            {\n                opacity: animations.current[0],\n                backgroundColor: overlayColor ||\n                    Color(theme?.colors?.black).alpha(0.6).rgb().toString(),\n            },\n        ]}/>\n      </Pressable>\n\n      <SafeAreaView pointerEvents=\"box-none\" style={styles.safeArea}>\n        {React.Children.toArray(children).map((ChildAction, i) => (<Animated.View pointerEvents={isOpen ? 'auto' : 'none'} key={i} style={{\n                transform: [{ scale: animations.current[i] }],\n                opacity: animations.current[i],\n            }}>\n            {ChildAction}\n          </Animated.View>))}\n        <FAB style={[styles.fab]} icon={isOpen ? openIcon : icon} {...rest} onPress={isOpen ? onClose : onOpen}/>\n      </SafeAreaView>\n    </View>);\n};\nconst styles = StyleSheet.create({\n    safeArea: {\n        alignItems: 'flex-end',\n    },\n    container: {\n        ...StyleSheet.absoluteFillObject,\n        justifyContent: 'flex-end',\n    },\n    fab: {\n        margin: 16,\n        marginTop: 0,\n    },\n});\nSpeedDial.displayName = 'SpeedDial';\n"]},"metadata":{},"sourceType":"module"}