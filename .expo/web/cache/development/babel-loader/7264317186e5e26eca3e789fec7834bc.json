{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"TouchableComponent\", \"containerStyle\", \"onPress\", \"buttonStyle\", \"type\", \"loading\", \"loadingStyle\", \"loadingProps\", \"title\", \"titleProps\", \"titleStyle\", \"icon\", \"iconContainerStyle\", \"iconRight\", \"disabled\", \"disabledStyle\", \"disabledTitleStyle\", \"raised\", \"linearGradientProps\", \"ViewComponent\", \"theme\", \"iconPosition\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport Color from 'color';\nimport React, { useCallback, useEffect } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { color, defaultTheme, renderNode } from \"../helpers\";\nimport { Icon } from \"../Icon\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar defaultLoadingProps = function defaultLoadingProps(type, theme) {\n  var _theme$colors;\n\n  return {\n    color: type === 'solid' ? 'white' : theme == null ? void 0 : (_theme$colors = theme.colors) == null ? void 0 : _theme$colors.primary,\n    size: 'small'\n  };\n};\n\nvar positionStyle = {\n  top: 'column',\n  bottom: 'column-reverse',\n  left: 'row',\n  right: 'row-reverse'\n};\nexport var Button = function Button(_ref) {\n  var _theme$colors2, _theme$colors3, _titleStyle$color, _theme$colors4, _theme$colors5, _theme$colors6, _theme$colors7;\n\n  var TouchableComponent = _ref.TouchableComponent,\n      containerStyle = _ref.containerStyle,\n      _ref$onPress = _ref.onPress,\n      onPress = _ref$onPress === void 0 ? function () {\n    return console.log('Please attach a method to this component');\n  } : _ref$onPress,\n      buttonStyle = _ref.buttonStyle,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'solid' : _ref$type,\n      _ref$loading = _ref.loading,\n      loading = _ref$loading === void 0 ? false : _ref$loading,\n      loadingStyle = _ref.loadingStyle,\n      passedLoadingProps = _ref.loadingProps,\n      _ref$title = _ref.title,\n      title = _ref$title === void 0 ? '' : _ref$title,\n      titleProps = _ref.titleProps,\n      passedTitleStyle = _ref.titleStyle,\n      icon = _ref.icon,\n      iconContainerStyle = _ref.iconContainerStyle,\n      _ref$iconRight = _ref.iconRight,\n      iconRight = _ref$iconRight === void 0 ? false : _ref$iconRight,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      disabledStyle = _ref.disabledStyle,\n      disabledTitleStyle = _ref.disabledTitleStyle,\n      _ref$raised = _ref.raised,\n      raised = _ref$raised === void 0 ? false : _ref$raised,\n      linearGradientProps = _ref.linearGradientProps,\n      _ref$ViewComponent = _ref.ViewComponent,\n      ViewComponent = _ref$ViewComponent === void 0 ? View : _ref$ViewComponent,\n      _ref$theme = _ref.theme,\n      theme = _ref$theme === void 0 ? defaultTheme : _ref$theme,\n      _ref$iconPosition = _ref.iconPosition,\n      iconPosition = _ref$iconPosition === void 0 ? 'left' : _ref$iconPosition,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  useEffect(function () {\n    if (linearGradientProps && !ViewComponent) {\n      console.error(\"You need to pass a ViewComponent to use linearGradientProps !\\nExample: ViewComponent={require('react-native-linear-gradient')}\");\n    }\n  });\n  var handleOnPress = useCallback(function (evt) {\n    if (!loading && !disabled) {\n      onPress(evt);\n    }\n  }, [loading, onPress, disabled]);\n  var TouchableComponentInternal = TouchableComponent || Platform.select({\n    android: linearGradientProps ? TouchableOpacity : TouchableNativeFeedback,\n    default: TouchableOpacity\n  });\n  var titleStyle = StyleSheet.flatten([{\n    color: type === 'solid' ? 'white' : theme == null ? void 0 : (_theme$colors2 = theme.colors) == null ? void 0 : _theme$colors2.primary\n  }, styles.title, passedTitleStyle, disabled && {\n    color: color(theme == null ? void 0 : (_theme$colors3 = theme.colors) == null ? void 0 : _theme$colors3.disabled).darken(0.3).string()\n  }, disabled && disabledTitleStyle]);\n  var background = Platform.OS === 'android' && Platform.Version >= 21 ? TouchableNativeFeedback.Ripple(Color(titleStyle == null ? void 0 : (_titleStyle$color = titleStyle.color) == null ? void 0 : _titleStyle$color.toString()).alpha(0.32).rgb().string(), true) : undefined;\n\n  var loadingProps = _objectSpread(_objectSpread({}, defaultLoadingProps(type, theme)), passedLoadingProps);\n\n  var accessibilityState = {\n    disabled: !!disabled,\n    busy: !!loading\n  };\n  return _jsx(View, {\n    style: [styles.container, containerStyle, raised && !disabled && type !== 'clear' && styles.raised],\n    testID: \"RNE_BUTTON_WRAPPER\",\n    children: _jsx(TouchableComponentInternal, _objectSpread(_objectSpread({\n      onPress: handleOnPress,\n      delayPressIn: 0,\n      activeOpacity: 0.3,\n      accessibilityRole: \"button\",\n      accessibilityState: accessibilityState,\n      disabled: disabled,\n      background: background\n    }, rest), {}, {\n      children: _jsxs(ViewComponent, _objectSpread(_objectSpread({}, linearGradientProps), {}, {\n        style: StyleSheet.flatten([styles.button, styles.buttonOrientation, {\n          flexDirection: positionStyle[iconRight ? 'right' : iconPosition] || 'row'\n        }, {\n          backgroundColor: type === 'solid' ? theme == null ? void 0 : (_theme$colors4 = theme.colors) == null ? void 0 : _theme$colors4.primary : 'transparent',\n          borderColor: theme == null ? void 0 : (_theme$colors5 = theme.colors) == null ? void 0 : _theme$colors5.primary,\n          borderWidth: type === 'outline' ? StyleSheet.hairlineWidth : 0\n        }, buttonStyle, disabled && type === 'solid' && {\n          backgroundColor: theme == null ? void 0 : (_theme$colors6 = theme.colors) == null ? void 0 : _theme$colors6.disabled\n        }, disabled && type === 'outline' && {\n          borderColor: color(theme == null ? void 0 : (_theme$colors7 = theme.colors) == null ? void 0 : _theme$colors7.disabled).darken(0.3).string()\n        }, disabled && disabledStyle]),\n        children: [loading && _jsx(ActivityIndicator, _objectSpread({\n          style: StyleSheet.flatten([styles.loading, loadingStyle]),\n          color: loadingProps.color,\n          size: loadingProps.size\n        }, loadingProps)), !loading && icon && renderNode(Icon, icon, {\n          containerStyle: StyleSheet.flatten([styles.iconContainer, iconContainerStyle])\n        }), !loading && !!title && renderNode(Text, title, _objectSpread({\n          style: titleStyle\n        }, titleProps))]\n      }))\n    }))\n  });\n};\nvar styles = StyleSheet.create({\n  button: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 3,\n    padding: 8\n  },\n  buttonOrientation: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 3,\n    padding: 8\n  },\n  container: {\n    overflow: 'hidden',\n    borderRadius: 3\n  },\n  title: _objectSpread({\n    fontSize: 16,\n    textAlign: 'center',\n    paddingVertical: 1\n  }, Platform.select({\n    android: {\n      fontFamily: 'sans-serif-medium'\n    },\n    default: {\n      fontSize: 18\n    }\n  })),\n  iconContainer: {\n    marginHorizontal: 5\n  },\n  raised: _objectSpread({\n    backgroundColor: '#fff',\n    overflow: 'visible'\n  }, Platform.select({\n    android: {\n      elevation: 4\n    },\n    default: {\n      shadowColor: 'rgba(0,0,0, .4)',\n      shadowOffset: {\n        height: 1,\n        width: 1\n      },\n      shadowOpacity: 1,\n      shadowRadius: 1\n    }\n  })),\n  loading: {\n    marginVertical: 2\n  }\n});\nButton.displayName = 'Button';","map":{"version":3,"sources":["C:/Users/Spencer/Documents/Code/WATO/wato/node_modules/@react-native-elements/base/dist/Button/Button.js"],"names":["Color","React","useCallback","useEffect","color","defaultTheme","renderNode","Icon","defaultLoadingProps","type","theme","colors","primary","size","positionStyle","top","bottom","left","right","Button","TouchableComponent","containerStyle","onPress","console","log","buttonStyle","loading","loadingStyle","passedLoadingProps","loadingProps","title","titleProps","passedTitleStyle","titleStyle","icon","iconContainerStyle","iconRight","disabled","disabledStyle","disabledTitleStyle","raised","linearGradientProps","ViewComponent","View","iconPosition","rest","error","handleOnPress","evt","TouchableComponentInternal","Platform","select","android","TouchableOpacity","TouchableNativeFeedback","default","StyleSheet","flatten","styles","darken","string","background","OS","Version","Ripple","toString","alpha","rgb","undefined","accessibilityState","busy","container","button","buttonOrientation","flexDirection","backgroundColor","borderColor","borderWidth","hairlineWidth","iconContainer","Text","style","create","justifyContent","alignItems","borderRadius","padding","overflow","fontSize","textAlign","paddingVertical","fontFamily","marginHorizontal","elevation","shadowColor","shadowOffset","height","width","shadowOpacity","shadowRadius","marginVertical","displayName"],"mappings":"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","sourcesContent":["import Color from 'color';\nimport React, { useCallback, useEffect } from 'react';\nimport { ActivityIndicator, Platform, StyleSheet, Text, TouchableNativeFeedback, TouchableOpacity, View, } from 'react-native';\nimport { color, defaultTheme, renderNode, } from '../helpers';\nimport { Icon } from '../Icon';\nconst defaultLoadingProps = (type, theme) => ({\n    color: type === 'solid' ? 'white' : theme?.colors?.primary,\n    size: 'small',\n});\nconst positionStyle = {\n    top: 'column',\n    bottom: 'column-reverse',\n    left: 'row',\n    right: 'row-reverse',\n};\nexport const Button = ({ TouchableComponent, containerStyle, onPress = () => console.log('Please attach a method to this component'), buttonStyle, type = 'solid', loading = false, loadingStyle, loadingProps: passedLoadingProps, title = '', titleProps, titleStyle: passedTitleStyle, icon, iconContainerStyle, iconRight = false, disabled = false, disabledStyle, disabledTitleStyle, raised = false, linearGradientProps, ViewComponent = View, theme = defaultTheme, iconPosition = 'left', ...rest }) => {\n    useEffect(() => {\n        if (linearGradientProps && !ViewComponent) {\n            console.error(\"You need to pass a ViewComponent to use linearGradientProps !\\nExample: ViewComponent={require('react-native-linear-gradient')}\");\n        }\n    });\n    const handleOnPress = useCallback((evt) => {\n        if (!loading && !disabled) {\n            onPress(evt);\n        }\n    }, [loading, onPress, disabled]);\n    const TouchableComponentInternal = TouchableComponent ||\n        Platform.select({\n            android: linearGradientProps ? TouchableOpacity : TouchableNativeFeedback,\n            default: TouchableOpacity,\n        });\n    const titleStyle = StyleSheet.flatten([\n        {\n            color: type === 'solid' ? 'white' : theme?.colors?.primary,\n        },\n        styles.title,\n        passedTitleStyle,\n        disabled && {\n            color: color(theme?.colors?.disabled).darken(0.3).string(),\n        },\n        disabled && disabledTitleStyle,\n    ]);\n    const background = Platform.OS === 'android' && Platform.Version >= 21\n        ? TouchableNativeFeedback.Ripple(Color(titleStyle?.color?.toString()).alpha(0.32).rgb().string(), true)\n        : undefined;\n    const loadingProps = {\n        ...defaultLoadingProps(type, theme),\n        ...passedLoadingProps,\n    };\n    const accessibilityState = {\n        disabled: !!disabled,\n        busy: !!loading,\n    };\n    return (<View style={[\n            styles.container,\n            containerStyle,\n            raised && !disabled && type !== 'clear' && styles.raised,\n        ]} testID=\"RNE_BUTTON_WRAPPER\">\n      <TouchableComponentInternal onPress={handleOnPress} delayPressIn={0} activeOpacity={0.3} accessibilityRole=\"button\" accessibilityState={accessibilityState} disabled={disabled} background={background} {...rest}>\n        <ViewComponent {...linearGradientProps} style={StyleSheet.flatten([\n            styles.button,\n            styles.buttonOrientation,\n            {\n                flexDirection: positionStyle[iconRight ? 'right' : iconPosition] || 'row',\n            },\n            {\n                backgroundColor: type === 'solid' ? theme?.colors?.primary : 'transparent',\n                borderColor: theme?.colors?.primary,\n                borderWidth: type === 'outline' ? StyleSheet.hairlineWidth : 0,\n            },\n            buttonStyle,\n            disabled &&\n                type === 'solid' && {\n                backgroundColor: theme?.colors?.disabled,\n            },\n            disabled &&\n                type === 'outline' && {\n                borderColor: color(theme?.colors?.disabled)\n                    .darken(0.3)\n                    .string(),\n            },\n            disabled && disabledStyle,\n        ])}>\n          \n          {loading && (<ActivityIndicator style={StyleSheet.flatten([styles.loading, loadingStyle])} color={loadingProps.color} size={loadingProps.size} {...loadingProps}/>)}\n          \n          {!loading &&\n            icon &&\n            renderNode(Icon, icon, {\n                containerStyle: StyleSheet.flatten([\n                    styles.iconContainer,\n                    iconContainerStyle,\n                ]),\n            })}\n          \n          {!loading &&\n            !!title &&\n            renderNode(Text, title, {\n                style: titleStyle,\n                ...titleProps,\n            })}\n        </ViewComponent>\n      </TouchableComponentInternal>\n    </View>);\n};\nconst styles = StyleSheet.create({\n    button: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 3,\n        padding: 8,\n    },\n    buttonOrientation: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 3,\n        padding: 8,\n    },\n    container: {\n        overflow: 'hidden',\n        borderRadius: 3,\n    },\n    title: {\n        fontSize: 16,\n        textAlign: 'center',\n        paddingVertical: 1,\n        ...Platform.select({\n            android: {\n                fontFamily: 'sans-serif-medium',\n            },\n            default: {\n                fontSize: 18,\n            },\n        }),\n    },\n    iconContainer: {\n        marginHorizontal: 5,\n    },\n    raised: {\n        backgroundColor: '#fff',\n        overflow: 'visible',\n        ...Platform.select({\n            android: {\n                elevation: 4,\n            },\n            default: {\n                shadowColor: 'rgba(0,0,0, .4)',\n                shadowOffset: { height: 1, width: 1 },\n                shadowOpacity: 1,\n                shadowRadius: 1,\n            },\n        }),\n    },\n    loading: {\n        marginVertical: 2,\n    },\n});\nButton.displayName = 'Button';\n"]},"metadata":{},"sourceType":"module"}