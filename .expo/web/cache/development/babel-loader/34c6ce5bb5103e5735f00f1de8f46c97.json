{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useContext, useState } from \"react\";\nimport { Card } from \"react-native-elements\";\nimport { Text, Button } from \"react-native-elements\";\nimport axios from \"axios\";\nimport GlobalState from \"../store/stateStore\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar StatsPage = function StatsPage(props) {\n  var gState = useContext(GlobalState);\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      wins = _useState2[0],\n      setWins = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loss = _useState4[0],\n      setLoss = _useState4[1];\n\n  var getStats = function getStats() {\n    axios.get('http://localhost:8080/api/v1/user').then(function (res) {\n      console.log(gState);\n      var win = res.data[0].wins,\n          losses = res.data[0].loss;\n      setLoss(losses.toString());\n      setWins(win.toString());\n      console.log(wins);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return _jsxs(View, {\n    children: [_jsxs(Text, {\n      style: styles.topText,\n      h4: true,\n      h4Style: {\n        color: 'black'\n      },\n      children: [\"Stats: \", props.username]\n    }), _jsxs(Card, {\n      children: [_jsxs(Card.Title, {\n        children: [\"Wins: \", wins]\n      }), _jsxs(Card.Title, {\n        children: [\"Losses: \", loss]\n      }), _jsx(Button, {\n        onPress: getStats,\n        title: \"get stats\"\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  topText: {\n    color: 'black',\n    textAlign: 'center',\n    marginTop: 15,\n    marginBottom: 50,\n    fontSize: 22,\n    fontWeight: 'bold'\n  }\n});\nexport default StatsPage;","map":{"version":3,"sources":["C:/Users/Spencer/Documents/Code/WATO/wato/Views/StatsPage.js"],"names":["useContext","useState","Card","Text","Button","axios","GlobalState","StatsPage","props","gState","wins","setWins","loss","setLoss","getStats","get","then","res","console","log","win","data","losses","toString","catch","error","styles","topText","color","username","StyleSheet","create","textAlign","marginTop","marginBottom","fontSize","fontWeight"],"mappings":";;;AACA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,uBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP;;;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AACzB,MAAMC,MAAM,GAAGT,UAAU,CAACM,WAAD,CAAzB;;AACA,kBAAwBL,QAAQ,CAAC,CAAD,CAAhC;AAAA;AAAA,MAAOS,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAwBV,QAAQ,CAAC,CAAD,CAAhC;AAAA;AAAA,MAAOW,IAAP;AAAA,MAAaC,OAAb;;AACA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACpBT,IAAAA,KAAK,CAACU,GAAN,CAAU,mCAAV,EAA+CC,IAA/C,CAAoD,UAAAC,GAAG,EAAI;AACvDC,MAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;AACA,UAAIW,GAAG,GAAGH,GAAG,CAACI,IAAJ,CAAS,CAAT,EAAYX,IAAtB;AAAA,UACCY,MAAM,GAAGL,GAAG,CAACI,IAAJ,CAAS,CAAT,EAAYT,IADtB;AAEAC,MAAAA,OAAO,CAACS,MAAM,CAACC,QAAP,EAAD,CAAP;AACAZ,MAAAA,OAAO,CAACS,GAAG,CAACG,QAAJ,EAAD,CAAP;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACH,KAPD,EAOGc,KAPH,CAOS,UAAAC,KAAK,EAAI;AACdP,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACH,KATD;AAUF,GAXD;;AAYA,SACI,MAAC,IAAD;AAAA,eACA,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,OAApB;AAA6B,MAAA,EAAE,MAA/B;AAAgC,MAAA,OAAO,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAzC;AAAA,4BAAmEpB,KAAK,CAACqB,QAAzE;AAAA,MADA,EAEI,MAAC,IAAD;AAAA,iBACI,MAAC,IAAD,CAAM,KAAN;AAAA,6BAAmBnB,IAAnB;AAAA,QADJ,EAEI,MAAC,IAAD,CAAM,KAAN;AAAA,+BAAqBE,IAArB;AAAA,QAFJ,EAGI,KAAC,MAAD;AAAQ,QAAA,OAAO,EAAEE,QAAjB;AAA2B,QAAA,KAAK,EAAC;AAAjC,QAHJ;AAAA,MAFJ;AAAA,IADJ;AAUH,CA1BD;;AA2BA,IAAMY,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,OAAO,EAAE;AACLC,IAAAA,KAAK,EAAE,OADF;AAELI,IAAAA,SAAS,EAAE,QAFN;AAGLC,IAAAA,SAAS,EAAE,EAHN;AAILC,IAAAA,YAAY,EAAE,EAJT;AAKLC,IAAAA,QAAQ,EAAE,EALL;AAMLC,IAAAA,UAAU,EAAE;AANP;AADoB,CAAlB,CAAf;AAUA,eAAe7B,SAAf","sourcesContent":["import { View, StyleSheet } from \"react-native\";\r\nimport { useContext, useState } from \"react\";\r\nimport { Card } from \"react-native-elements\";\r\nimport { Text, Button } from \"react-native-elements\";\r\nimport axios from \"axios\";\r\nimport GlobalState from \"../store/stateStore\";\r\n\r\nconst StatsPage = (props) => {\r\n    const gState = useContext(GlobalState);\r\n    const [wins, setWins] = useState(0);\r\n    const [loss, setLoss] = useState(0);\r\n    const getStats = () => {\r\n       axios.get('http://localhost:8080/api/v1/user').then(res => {\r\n           console.log(gState);\r\n           let win = res.data[0].wins,\r\n            losses = res.data[0].loss;\r\n           setLoss(losses.toString());\r\n           setWins(win.toString());\r\n           console.log(wins)\r\n       }).catch(error => {\r\n           console.log(error);\r\n       });\r\n    }\r\n    return(\r\n        <View>\r\n        <Text style={styles.topText} h4 h4Style={{color: 'black'}}>Stats: {props.username}</Text>\r\n            <Card>\r\n                <Card.Title>Wins: {wins}</Card.Title>\r\n                <Card.Title>Losses: {loss}</Card.Title>\r\n                <Button onPress={getStats} title='get stats'  />\r\n            </Card>\r\n        </View>\r\n    )\r\n};\r\nconst styles = StyleSheet.create({\r\n    topText: {\r\n        color: 'black',\r\n        textAlign: 'center',\r\n        marginTop: 15,\r\n        marginBottom: 50,\r\n        fontSize: 22,\r\n        fontWeight: 'bold',\r\n    }\r\n})\r\nexport default StatsPage;"]},"metadata":{},"sourceType":"module"}