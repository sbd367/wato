{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Picker, PickerIOS } from '@react-native-picker/picker';\nimport { Button, Overlay } from '@react-native-elements/base';\nimport { useState } from 'react';\nimport { BottomSheet, Card, Header, SearchBar } from 'react-native-elements';\nimport { Input } from '@react-native-elements/themed';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      bet = _useState4[0],\n      setBet = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      betVisible = _useState6[0],\n      setBetVisible = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      odds = _useState8[0],\n      setOdds = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      number = _useState10[0],\n      setNumber = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      wins = _useState12[0],\n      setWinner = _useState12[1];\n\n  var _useState13 = useState(0),\n      _useState14 = _slicedToArray(_useState13, 2),\n      loss = _useState14[0],\n      setLoser = _useState14[1];\n\n  var guessANumber = function guessANumber() {\n    setNumber(Math.floor(Math.random() * odds + 1));\n    console.log(number, odds);\n\n    if (number === odds) {\n      setWinner(wins + 1);\n    } else {\n      setLoser(loss + 1);\n    }\n  };\n\n  var toggleOverlay = function toggleOverlay() {\n    console.log(betVisible);\n    betVisible ? setBetVisible(false) : setBetVisible(true);\n  };\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(SafeAreaProvider, {\n      children: [_jsx(Header, {\n        leftComponent: {\n          icon: 'menu',\n          color: '#fff'\n        },\n        centerComponent: {\n          text: 'What Are The Odds',\n          style: styles.heading\n        }\n      }), _jsx(StatusBar, {\n        style: \"auto\"\n      }), _jsxs(Card, {\n        style: styles.cardStyle,\n        children: [_jsxs(Card.Title, {\n          children: [\"Wins: \", wins]\n        }), _jsxs(Card.Title, {\n          children: [\"Losses: \", loss]\n        })]\n      }), _jsx(Button, {\n        onPress: function onPress() {\n          return toggleOverlay();\n        },\n        title: \"Set the odds\"\n      }), _jsx(Overlay, {\n        isVisible: betVisible,\n        onBackdropPress: toggleOverlay,\n        children: _jsxs(View, {\n          children: [_jsx(Text, {\n            children: \"This\"\n          }), _jsxs(PickerIOS, {\n            selectedValue: odds,\n            style: {\n              height: 60,\n              width: 150\n            },\n            onValueChange: function onValueChange(itemValue, ind) {\n              setOdds(parseInt(itemValue));\n            },\n            children: [_jsx(Picker.Item, {\n              label: \"0\",\n              value: 0\n            }), _jsx(Picker.Item, {\n              label: \"1\",\n              value: 1\n            }), _jsx(Picker.Item, {\n              label: \"2\",\n              value: 2\n            }), _jsx(Picker.Item, {\n              label: \"3\",\n              value: 3\n            }), _jsx(Picker.Item, {\n              label: \"4\",\n              value: 4\n            }), _jsx(Picker.Item, {\n              label: \"5\",\n              value: 5\n            })]\n          })]\n        })\n      }), _jsx(Button, {\n        style: styles.bottomButton,\n        onPress: function onPress() {\n          return guessANumber();\n        },\n        title: \"Click me\"\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  cardStyle: {\n    marginBottom: 10,\n    height: 100,\n    width: 100\n  },\n  bottomButton: {\n    position: 'relative'\n  },\n  headerContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#397af8',\n    marginBottom: 20,\n    width: '100%',\n    paddingVertical: 15\n  },\n  heading: {\n    color: 'white',\n    fontSize: 22,\n    fontWeight: 'bold'\n  },\n  headerRight: {\n    display: 'flex',\n    flexDirection: 'row',\n    marginTop: 5\n  },\n  subheaderText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["C:/Users/Spencer/Documents/Code/WATO/wato/App.js"],"names":["StatusBar","Picker","PickerIOS","Button","Overlay","useState","BottomSheet","Card","Header","SearchBar","Input","SafeAreaProvider","App","page","setPage","bet","setBet","betVisible","setBetVisible","odds","setOdds","number","setNumber","wins","setWinner","loss","setLoser","guessANumber","Math","floor","random","console","log","toggleOverlay","styles","container","icon","color","text","style","heading","cardStyle","height","width","itemValue","ind","parseInt","bottomButton","StyleSheet","create","flex","backgroundColor","marginBottom","position","headerContainer","justifyContent","alignItems","paddingVertical","fontSize","fontWeight","headerRight","display","flexDirection","marginTop","subheaderText"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\nimport {Picker, PickerIOS} from '@react-native-picker/picker';\nimport { Button, Overlay } from '@react-native-elements/base';\nimport { useState } from 'react';\nimport {BottomSheet, Card, Header, SearchBar} from 'react-native-elements';\nimport { Input } from '@react-native-elements/themed';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nexport default function App() {\n  const [page, setPage] = useState(0);\n  const [bet, setBet] = useState('');\n  const [betVisible, setBetVisible] = useState(false);\n  const [odds, setOdds] = useState(0);\n  const [number, setNumber] = useState(0);\n  const [wins, setWinner] = useState(0);\n  const [loss, setLoser] =  useState(0);\n\n  const guessANumber = () => {\n    setNumber(Math.floor(Math.random() * odds+1));\n    console.log(number, odds);\n    if(number === odds){\n      setWinner(wins+1);\n    } else {\n      setLoser(loss+1);\n    }\n  };\n  const toggleOverlay = () => {\n    console.log(betVisible)\n    betVisible ? setBetVisible(false) : setBetVisible(true);\n  }\n\n  return (\n    <View style={styles.container}>\n      <SafeAreaProvider>\n        <Header\n          leftComponent={{icon: 'menu', color:'#fff'}}\n          centerComponent={{ text: 'What Are The Odds', style: styles.heading }}\n        />\n      <StatusBar style=\"auto\" />\n      <Card style={styles.cardStyle}>\n        <Card.Title>Wins: {wins}</Card.Title>\n        <Card.Title>Losses: {loss}</Card.Title>\n      </Card>\n      <Button onPress={() => toggleOverlay()} title='Set the odds'/>\n      <Overlay isVisible={betVisible} onBackdropPress={toggleOverlay}>\n      <View>\n      <Text>This</Text>\n        <PickerIOS\n          selectedValue={odds}\n          style={{height: 60, width: 150}}\n          onValueChange={(itemValue, ind) => {setOdds(parseInt(itemValue))}}\n        >\n          <Picker.Item label='0' value={0}/>\n          <Picker.Item label='1' value={1}/>\n          <Picker.Item label='2' value={2}/>\n          <Picker.Item label='3' value={3}/>\n          <Picker.Item label='4' value={4}/>\n          <Picker.Item label='5' value={5}/>\n        </PickerIOS>\n        </View>\n      </Overlay>\n      <Button style={styles.bottomButton} onPress={() => guessANumber()} title='Click me'/>\n      </SafeAreaProvider>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  cardStyle: {\n    marginBottom: 10,\n    height: 100,\n    width: 100\n  },\n  bottomButton: {\n    position: 'relative'\n  },\n  headerContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#397af8',\n    marginBottom: 20,\n    width: '100%',\n    paddingVertical: 15,\n  },\n  heading: {\n    color: 'white',\n    fontSize: 22,\n    fontWeight: 'bold',\n  },\n  headerRight: {\n    display: 'flex',\n    flexDirection: 'row',\n    marginTop: 5,\n  },\n  subheaderText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  }\n});\n"]},"metadata":{},"sourceType":"module"}