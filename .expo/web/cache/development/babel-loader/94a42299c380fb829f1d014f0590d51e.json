{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"h1\", \"h2\", \"h3\", \"h4\", \"h1Style\", \"h2Style\", \"h3Style\", \"h4Style\", \"children\", \"theme\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport NativeText from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { fonts } from \"../helpers/index-config\";\nimport { defaultTheme, patchWebProps } from \"../helpers\";\nimport normalize from \"../helpers/normalizeText\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var Text = function Text(_ref) {\n  var _theme$colors;\n\n  var _ref$style = _ref.style,\n      style = _ref$style === void 0 ? {} : _ref$style,\n      _ref$h = _ref.h1,\n      h1 = _ref$h === void 0 ? false : _ref$h,\n      _ref$h2 = _ref.h2,\n      h2 = _ref$h2 === void 0 ? false : _ref$h2,\n      _ref$h3 = _ref.h3,\n      h3 = _ref$h3 === void 0 ? false : _ref$h3,\n      _ref$h4 = _ref.h4,\n      h4 = _ref$h4 === void 0 ? false : _ref$h4,\n      _ref$h1Style = _ref.h1Style,\n      h1Style = _ref$h1Style === void 0 ? {} : _ref$h1Style,\n      _ref$h2Style = _ref.h2Style,\n      h2Style = _ref$h2Style === void 0 ? {} : _ref$h2Style,\n      _ref$h3Style = _ref.h3Style,\n      h3Style = _ref$h3Style === void 0 ? {} : _ref$h3Style,\n      _ref$h4Style = _ref.h4Style,\n      h4Style = _ref$h4Style === void 0 ? {} : _ref$h4Style,\n      _ref$children = _ref.children,\n      children = _ref$children === void 0 ? '' : _ref$children,\n      _ref$theme = _ref.theme,\n      theme = _ref$theme === void 0 ? defaultTheme : _ref$theme,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return _jsx(NativeText, _objectSpread(_objectSpread({\n    accessibilityRole: \"text\",\n    style: StyleSheet.flatten([_objectSpread(_objectSpread({}, Platform.select({\n      android: _objectSpread({}, fonts.android.regular)\n    })), {}, {\n      color: theme == null ? void 0 : (_theme$colors = theme.colors) == null ? void 0 : _theme$colors.black\n    }), style, (h1 || h2 || h3 || h4) && styles.bold, h1 && StyleSheet.flatten([{\n      fontSize: normalize(40)\n    }, h1Style]), h2 && StyleSheet.flatten([{\n      fontSize: normalize(34)\n    }, h2Style]), h3 && StyleSheet.flatten([{\n      fontSize: normalize(28)\n    }, h3Style]), h4 && StyleSheet.flatten([{\n      fontSize: normalize(22)\n    }, h4Style])])\n  }, patchWebProps(rest)), {}, {\n    children: children\n  }));\n};\nvar styles = StyleSheet.create({\n  bold: _objectSpread({}, Platform.select({\n    android: _objectSpread({}, fonts.android.bold)\n  }))\n});\nText.displayName = 'Text';","map":{"version":3,"sources":["C:/Users/Spencer/Documents/Code/WATO/wato/node_modules/@react-native-elements/base/dist/Text/Text.js"],"names":["React","fonts","defaultTheme","patchWebProps","normalize","Text","style","h1","h2","h3","h4","h1Style","h2Style","h3Style","h4Style","children","theme","rest","StyleSheet","flatten","Platform","select","android","regular","color","colors","black","styles","bold","fontSize","create","displayName"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,KAAT;AACA,SAASC,YAAT,EAAuBC,aAAvB;AACA,OAAOC,SAAP;;AACA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAA0K;AAAA;;AAAA,wBAAvKC,KAAuK;AAAA,MAAvKA,KAAuK,2BAA/J,EAA+J;AAAA,oBAA3JC,EAA2J;AAAA,MAA3JA,EAA2J,uBAAtJ,KAAsJ;AAAA,qBAA/IC,EAA+I;AAAA,MAA/IA,EAA+I,wBAA1I,KAA0I;AAAA,qBAAnIC,EAAmI;AAAA,MAAnIA,EAAmI,wBAA9H,KAA8H;AAAA,qBAAvHC,EAAuH;AAAA,MAAvHA,EAAuH,wBAAlH,KAAkH;AAAA,0BAA3GC,OAA2G;AAAA,MAA3GA,OAA2G,6BAAjG,EAAiG;AAAA,0BAA7FC,OAA6F;AAAA,MAA7FA,OAA6F,6BAAnF,EAAmF;AAAA,0BAA/EC,OAA+E;AAAA,MAA/EA,OAA+E,6BAArE,EAAqE;AAAA,0BAAjEC,OAAiE;AAAA,MAAjEA,OAAiE,6BAAvD,EAAuD;AAAA,2BAAnDC,QAAmD;AAAA,MAAnDA,QAAmD,8BAAxC,EAAwC;AAAA,wBAApCC,KAAoC;AAAA,MAApCA,KAAoC,2BAA5Bd,YAA4B;AAAA,MAAXe,IAAW;;AAC1L,SAAQ,KAAC,UAAD;AAAY,IAAA,iBAAiB,EAAC,MAA9B;AAAqC,IAAA,KAAK,EAAEC,UAAU,CAACC,OAAX,CAAmB,iCAExDC,QAAQ,CAACC,MAAT,CAAgB;AACfC,MAAAA,OAAO,oBACArB,KAAK,CAACqB,OAAN,CAAcC,OADd;AADQ,KAAhB,CAFwD;AAO3DC,MAAAA,KAAK,EAAER,KAAF,qCAAEA,KAAK,CAAES,MAAT,qBAAE,cAAeC;AAPqC,QAS/DpB,KAT+D,EAU/D,CAACC,EAAE,IAAIC,EAAN,IAAYC,EAAZ,IAAkBC,EAAnB,KAA0BiB,MAAM,CAACC,IAV8B,EAW/DrB,EAAE,IAAIW,UAAU,CAACC,OAAX,CAAmB,CAAC;AAAEU,MAAAA,QAAQ,EAAEzB,SAAS,CAAC,EAAD;AAArB,KAAD,EAA8BO,OAA9B,CAAnB,CAXyD,EAY/DH,EAAE,IAAIU,UAAU,CAACC,OAAX,CAAmB,CAAC;AAAEU,MAAAA,QAAQ,EAAEzB,SAAS,CAAC,EAAD;AAArB,KAAD,EAA8BQ,OAA9B,CAAnB,CAZyD,EAa/DH,EAAE,IAAIS,UAAU,CAACC,OAAX,CAAmB,CAAC;AAAEU,MAAAA,QAAQ,EAAEzB,SAAS,CAAC,EAAD;AAArB,KAAD,EAA8BS,OAA9B,CAAnB,CAbyD,EAc/DH,EAAE,IAAIQ,UAAU,CAACC,OAAX,CAAmB,CAAC;AAAEU,MAAAA,QAAQ,EAAEzB,SAAS,CAAC,EAAD;AAArB,KAAD,EAA8BU,OAA9B,CAAnB,CAdyD,CAAnB;AAA5C,KAeIX,aAAa,CAACc,IAAD,CAfjB;AAAA,cAgBLF;AAhBK,KAAR;AAkBH,CAnBM;AAoBP,IAAMY,MAAM,GAAGT,UAAU,CAACY,MAAX,CAAkB;AAC7BF,EAAAA,IAAI,oBACGR,QAAQ,CAACC,MAAT,CAAgB;AACfC,IAAAA,OAAO,oBACArB,KAAK,CAACqB,OAAN,CAAcM,IADd;AADQ,GAAhB,CADH;AADyB,CAAlB,CAAf;AASAvB,IAAI,CAAC0B,WAAL,GAAmB,MAAnB","sourcesContent":["import React from 'react';\nimport { Text as NativeText, StyleSheet, Platform, } from 'react-native';\nimport { fonts } from '../helpers/index-config';\nimport { defaultTheme, patchWebProps } from '../helpers';\nimport normalize from '../helpers/normalizeText';\nexport const Text = ({ style = {}, h1 = false, h2 = false, h3 = false, h4 = false, h1Style = {}, h2Style = {}, h3Style = {}, h4Style = {}, children = '', theme = defaultTheme, ...rest }) => {\n    return (<NativeText accessibilityRole=\"text\" style={StyleSheet.flatten([\n            {\n                ...Platform.select({\n                    android: {\n                        ...fonts.android.regular,\n                    },\n                }),\n                color: theme?.colors?.black,\n            },\n            style,\n            (h1 || h2 || h3 || h4) && styles.bold,\n            h1 && StyleSheet.flatten([{ fontSize: normalize(40) }, h1Style]),\n            h2 && StyleSheet.flatten([{ fontSize: normalize(34) }, h2Style]),\n            h3 && StyleSheet.flatten([{ fontSize: normalize(28) }, h3Style]),\n            h4 && StyleSheet.flatten([{ fontSize: normalize(22) }, h4Style]),\n        ])} {...patchWebProps(rest)}>\n      {children}\n    </NativeText>);\n};\nconst styles = StyleSheet.create({\n    bold: {\n        ...Platform.select({\n            android: {\n                ...fonts.android.bold,\n            },\n        }),\n    },\n});\nText.displayName = 'Text';\n"]},"metadata":{},"sourceType":"module"}