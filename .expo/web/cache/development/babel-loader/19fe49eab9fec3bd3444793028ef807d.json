{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"title\", \"buttonStyle\", \"color\", \"titleStyle\", \"onButtonPress\", \"icon\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Button } from \"../../Button\";\nimport { Icon } from \"../../Icon\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var PricingButton = function PricingButton(props) {\n  var title = props.title,\n      buttonStyle = props.buttonStyle,\n      color = props.color,\n      titleStyle = props.titleStyle,\n      onButtonPress = props.onButtonPress,\n      icon = props.icon,\n      buttonProps = _objectWithoutProperties(props, _excluded);\n\n  return _jsx(Button, _objectSpread({\n    testID: \"RNE__PricingButton\",\n    title: title,\n    buttonStyle: StyleSheet.flatten([styles.button, buttonStyle, {\n      backgroundColor: color\n    }]),\n    titleStyle: titleStyle,\n    onPress: onButtonPress,\n    icon: React.isValidElement(icon) ? icon : typeof icon === 'string' ? _jsx(Icon, {\n      name: icon,\n      size: 15,\n      color: \"white\"\n    }) : _jsx(Icon, _objectSpread({}, icon))\n  }, buttonProps));\n};\nvar styles = StyleSheet.create({\n  button: {\n    marginTop: 15,\n    marginBottom: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/Spencer/Documents/Code/WATO/wato/node_modules/@react-native-elements/base/dist/PricingCard/components/PricingButton.js"],"names":["React","Button","Icon","PricingButton","props","title","buttonStyle","color","titleStyle","onButtonPress","icon","buttonProps","StyleSheet","flatten","styles","button","backgroundColor","isValidElement","create","marginTop","marginBottom"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,MAAT;AACA,SAASC,IAAT;;AACA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AACpC,MAAQC,KAAR,GAAuFD,KAAvF,CAAQC,KAAR;AAAA,MAAeC,WAAf,GAAuFF,KAAvF,CAAeE,WAAf;AAAA,MAA4BC,KAA5B,GAAuFH,KAAvF,CAA4BG,KAA5B;AAAA,MAAmCC,UAAnC,GAAuFJ,KAAvF,CAAmCI,UAAnC;AAAA,MAA+CC,aAA/C,GAAuFL,KAAvF,CAA+CK,aAA/C;AAAA,MAA8DC,IAA9D,GAAuFN,KAAvF,CAA8DM,IAA9D;AAAA,MAAuEC,WAAvE,4BAAuFP,KAAvF;;AACA,SAAQ,KAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,oBAAf;AAAoC,IAAA,KAAK,EAAEC,KAA3C;AAAkD,IAAA,WAAW,EAAEO,UAAU,CAACC,OAAX,CAAmB,CAClFC,MAAM,CAACC,MAD2E,EAElFT,WAFkF,EAGlF;AAAEU,MAAAA,eAAe,EAAET;AAAnB,KAHkF,CAAnB,CAA/D;AAIA,IAAA,UAAU,EAAEC,UAJZ;AAIwB,IAAA,OAAO,EAAEC,aAJjC;AAIgD,IAAA,IAAI,EAAET,KAAK,CAACiB,cAAN,CAAqBP,IAArB,IAA8BA,IAA9B,GAAsC,OAAOA,IAAP,KAAgB,QAAhB,GAA4B,KAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,IAAZ;AAAkB,MAAA,IAAI,EAAE,EAAxB;AAA4B,MAAA,KAAK,EAAC;AAAlC,MAA5B,GAA4E,KAAC,IAAD,oBAAUA,IAAV;AAJxK,KAIgMC,WAJhM,EAAR;AAKH,CAPM;AAQP,IAAMG,MAAM,GAAGF,UAAU,CAACM,MAAX,CAAkB;AAC7BH,EAAAA,MAAM,EAAE;AACJI,IAAAA,SAAS,EAAE,EADP;AAEJC,IAAAA,YAAY,EAAE;AAFV;AADqB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button } from '../../Button';\nimport { Icon } from '../../Icon';\nexport const PricingButton = (props) => {\n    const { title, buttonStyle, color, titleStyle, onButtonPress, icon, ...buttonProps } = props;\n    return (<Button testID=\"RNE__PricingButton\" title={title} buttonStyle={StyleSheet.flatten([\n            styles.button,\n            buttonStyle,\n            { backgroundColor: color },\n        ])} titleStyle={titleStyle} onPress={onButtonPress} icon={React.isValidElement(icon) ? (icon) : typeof icon === 'string' ? (<Icon name={icon} size={15} color=\"white\"/>) : (<Icon {...icon}/>)} {...buttonProps}/>);\n};\nconst styles = StyleSheet.create({\n    button: {\n        marginTop: 15,\n        marginBottom: 10,\n    },\n});\n"]},"metadata":{},"sourceType":"module"}