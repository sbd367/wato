{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"Component\", \"pressableProps\", \"buttons\", \"onPress\", \"onLongPress\", \"onPressIn\", \"onPressOut\", \"selectedIndex\", \"selectedIndexes\", \"selectMultiple\", \"containerStyle\", \"innerBorderStyle\", \"buttonStyle\", \"buttonContainerStyle\", \"textStyle\", \"selectedTextStyle\", \"selectedButtonStyle\", \"activeOpacity\", \"onHideUnderlay\", \"onShowUnderlay\", \"setOpacityTo\", \"disabled\", \"disabledStyle\", \"disabledTextStyle\", \"disabledSelectedStyle\", \"disabledSelectedTextStyle\", \"vertical\", \"theme\", \"underlayColor\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport Color from 'color';\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { normalizeText, color, androidRipple, defaultTheme } from \"../helpers\";\nimport { Text } from \"../Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var ButtonGroup = function ButtonGroup(_ref) {\n  var _theme$colors;\n\n  var _ref$Component = _ref.Component,\n      Component = _ref$Component === void 0 ? Pressable : _ref$Component,\n      pressableProps = _ref.pressableProps,\n      buttons = _ref.buttons,\n      _ref$onPress = _ref.onPress,\n      _onPress = _ref$onPress === void 0 ? function () {\n    return null;\n  } : _ref$onPress,\n      onLongPress = _ref.onLongPress,\n      onPressIn = _ref.onPressIn,\n      onPressOut = _ref.onPressOut,\n      _ref$selectedIndex = _ref.selectedIndex,\n      selectedIndex = _ref$selectedIndex === void 0 ? null : _ref$selectedIndex,\n      _ref$selectedIndexes = _ref.selectedIndexes,\n      selectedIndexes = _ref$selectedIndexes === void 0 ? [] : _ref$selectedIndexes,\n      _ref$selectMultiple = _ref.selectMultiple,\n      selectMultiple = _ref$selectMultiple === void 0 ? false : _ref$selectMultiple,\n      containerStyle = _ref.containerStyle,\n      innerBorderStyle = _ref.innerBorderStyle,\n      buttonStyle = _ref.buttonStyle,\n      buttonContainerStyle = _ref.buttonContainerStyle,\n      textStyle = _ref.textStyle,\n      selectedTextStyle = _ref.selectedTextStyle,\n      selectedButtonStyle = _ref.selectedButtonStyle,\n      activeOpacity = _ref.activeOpacity,\n      onHideUnderlay = _ref.onHideUnderlay,\n      onShowUnderlay = _ref.onShowUnderlay,\n      setOpacityTo = _ref.setOpacityTo,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      disabledStyle = _ref.disabledStyle,\n      disabledTextStyle = _ref.disabledTextStyle,\n      disabledSelectedStyle = _ref.disabledSelectedStyle,\n      disabledSelectedTextStyle = _ref.disabledSelectedTextStyle,\n      _ref$vertical = _ref.vertical,\n      vertical = _ref$vertical === void 0 ? false : _ref$vertical,\n      _ref$theme = _ref.theme,\n      theme = _ref$theme === void 0 ? defaultTheme : _ref$theme,\n      _ref$underlayColor = _ref.underlayColor,\n      underlayColor = _ref$underlayColor === void 0 ? theme == null ? void 0 : (_theme$colors = theme.colors) == null ? void 0 : _theme$colors.primary : _ref$underlayColor,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var innerBorderWidth = 1;\n\n  if (innerBorderStyle && Object.prototype.hasOwnProperty.call(innerBorderStyle, 'width')) {\n    innerBorderWidth = innerBorderStyle.width;\n  }\n\n  return _jsx(View, _objectSpread(_objectSpread({\n    testID: \"RNE__ButtonGroupContainer\"\n  }, rest), {}, {\n    style: StyleSheet.flatten([styles.container, vertical && styles.verticalContainer, containerStyle && containerStyle]),\n    children: buttons == null ? void 0 : buttons.map(function (button, i) {\n      var _theme$colors2, _theme$colors3, _theme$colors4, _theme$colors5, _theme$colors6, _theme$colors7;\n\n      var isSelected = selectedIndex === i || selectedIndexes.includes(i);\n      var isDisabled = disabled === true || Array.isArray(disabled) && disabled.includes(i);\n      return _jsx(View, {\n        style: StyleSheet.flatten([styles.button, vertical && styles.verticalComponent, i !== buttons.length - 1 && (vertical ? {\n          borderBottomWidth: innerBorderWidth,\n          borderBottomColor: innerBorderStyle && innerBorderStyle.color || (theme == null ? void 0 : (_theme$colors2 = theme.colors) == null ? void 0 : _theme$colors2.grey4)\n        } : {\n          borderRightWidth: innerBorderWidth,\n          borderRightColor: innerBorderStyle && innerBorderStyle.color || (theme == null ? void 0 : (_theme$colors3 = theme.colors) == null ? void 0 : _theme$colors3.grey4)\n        }), buttonContainerStyle]),\n        children: _jsx(Component, _objectSpread(_objectSpread({\n          testID: \"RNE__ButtonGroupItem\",\n          accessibilityState: {\n            disabled: isDisabled\n          },\n          activeOpacity: activeOpacity,\n          setOpacityTo: setOpacityTo,\n          onHideUnderlay: onHideUnderlay,\n          onShowUnderlay: onShowUnderlay,\n          disabled: isDisabled,\n          onPress: function onPress() {\n            if (selectMultiple) {\n              if (selectedIndexes.includes(i)) {\n                _onPress(selectedIndexes.filter(function (index) {\n                  return index !== i;\n                }));\n              } else {\n                _onPress([].concat(_toConsumableArray(selectedIndexes), [i]));\n              }\n            } else {\n              _onPress(i);\n            }\n          },\n          style: styles.button\n        }, _objectSpread({\n          android_ripple: androidRipple(Color(underlayColor).alpha(activeOpacity).rgb().toString()),\n          onPressIn: onPressIn,\n          onPressOut: onPressOut,\n          onLongPress: onLongPress\n        }, pressableProps)), {}, {\n          children: _jsx(View, {\n            style: StyleSheet.flatten([styles.textContainer, buttonStyle && buttonStyle, isSelected && {\n              backgroundColor: theme == null ? void 0 : (_theme$colors4 = theme.colors) == null ? void 0 : _theme$colors4.primary\n            }, isSelected && selectedButtonStyle && selectedButtonStyle, isDisabled && styles.disabled, isDisabled && disabledStyle, isDisabled && isSelected && {\n              backgroundColor: theme == null ? void 0 : (_theme$colors5 = theme.colors) == null ? void 0 : _theme$colors5.disabled\n            }, isDisabled && isSelected && disabledSelectedStyle]),\n            children: button.element ? _jsx(button.element, {\n              isSelected: isSelected\n            }) : _jsx(Text, {\n              testID: \"buttonGroupItemText\",\n              style: StyleSheet.flatten([_objectSpread({\n                fontSize: normalizeText(13),\n                color: theme == null ? void 0 : (_theme$colors6 = theme.colors) == null ? void 0 : _theme$colors6.grey2\n              }, Platform.select({\n                android: {},\n                default: {\n                  fontWeight: '500'\n                }\n              })), textStyle && textStyle, isSelected && {\n                color: '#fff'\n              }, isSelected && selectedTextStyle, isDisabled && {\n                color: color(theme == null ? void 0 : (_theme$colors7 = theme.colors) == null ? void 0 : _theme$colors7.disabled).darken(0.3).toString()\n              }, isDisabled && disabledTextStyle, isDisabled && isSelected && disabledSelectedTextStyle]),\n              children: button\n            })\n          })\n        }))\n      }, i);\n    })\n  }));\n};\nvar styles = StyleSheet.create({\n  button: {\n    flex: 1\n  },\n  textContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 5,\n    borderColor: '#e3e3e3',\n    borderWidth: 1,\n    flexDirection: 'row',\n    borderRadius: 3,\n    overflow: 'hidden',\n    backgroundColor: '#fff',\n    height: 40\n  },\n  verticalContainer: {\n    flexDirection: 'column',\n    height: null\n  },\n  verticalComponent: {\n    height: 40\n  },\n  disabled: {\n    backgroundColor: 'transparent'\n  }\n});\nButtonGroup.displayName = 'ButtonGroup';","map":{"version":3,"sources":["C:/Users/Spencer/Documents/Code/WATO/wato/node_modules/@react-native-elements/base/dist/ButtonGroup/ButtonGroup.js"],"names":["Color","React","normalizeText","color","androidRipple","defaultTheme","Text","ButtonGroup","Component","Pressable","pressableProps","buttons","onPress","onLongPress","onPressIn","onPressOut","selectedIndex","selectedIndexes","selectMultiple","containerStyle","innerBorderStyle","buttonStyle","buttonContainerStyle","textStyle","selectedTextStyle","selectedButtonStyle","activeOpacity","onHideUnderlay","onShowUnderlay","setOpacityTo","disabled","disabledStyle","disabledTextStyle","disabledSelectedStyle","disabledSelectedTextStyle","vertical","theme","underlayColor","colors","primary","rest","innerBorderWidth","Object","prototype","hasOwnProperty","call","width","StyleSheet","flatten","styles","container","verticalContainer","map","button","i","isSelected","includes","isDisabled","Array","isArray","verticalComponent","length","borderBottomWidth","borderBottomColor","grey4","borderRightWidth","borderRightColor","filter","index","android_ripple","alpha","rgb","toString","textContainer","backgroundColor","element","fontSize","grey2","Platform","select","android","default","fontWeight","darken","create","flex","justifyContent","alignItems","marginHorizontal","marginVertical","borderColor","borderWidth","flexDirection","borderRadius","overflow","height","displayName"],"mappings":"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","sourcesContent":["import Color from 'color';\nimport React from 'react';\nimport { View, Platform, StyleSheet, Pressable, } from 'react-native';\nimport { normalizeText, color, androidRipple, defaultTheme, } from '../helpers';\nimport { Text } from '../Text';\nexport const ButtonGroup = ({ Component = Pressable, pressableProps, buttons, onPress = () => null, onLongPress, onPressIn, onPressOut, selectedIndex = null, selectedIndexes = [], selectMultiple = false, containerStyle, innerBorderStyle, buttonStyle, buttonContainerStyle, textStyle, selectedTextStyle, selectedButtonStyle, activeOpacity, onHideUnderlay, onShowUnderlay, setOpacityTo, disabled = false, disabledStyle, disabledTextStyle, disabledSelectedStyle, disabledSelectedTextStyle, vertical = false, theme = defaultTheme, underlayColor = theme?.colors?.primary, ...rest }) => {\n    let innerBorderWidth = 1;\n    if (innerBorderStyle &&\n        Object.prototype.hasOwnProperty.call(innerBorderStyle, 'width')) {\n        innerBorderWidth = innerBorderStyle.width;\n    }\n    return (<View testID=\"RNE__ButtonGroupContainer\" {...rest} style={StyleSheet.flatten([\n            styles.container,\n            vertical && styles.verticalContainer,\n            containerStyle && containerStyle,\n        ])}>\n      {buttons?.map((button, i) => {\n            const isSelected = selectedIndex === i || selectedIndexes.includes(i);\n            const isDisabled = disabled === true ||\n                (Array.isArray(disabled) && disabled.includes(i));\n            return (<View key={i} style={StyleSheet.flatten([\n                    styles.button,\n                    vertical && styles.verticalComponent,\n                    i !== buttons.length - 1 &&\n                        (vertical\n                            ? {\n                                borderBottomWidth: innerBorderWidth,\n                                borderBottomColor: (innerBorderStyle && innerBorderStyle.color) ||\n                                    theme?.colors?.grey4,\n                            }\n                            : {\n                                borderRightWidth: innerBorderWidth,\n                                borderRightColor: (innerBorderStyle && innerBorderStyle.color) ||\n                                    theme?.colors?.grey4,\n                            }),\n                    buttonContainerStyle,\n                ])}>\n            <Component testID=\"RNE__ButtonGroupItem\" accessibilityState={{\n                    disabled: isDisabled,\n                }} activeOpacity={activeOpacity} setOpacityTo={setOpacityTo} onHideUnderlay={onHideUnderlay} onShowUnderlay={onShowUnderlay} disabled={isDisabled} onPress={() => {\n                    if (selectMultiple) {\n                        if (selectedIndexes.includes(i)) {\n                            onPress(selectedIndexes.filter((index) => index !== i));\n                        }\n                        else {\n                            onPress([...selectedIndexes, i]);\n                        }\n                    }\n                    else {\n                        onPress(i);\n                    }\n                }} style={styles.button} {...{\n                android_ripple: androidRipple(Color(underlayColor).alpha(activeOpacity).rgb().toString()),\n                onPressIn,\n                onPressOut,\n                onLongPress,\n                ...pressableProps,\n            }}>\n              <View style={StyleSheet.flatten([\n                    styles.textContainer,\n                    buttonStyle && buttonStyle,\n                    isSelected && {\n                        backgroundColor: theme?.colors?.primary,\n                    },\n                    isSelected && selectedButtonStyle && selectedButtonStyle,\n                    isDisabled && styles.disabled,\n                    isDisabled && disabledStyle,\n                    isDisabled &&\n                        isSelected && {\n                        backgroundColor: theme?.colors?.disabled,\n                    },\n                    isDisabled && isSelected && disabledSelectedStyle,\n                ])}>\n                {button.element ? (<button.element isSelected={isSelected}/>) : (<Text testID=\"buttonGroupItemText\" style={StyleSheet.flatten([\n                        {\n                            fontSize: normalizeText(13),\n                            color: theme?.colors?.grey2,\n                            ...Platform.select({\n                                android: {},\n                                default: {\n                                    fontWeight: '500',\n                                },\n                            }),\n                        },\n                        textStyle && textStyle,\n                        isSelected && { color: '#fff' },\n                        isSelected && selectedTextStyle,\n                        isDisabled && {\n                            color: color(theme?.colors?.disabled)\n                                .darken(0.3)\n                                .toString(),\n                        },\n                        isDisabled && disabledTextStyle,\n                        isDisabled && isSelected && disabledSelectedTextStyle,\n                    ])}>\n                    {button}\n                  </Text>)}\n              </View>\n            </Component>\n          </View>);\n        })}\n    </View>);\n};\nconst styles = StyleSheet.create({\n    button: {\n        flex: 1,\n    },\n    textContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    container: {\n        marginHorizontal: 10,\n        marginVertical: 5,\n        borderColor: '#e3e3e3',\n        borderWidth: 1,\n        flexDirection: 'row',\n        borderRadius: 3,\n        overflow: 'hidden',\n        backgroundColor: '#fff',\n        height: 40,\n    },\n    verticalContainer: {\n        flexDirection: 'column',\n        height: null,\n    },\n    verticalComponent: {\n        height: 40,\n    },\n    disabled: {\n        backgroundColor: 'transparent',\n    },\n});\nButtonGroup.displayName = 'ButtonGroup';\n"]},"metadata":{},"sourceType":"module"}