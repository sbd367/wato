{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"theme\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport normalize from \"../helpers/normalizeText\";\nimport { fonts } from \"../helpers/index-config\";\nimport { Text } from \"../Text\";\nimport { defaultTheme } from \"../helpers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var CardTitle = function CardTitle(_ref) {\n  var _theme$colors;\n\n  var style = _ref.style,\n      _ref$theme = _ref.theme,\n      theme = _ref$theme === void 0 ? defaultTheme : _ref$theme,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return _jsx(Text, _objectSpread({\n    testID: \"cardTitle\",\n    style: StyleSheet.flatten([_objectSpread(_objectSpread({\n      fontSize: normalize(14),\n      color: theme == null ? void 0 : (_theme$colors = theme.colors) == null ? void 0 : _theme$colors.grey1\n    }, Platform.select({\n      android: _objectSpread({}, fonts.android.black),\n      default: {\n        fontWeight: 'bold'\n      }\n    })), {}, {\n      textAlign: 'center',\n      marginBottom: 15\n    }), style])\n  }, rest));\n};\nCardTitle.displayName = 'Card.Title';","map":{"version":3,"sources":["C:/Users/Spencer/Documents/Code/WATO/wato/node_modules/@react-native-elements/base/dist/Card/Card.Title.js"],"names":["React","normalize","fonts","Text","defaultTheme","CardTitle","style","theme","rest","StyleSheet","flatten","fontSize","color","colors","grey1","Platform","select","android","black","default","fontWeight","textAlign","marginBottom","displayName"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,OAAOC,SAAP;AACA,SAASC,KAAT;AACA,SAASC,IAAT;AACA,SAASC,YAAT;;AACA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,wBAAUC,KAAV;AAAA,MAAUA,KAAV,2BAAkBH,YAAlB;AAAA,MAAmCI,IAAnC;;AAAA,SAA+C,KAAC,IAAD;AAAM,IAAA,MAAM,EAAC,WAAb;AAAyB,IAAA,KAAK,EAAEC,UAAU,CAACC,OAAX,CAAmB;AAE/GC,MAAAA,QAAQ,EAAEV,SAAS,CAAC,EAAD,CAF4F;AAG/GW,MAAAA,KAAK,EAAEL,KAAF,qCAAEA,KAAK,CAAEM,MAAT,qBAAE,cAAeC;AAHyF,OAI5GC,QAAQ,CAACC,MAAT,CAAgB;AACfC,MAAAA,OAAO,oBACAf,KAAK,CAACe,OAAN,CAAcC,KADd,CADQ;AAIfC,MAAAA,OAAO,EAAE;AACLC,QAAAA,UAAU,EAAE;AADP;AAJM,KAAhB,CAJ4G;AAY/GC,MAAAA,SAAS,EAAE,QAZoG;AAa/GC,MAAAA,YAAY,EAAE;AAbiG,QAenHhB,KAfmH,CAAnB;AAAhC,KAgB5DE,IAhB4D,EAA/C;AAAA,CAAlB;AAiBPH,SAAS,CAACkB,WAAV,GAAwB,YAAxB","sourcesContent":["import React from 'react';\nimport { Platform, StyleSheet } from 'react-native';\nimport normalize from '../helpers/normalizeText';\nimport { fonts } from '../helpers/index-config';\nimport { Text } from '../Text';\nimport { defaultTheme } from '../helpers';\nexport const CardTitle = ({ style, theme = defaultTheme, ...rest }) => (<Text testID=\"cardTitle\" style={StyleSheet.flatten([\n        {\n            fontSize: normalize(14),\n            color: theme?.colors?.grey1,\n            ...Platform.select({\n                android: {\n                    ...fonts.android.black,\n                },\n                default: {\n                    fontWeight: 'bold',\n                },\n            }),\n            textAlign: 'center',\n            marginBottom: 15,\n        },\n        style,\n    ])} {...rest}/>);\nCardTitle.displayName = 'Card.Title';\n"]},"metadata":{},"sourceType":"module"}