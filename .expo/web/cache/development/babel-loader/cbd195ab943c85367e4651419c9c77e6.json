{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"title\", \"icon\", \"caption\", \"imageSrc\", \"containerStyle\", \"imageContainerStyle\", \"overlayContainerStyle\", \"iconContainerStyle\", \"titleStyle\", \"captionStyle\", \"ImageComponent\", \"imageProps\", \"width\", \"height\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { BackgroundImage } from \"../../helpers/index-config\";\nimport { renderNode } from \"../../helpers\";\nimport { Text } from \"../../Text\";\nimport { Icon } from \"../../Icon\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar renderText = function renderText(content, defaultProps, style) {\n  return renderNode(Text, content, _objectSpread(_objectSpread({}, defaultProps), {}, {\n    style: StyleSheet.flatten([style, defaultProps && defaultProps.style])\n  }));\n};\n\nvar FeaturedTile = function FeaturedTile(_ref) {\n  var title = _ref.title,\n      icon = _ref.icon,\n      caption = _ref.caption,\n      imageSrc = _ref.imageSrc,\n      containerStyle = _ref.containerStyle,\n      imageContainerStyle = _ref.imageContainerStyle,\n      overlayContainerStyle = _ref.overlayContainerStyle,\n      iconContainerStyle = _ref.iconContainerStyle,\n      titleStyle = _ref.titleStyle,\n      captionStyle = _ref.captionStyle,\n      _ref$ImageComponent = _ref.ImageComponent,\n      ImageComponent = _ref$ImageComponent === void 0 ? BackgroundImage : _ref$ImageComponent,\n      _ref$imageProps = _ref.imageProps,\n      imageProps = _ref$imageProps === void 0 ? {} : _ref$imageProps,\n      _ref$width = _ref.width,\n      width = _ref$width === void 0 ? Dimensions.get('window').width : _ref$width,\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? width * 0.8 : _ref$height,\n      attributes = _objectWithoutProperties(_ref, _excluded);\n\n  return _jsx(Pressable, _objectSpread(_objectSpread({}, attributes), {}, {\n    style: StyleSheet.flatten([{\n      width: width,\n      height: height\n    }, containerStyle && containerStyle]),\n    children: _jsx(ImageComponent, _objectSpread(_objectSpread({\n      resizeMode: \"cover\"\n    }, imageProps), {}, {\n      source: imageSrc,\n      style: StyleSheet.flatten([{\n        width: width,\n        height: height\n      }, styles.imageContainer, imageContainerStyle && imageContainerStyle]),\n      children: _jsxs(View, {\n        style: StyleSheet.flatten([styles.overlayContainer, overlayContainerStyle && overlayContainerStyle]),\n        children: [_jsx(View, {\n          style: StyleSheet.flatten([styles.iconContainer, iconContainerStyle && iconContainerStyle]),\n          children: icon && _jsx(Icon, _objectSpread({}, icon))\n        }), _jsx(Text, {\n          testID: \"featuredTileTitle\",\n          h4: !titleStyle || !('fontSize' in titleStyle),\n          style: StyleSheet.flatten([styles.text, titleStyle && titleStyle]),\n          children: title\n        }), renderText(caption, {\n          style: captionStyle\n        }, styles.text)]\n      })\n    }))\n  }));\n};\n\nexport { FeaturedTile };\nvar styles = StyleSheet.create({\n  imageContainer: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  overlayContainer: {\n    flex: 1,\n    alignItems: 'center',\n    alignSelf: 'stretch',\n    justifyContent: 'center',\n    paddingLeft: 25,\n    paddingRight: 25,\n    paddingTop: 45,\n    paddingBottom: 40,\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  text: {\n    color: '#ffffff',\n    backgroundColor: 'rgba(0,0,0,0)',\n    marginBottom: 15,\n    textAlign: 'center'\n  },\n  iconContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignSelf: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Spencer/Documents/Code/WATO/wato/node_modules/@react-native-elements/base/dist/Tile/components/FeaturedTile.js"],"names":["React","BackgroundImage","renderNode","Text","Icon","renderText","content","defaultProps","style","StyleSheet","flatten","FeaturedTile","title","icon","caption","imageSrc","containerStyle","imageContainerStyle","overlayContainerStyle","iconContainerStyle","titleStyle","captionStyle","ImageComponent","imageProps","width","Dimensions","get","height","attributes","styles","imageContainer","overlayContainer","iconContainer","text","create","alignItems","justifyContent","flex","alignSelf","paddingLeft","paddingRight","paddingTop","paddingBottom","position","top","left","right","bottom","color","backgroundColor","marginBottom","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Pressable, View, StyleSheet, Dimensions, } from 'react-native';\nimport { BackgroundImage } from '../../helpers/index-config';\nimport { renderNode } from '../../helpers';\nimport { Text } from '../../Text';\nimport { Icon } from '../../Icon';\nconst renderText = (content, defaultProps, style) => renderNode(Text, content, {\n    ...defaultProps,\n    style: StyleSheet.flatten([style, defaultProps && defaultProps.style]),\n});\nconst FeaturedTile = ({ title, icon, caption, imageSrc, containerStyle, imageContainerStyle, overlayContainerStyle, iconContainerStyle, titleStyle, captionStyle, ImageComponent = BackgroundImage, imageProps = {}, width = Dimensions.get('window').width, height = width * 0.8, ...attributes }) => {\n    return (<Pressable {...attributes} style={StyleSheet.flatten([\n            { width, height },\n            containerStyle && containerStyle,\n        ])}>\n      <ImageComponent resizeMode=\"cover\" {...imageProps} source={imageSrc} style={StyleSheet.flatten([\n            { width, height },\n            styles.imageContainer,\n            imageContainerStyle && imageContainerStyle,\n        ])}>\n        <View style={StyleSheet.flatten([\n            styles.overlayContainer,\n            overlayContainerStyle && overlayContainerStyle,\n        ])}>\n          <View style={StyleSheet.flatten([\n            styles.iconContainer,\n            iconContainerStyle && iconContainerStyle,\n        ])}>\n            {icon && <Icon {...icon}/>}\n          </View>\n          <Text testID=\"featuredTileTitle\" h4={!titleStyle || !('fontSize' in titleStyle)} style={StyleSheet.flatten([styles.text, titleStyle && titleStyle])}>\n            {title}\n          </Text>\n          {renderText(caption, { style: captionStyle }, styles.text)}\n        </View>\n      </ImageComponent>\n    </Pressable>);\n};\nexport { FeaturedTile };\nconst styles = StyleSheet.create({\n    imageContainer: {\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    overlayContainer: {\n        flex: 1,\n        alignItems: 'center',\n        alignSelf: 'stretch',\n        justifyContent: 'center',\n        paddingLeft: 25,\n        paddingRight: 25,\n        paddingTop: 45,\n        paddingBottom: 40,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n    },\n    text: {\n        color: '#ffffff',\n        backgroundColor: 'rgba(0,0,0,0)',\n        marginBottom: 15,\n        textAlign: 'center',\n    },\n    iconContainer: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignSelf: 'center',\n    },\n});\n"]},"metadata":{},"sourceType":"module"}