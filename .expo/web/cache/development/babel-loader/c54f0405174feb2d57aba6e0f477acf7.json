{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"bottom\", \"hidden\", \"left\", \"containerStyle\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Badge } from \"./Badge\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var withBadge = function withBadge(value) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return function (WrappedComponent) {\n    var WithBadge = function WithBadge(props) {\n      var bottom = options.bottom,\n          _options$hidden = options.hidden,\n          hidden = _options$hidden === void 0 ? false : _options$hidden,\n          left = options.left,\n          containerStyle = options.containerStyle,\n          badgeProps = _objectWithoutProperties(options, _excluded);\n\n      var _options$right = options.right,\n          right = _options$right === void 0 ? -16 : _options$right,\n          _options$top = options.top,\n          top = _options$top === void 0 ? -1 : _options$top;\n\n      if (!value) {\n        right = -3;\n        top = 3;\n      }\n\n      var badgeValue = typeof value === 'function' ? value(props) : value;\n      return _jsxs(View, {\n        style: StyleSheet.flatten([styles.container, containerStyle]),\n        children: [_jsx(WrappedComponent, _objectSpread({}, props)), !hidden && _jsx(Badge, _objectSpread({\n          value: badgeValue,\n          status: \"error\",\n          containerStyle: StyleSheet.flatten([styles.badgeContainer, {\n            bottom: bottom,\n            left: left,\n            right: right,\n            top: top\n          }])\n        }, badgeProps))]\n      });\n    };\n\n    WithBadge.displayName = \"WithBadge(\" + (WrappedComponent.displayName || WrappedComponent.name || 'Component') + \")\";\n    return WithBadge;\n  };\n};\nvar styles = StyleSheet.create({\n  badgeContainer: {\n    position: 'absolute'\n  },\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'relative'\n  }\n});","map":{"version":3,"sources":["C:/Users/Spencer/Documents/Code/WATO/wato/node_modules/@react-native-elements/base/dist/Badge/withBadge.js"],"names":["React","Badge","withBadge","value","options","WrappedComponent","WithBadge","props","bottom","hidden","left","containerStyle","badgeProps","right","top","badgeValue","StyleSheet","flatten","styles","container","badgeContainer","displayName","name","create","position","alignItems","justifyContent"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,KAAT;;;AACA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD;AAAA,MAAQC,OAAR,uEAAkB,EAAlB;AAAA,SAAyB,UAACC,gBAAD,EAAsB;AACpE,QAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AACzB,UAAQC,MAAR,GAAwEJ,OAAxE,CAAQI,MAAR;AAAA,4BAAwEJ,OAAxE,CAAgBK,MAAhB;AAAA,UAAgBA,MAAhB,gCAAyB,KAAzB;AAAA,UAAgCC,IAAhC,GAAwEN,OAAxE,CAAgCM,IAAhC;AAAA,UAAsCC,cAAtC,GAAwEP,OAAxE,CAAsCO,cAAtC;AAAA,UAAyDC,UAAzD,4BAAwER,OAAxE;;AACA,2BAAgCA,OAAhC,CAAMS,KAAN;AAAA,UAAMA,KAAN,+BAAc,CAAC,EAAf;AAAA,yBAAgCT,OAAhC,CAAmBU,GAAnB;AAAA,UAAmBA,GAAnB,6BAAyB,CAAC,CAA1B;;AACA,UAAI,CAACX,KAAL,EAAY;AACRU,QAAAA,KAAK,GAAG,CAAC,CAAT;AACAC,QAAAA,GAAG,GAAG,CAAN;AACH;;AACD,UAAMC,UAAU,GAAG,OAAOZ,KAAP,KAAiB,UAAjB,GAA8BA,KAAK,CAACI,KAAD,CAAnC,GAA6CJ,KAAhE;AACA,aAAQ,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEa,UAAU,CAACC,OAAX,CAAmB,CAACC,MAAM,CAACC,SAAR,EAAmBR,cAAnB,CAAnB,CAAb;AAAA,mBACN,KAAC,gBAAD,oBAAsBJ,KAAtB,EADM,EAGL,CAACE,MAAD,IAAY,KAAC,KAAD;AAAO,UAAA,KAAK,EAAEM,UAAd;AAA0B,UAAA,MAAM,EAAC,OAAjC;AAAyC,UAAA,cAAc,EAAEC,UAAU,CAACC,OAAX,CAAmB,CAC/EC,MAAM,CAACE,cADwE,EAE/E;AAAEZ,YAAAA,MAAM,EAANA,MAAF;AAAUE,YAAAA,IAAI,EAAJA,IAAV;AAAgBG,YAAAA,KAAK,EAALA,KAAhB;AAAuBC,YAAAA,GAAG,EAAHA;AAAvB,WAF+E,CAAnB;AAAzD,WAGCF,UAHD,EAHP;AAAA,QAAR;AAQH,KAhBD;;AAiBAN,IAAAA,SAAS,CAACe,WAAV,mBAAqChB,gBAAgB,CAACgB,WAAjB,IAAgChB,gBAAgB,CAACiB,IAAjD,IAAyD,WAA9F;AACA,WAAOhB,SAAP;AACH,GApBwB;AAAA,CAAlB;AAqBP,IAAMY,MAAM,GAAGF,UAAU,CAACO,MAAX,CAAkB;AAC7BH,EAAAA,cAAc,EAAE;AACZI,IAAAA,QAAQ,EAAE;AADE,GADa;AAI7BL,EAAAA,SAAS,EAAE;AACPM,IAAAA,UAAU,EAAE,QADL;AAEPC,IAAAA,cAAc,EAAE,QAFT;AAGPF,IAAAA,QAAQ,EAAE;AAHH;AAJkB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Badge } from './Badge';\nexport const withBadge = (value, options = {}) => (WrappedComponent) => {\n    const WithBadge = (props) => {\n        const { bottom, hidden = false, left, containerStyle, ...badgeProps } = options;\n        let { right = -16, top = -1 } = options;\n        if (!value) {\n            right = -3;\n            top = 3;\n        }\n        const badgeValue = typeof value === 'function' ? value(props) : value;\n        return (<View style={StyleSheet.flatten([styles.container, containerStyle])}>\n          <WrappedComponent {...props}/>\n\n          {!hidden && (<Badge value={badgeValue} status=\"error\" containerStyle={StyleSheet.flatten([\n                    styles.badgeContainer,\n                    { bottom, left, right, top },\n                ])} {...badgeProps}/>)}\n        </View>);\n    };\n    WithBadge.displayName = `WithBadge(${WrappedComponent.displayName || WrappedComponent.name || 'Component'})`;\n    return WithBadge;\n};\nconst styles = StyleSheet.create({\n    badgeContainer: {\n        position: 'absolute',\n    },\n    container: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        position: 'relative',\n    },\n});\n"]},"metadata":{},"sourceType":"module"}