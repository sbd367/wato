{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"containerStyle\", \"disabled\", \"disabledInputStyle\", \"inputContainerStyle\", \"leftIcon\", \"leftIconContainerStyle\", \"rightIcon\", \"rightIconContainerStyle\", \"InputComponent\", \"inputStyle\", \"errorProps\", \"errorStyle\", \"errorMessage\", \"label\", \"labelStyle\", \"labelProps\", \"theme\", \"renderErrorMessage\", \"style\"];\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { renderNode, patchWebProps, defaultTheme } from \"../helpers\";\nimport { fonts } from \"../helpers/index-config\";\nimport { Icon } from \"../Icon\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar renderText = function renderText(content, defaultProps, style) {\n  return renderNode(Text, content, _objectSpread(_objectSpread({}, defaultProps), {}, {\n    style: StyleSheet.flatten([style, defaultProps && defaultProps.style])\n  }));\n};\n\nexport var Input = function (_React$Component) {\n  _inherits(Input, _React$Component);\n\n  var _super = _createSuper(Input);\n\n  function Input() {\n    var _this;\n\n    _classCallCheck(this, Input);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.shakeAnimationValue = new Animated.Value(0);\n\n    _this.shake = function () {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          shakeAnimationValue = _assertThisInitialize.shakeAnimationValue;\n\n      shakeAnimationValue.setValue(0);\n      Animated.timing(shakeAnimationValue, {\n        duration: 375,\n        toValue: 3,\n        easing: Easing.bounce,\n        useNativeDriver: true\n      }).start();\n    };\n\n    return _this;\n  }\n\n  _createClass(Input, [{\n    key: \"focus\",\n    value: function focus() {\n      this.input.focus();\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.input.blur();\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.input.clear();\n    }\n  }, {\n    key: \"isFocused\",\n    value: function isFocused() {\n      return this.input.isFocused();\n    }\n  }, {\n    key: \"setNativeProps\",\n    value: function setNativeProps(nativeProps) {\n      this.input.setNativeProps(nativeProps);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _theme$colors,\n          _theme$colors2,\n          _this2 = this,\n          _theme$colors3,\n          _theme$colors4,\n          _theme$colors5;\n\n      var _this$props = this.props,\n          containerStyle = _this$props.containerStyle,\n          disabled = _this$props.disabled,\n          disabledInputStyle = _this$props.disabledInputStyle,\n          inputContainerStyle = _this$props.inputContainerStyle,\n          leftIcon = _this$props.leftIcon,\n          leftIconContainerStyle = _this$props.leftIconContainerStyle,\n          rightIcon = _this$props.rightIcon,\n          rightIconContainerStyle = _this$props.rightIconContainerStyle,\n          _this$props$InputComp = _this$props.InputComponent,\n          InputComponent = _this$props$InputComp === void 0 ? TextInput : _this$props$InputComp,\n          inputStyle = _this$props.inputStyle,\n          errorProps = _this$props.errorProps,\n          errorStyle = _this$props.errorStyle,\n          errorMessage = _this$props.errorMessage,\n          label = _this$props.label,\n          labelStyle = _this$props.labelStyle,\n          labelProps = _this$props.labelProps,\n          _this$props$theme = _this$props.theme,\n          theme = _this$props$theme === void 0 ? defaultTheme : _this$props$theme,\n          _this$props$renderErr = _this$props.renderErrorMessage,\n          renderErrorMessage = _this$props$renderErr === void 0 ? true : _this$props$renderErr,\n          style = _this$props.style,\n          attributes = _objectWithoutProperties(_this$props, _excluded);\n\n      var translateX = this.shakeAnimationValue.interpolate({\n        inputRange: [0, 0.5, 1, 1.5, 2, 2.5, 3],\n        outputRange: [0, -15, 0, 15, 0, -15, 0]\n      });\n      var hideErrorMessage = !renderErrorMessage && !errorMessage;\n      return _jsxs(View, {\n        testID: \"RNE__Input__view-wrapper\",\n        style: StyleSheet.flatten([styles.container, containerStyle]),\n        children: [renderText(label, _objectSpread({\n          style: labelStyle\n        }, labelProps), _objectSpread({\n          fontSize: 16,\n          color: theme == null ? void 0 : (_theme$colors = theme.colors) == null ? void 0 : _theme$colors.grey3\n        }, Platform.select({\n          android: _objectSpread({}, fonts.android.bold),\n          default: {\n            fontWeight: 'bold'\n          }\n        }))), _jsxs(Animated.View, {\n          style: StyleSheet.flatten([{\n            flexDirection: 'row',\n            borderBottomWidth: 1,\n            alignItems: 'center',\n            borderColor: theme == null ? void 0 : (_theme$colors2 = theme.colors) == null ? void 0 : _theme$colors2.grey3\n          }, inputContainerStyle, {\n            transform: [{\n              translateX: translateX\n            }]\n          }]),\n          children: [leftIcon && _jsx(View, {\n            style: StyleSheet.flatten([styles.iconContainer, leftIconContainerStyle]),\n            children: renderNode(Icon, leftIcon)\n          }), _jsx(InputComponent, _objectSpread({\n            testID: \"RNE__Input__text-input\",\n            underlineColorAndroid: \"transparent\",\n            editable: !disabled,\n            ref: function ref(_ref) {\n              _this2.input = _ref;\n            },\n            style: StyleSheet.flatten([{\n              color: theme == null ? void 0 : (_theme$colors3 = theme.colors) == null ? void 0 : _theme$colors3.black,\n              fontSize: 18,\n              flex: 1,\n              minHeight: 40\n            }, inputStyle, disabled && styles.disabledInput, disabled && disabledInputStyle, style]),\n            placeholderTextColor: theme == null ? void 0 : (_theme$colors4 = theme.colors) == null ? void 0 : _theme$colors4.grey3\n          }, patchWebProps(attributes))), rightIcon && _jsx(View, {\n            style: StyleSheet.flatten([styles.iconContainer, rightIconContainerStyle]),\n            children: renderNode(Icon, rightIcon)\n          })]\n        }), _jsx(Text, _objectSpread(_objectSpread({}, errorProps), {}, {\n          style: StyleSheet.flatten([{\n            margin: 5,\n            fontSize: 12,\n            color: theme == null ? void 0 : (_theme$colors5 = theme.colors) == null ? void 0 : _theme$colors5.error\n          }, errorStyle && errorStyle, hideErrorMessage && {\n            height: 0,\n            margin: 0,\n            padding: 0\n          }]),\n          children: errorMessage\n        }))]\n      });\n    }\n  }]);\n\n  return Input;\n}(React.Component);\nInput.displayName = 'Input';\nvar styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    paddingHorizontal: 10\n  },\n  disabledInput: {\n    opacity: 0.5\n  },\n  iconContainer: {\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingRight: 4,\n    marginVertical: 4\n  }\n});","map":{"version":3,"sources":["C:/Users/Spencer/Documents/Code/WATO/wato/node_modules/@react-native-elements/base/dist/Input/Input.js"],"names":["React","renderNode","patchWebProps","defaultTheme","fonts","Icon","renderText","content","defaultProps","style","Text","StyleSheet","flatten","Input","shakeAnimationValue","Animated","Value","shake","setValue","timing","duration","toValue","easing","Easing","bounce","useNativeDriver","start","input","focus","blur","clear","isFocused","nativeProps","setNativeProps","props","containerStyle","disabled","disabledInputStyle","inputContainerStyle","leftIcon","leftIconContainerStyle","rightIcon","rightIconContainerStyle","InputComponent","TextInput","inputStyle","errorProps","errorStyle","errorMessage","label","labelStyle","labelProps","theme","renderErrorMessage","attributes","translateX","interpolate","inputRange","outputRange","hideErrorMessage","styles","container","fontSize","color","colors","grey3","Platform","select","android","bold","default","fontWeight","flexDirection","borderBottomWidth","alignItems","borderColor","transform","iconContainer","ref","black","flex","minHeight","disabledInput","margin","error","height","padding","Component","displayName","create","width","paddingHorizontal","opacity","justifyContent","paddingRight","marginVertical"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;AAEA,SAASC,UAAT,EAAqBC,aAArB,EAAoCC,YAApC;AACA,SAASC,KAAT;AACA,SAASC,IAAT;;;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD,EAAUC,YAAV,EAAwBC,KAAxB;AAAA,SAAkCR,UAAU,CAACS,IAAD,EAAOH,OAAP,kCACxDC,YADwD;AAE3DC,IAAAA,KAAK,EAAEE,UAAU,CAACC,OAAX,CAAmB,CAACH,KAAD,EAAQD,YAAY,IAAIA,YAAY,CAACC,KAArC,CAAnB;AAFoD,KAA5C;AAAA,CAAnB;;AAIA,WAAaI,KAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UAGIC,mBAHJ,GAG0B,IAAIC,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAH1B;;AAAA,UAmBIC,KAnBJ,GAmBY,YAAM;AACV;AAAA,UAAQH,mBAAR,yBAAQA,mBAAR;;AACAA,MAAAA,mBAAmB,CAACI,QAApB,CAA6B,CAA7B;AACAH,MAAAA,QAAQ,CAACI,MAAT,CAAgBL,mBAAhB,EAAqC;AACjCM,QAAAA,QAAQ,EAAE,GADuB;AAEjCC,QAAAA,OAAO,EAAE,CAFwB;AAGjCC,QAAAA,MAAM,EAAEC,MAAM,CAACC,MAHkB;AAIjCC,QAAAA,eAAe,EAAE;AAJgB,OAArC,EAKGC,KALH;AAMH,KA5BL;;AAAA;AAAA;;AAAA;AAAA;AAAA,WAII,iBAAQ;AACJ,WAAKC,KAAL,CAAWC,KAAX;AACH;AANL;AAAA;AAAA,WAOI,gBAAO;AACH,WAAKD,KAAL,CAAWE,IAAX;AACH;AATL;AAAA;AAAA,WAUI,iBAAQ;AACJ,WAAKF,KAAL,CAAWG,KAAX;AACH;AAZL;AAAA;AAAA,WAaI,qBAAY;AACR,aAAO,KAAKH,KAAL,CAAWI,SAAX,EAAP;AACH;AAfL;AAAA;AAAA,WAgBI,wBAAeC,WAAf,EAA4B;AACxB,WAAKL,KAAL,CAAWM,cAAX,CAA0BD,WAA1B;AACH;AAlBL;AAAA;AAAA,WA6BI,kBAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACL,wBAAwU,KAAKE,KAA7U;AAAA,UAAQC,cAAR,eAAQA,cAAR;AAAA,UAAwBC,QAAxB,eAAwBA,QAAxB;AAAA,UAAkCC,kBAAlC,eAAkCA,kBAAlC;AAAA,UAAsDC,mBAAtD,eAAsDA,mBAAtD;AAAA,UAA2EC,QAA3E,eAA2EA,QAA3E;AAAA,UAAqFC,sBAArF,eAAqFA,sBAArF;AAAA,UAA6GC,SAA7G,eAA6GA,SAA7G;AAAA,UAAwHC,uBAAxH,eAAwHA,uBAAxH;AAAA,8CAAiJC,cAAjJ;AAAA,UAAiJA,cAAjJ,sCAAkKC,SAAlK;AAAA,UAA6KC,UAA7K,eAA6KA,UAA7K;AAAA,UAAyLC,UAAzL,eAAyLA,UAAzL;AAAA,UAAqMC,UAArM,eAAqMA,UAArM;AAAA,UAAiNC,YAAjN,eAAiNA,YAAjN;AAAA,UAA+NC,KAA/N,eAA+NA,KAA/N;AAAA,UAAsOC,UAAtO,eAAsOA,UAAtO;AAAA,UAAkPC,UAAlP,eAAkPA,UAAlP;AAAA,0CAA8PC,KAA9P;AAAA,UAA8PA,KAA9P,kCAAsQjD,YAAtQ;AAAA,8CAAoRkD,kBAApR;AAAA,UAAoRA,kBAApR,sCAAyS,IAAzS;AAAA,UAA+S5C,KAA/S,eAA+SA,KAA/S;AAAA,UAAyT6C,UAAzT;;AACA,UAAMC,UAAU,GAAG,KAAKzC,mBAAL,CAAyB0C,WAAzB,CAAqC;AACpDC,QAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,GAAZ,EAAiB,CAAjB,EAAoB,GAApB,EAAyB,CAAzB,CADwC;AAEpDC,QAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAC,EAAL,EAAS,CAAT,EAAY,EAAZ,EAAgB,CAAhB,EAAmB,CAAC,EAApB,EAAwB,CAAxB;AAFuC,OAArC,CAAnB;AAIA,UAAMC,gBAAgB,GAAG,CAACN,kBAAD,IAAuB,CAACL,YAAjD;AACA,aAAQ,MAAC,IAAD;AAAM,QAAA,MAAM,EAAC,0BAAb;AAAwC,QAAA,KAAK,EAAErC,UAAU,CAACC,OAAX,CAAmB,CAACgD,MAAM,CAACC,SAAR,EAAmB1B,cAAnB,CAAnB,CAA/C;AAAA,mBACP7B,UAAU,CAAC2C,KAAD;AAAUxC,UAAAA,KAAK,EAAEyC;AAAjB,WAAgCC,UAAhC;AACHW,UAAAA,QAAQ,EAAE,EADP;AAEHC,UAAAA,KAAK,EAAEX,KAAF,qCAAEA,KAAK,CAAEY,MAAT,qBAAE,cAAeC;AAFnB,WAGAC,QAAQ,CAACC,MAAT,CAAgB;AACfC,UAAAA,OAAO,oBACAhE,KAAK,CAACgE,OAAN,CAAcC,IADd,CADQ;AAIfC,UAAAA,OAAO,EAAE;AACLC,YAAAA,UAAU,EAAE;AADP;AAJM,SAAhB,CAHA,EADH,EAcR,MAAC,QAAD,CAAU,IAAV;AAAe,UAAA,KAAK,EAAE5D,UAAU,CAACC,OAAX,CAAmB,CACjC;AACI4D,YAAAA,aAAa,EAAE,KADnB;AAEIC,YAAAA,iBAAiB,EAAE,CAFvB;AAGIC,YAAAA,UAAU,EAAE,QAHhB;AAIIC,YAAAA,WAAW,EAAEvB,KAAF,sCAAEA,KAAK,CAAEY,MAAT,qBAAE,eAAeC;AAJhC,WADiC,EAOjC3B,mBAPiC,EAQjC;AAAEsC,YAAAA,SAAS,EAAE,CAAC;AAAErB,cAAAA,UAAU,EAAVA;AAAF,aAAD;AAAb,WARiC,CAAnB,CAAtB;AAAA,qBAUGhB,QAAQ,IAAK,KAAC,IAAD;AAAM,YAAA,KAAK,EAAE5B,UAAU,CAACC,OAAX,CAAmB,CACpCgD,MAAM,CAACiB,aAD6B,EAEpCrC,sBAFoC,CAAnB,CAAb;AAAA,sBAITvC,UAAU,CAACI,IAAD,EAAOkC,QAAP;AAJD,YAVhB,EAiBE,KAAC,cAAD;AAAgB,YAAA,MAAM,EAAC,wBAAvB;AAAgD,YAAA,qBAAqB,EAAC,aAAtE;AAAoF,YAAA,QAAQ,EAAE,CAACH,QAA/F;AAAyG,YAAA,GAAG,EAAE,aAAC0C,IAAD,EAAS;AACjH,cAAA,MAAI,CAACnD,KAAL,GAAamD,IAAb;AACH,aAFH;AAEK,YAAA,KAAK,EAAEnE,UAAU,CAACC,OAAX,CAAmB,CACzB;AACImD,cAAAA,KAAK,EAAEX,KAAF,sCAAEA,KAAK,CAAEY,MAAT,qBAAE,eAAee,KAD1B;AAEIjB,cAAAA,QAAQ,EAAE,EAFd;AAGIkB,cAAAA,IAAI,EAAE,CAHV;AAIIC,cAAAA,SAAS,EAAE;AAJf,aADyB,EAOzBpC,UAPyB,EAQzBT,QAAQ,IAAIwB,MAAM,CAACsB,aARM,EASzB9C,QAAQ,IAAIC,kBATa,EAUzB5B,KAVyB,CAAnB,CAFZ;AAaM,YAAA,oBAAoB,EAAE2C,KAAF,sCAAEA,KAAK,CAAEY,MAAT,qBAAE,eAAeC;AAb3C,aAasD/D,aAAa,CAACoD,UAAD,CAbnE,EAjBF,EAgCGb,SAAS,IAAK,KAAC,IAAD;AAAM,YAAA,KAAK,EAAE9B,UAAU,CAACC,OAAX,CAAmB,CACrCgD,MAAM,CAACiB,aAD8B,EAErCnC,uBAFqC,CAAnB,CAAb;AAAA,sBAIVzC,UAAU,CAACI,IAAD,EAAOoC,SAAP;AAJA,YAhCjB;AAAA,UAdQ,EAsDR,KAAC,IAAD,kCAAUK,UAAV;AAAsB,UAAA,KAAK,EAAEnC,UAAU,CAACC,OAAX,CAAmB,CACxC;AACIuE,YAAAA,MAAM,EAAE,CADZ;AAEIrB,YAAAA,QAAQ,EAAE,EAFd;AAGIC,YAAAA,KAAK,EAAEX,KAAF,sCAAEA,KAAK,CAAEY,MAAT,qBAAE,eAAeoB;AAH1B,WADwC,EAMxCrC,UAAU,IAAIA,UAN0B,EAOxCY,gBAAgB,IAAI;AAChB0B,YAAAA,MAAM,EAAE,CADQ;AAEhBF,YAAAA,MAAM,EAAE,CAFQ;AAGhBG,YAAAA,OAAO,EAAE;AAHO,WAPoB,CAAnB,CAA7B;AAAA,oBAaGtC;AAbH,WAtDQ;AAAA,QAAR;AAsEH;AA1GL;;AAAA;AAAA,EAA2BhD,KAAK,CAACuF,SAAjC;AAAa1E,K,CACF2E,W,GAAc,O;AA2GzB,IAAM5B,MAAM,GAAGjD,UAAU,CAAC8E,MAAX,CAAkB;AAC7B5B,EAAAA,SAAS,EAAE;AACP6B,IAAAA,KAAK,EAAE,MADA;AAEPC,IAAAA,iBAAiB,EAAE;AAFZ,GADkB;AAK7BT,EAAAA,aAAa,EAAE;AACXU,IAAAA,OAAO,EAAE;AADE,GALc;AAQ7Bf,EAAAA,aAAa,EAAE;AACXQ,IAAAA,MAAM,EAAE,EADG;AAEXQ,IAAAA,cAAc,EAAE,QAFL;AAGXnB,IAAAA,UAAU,EAAE,QAHD;AAIXoB,IAAAA,YAAY,EAAE,CAJH;AAKXC,IAAAA,cAAc,EAAE;AALL;AARc,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { Text, View, TextInput, Animated, Easing, Platform, StyleSheet, } from 'react-native';\nimport { renderNode, patchWebProps, defaultTheme } from '../helpers';\nimport { fonts } from '../helpers/index-config';\nimport { Icon } from '../Icon';\nconst renderText = (content, defaultProps, style) => renderNode(Text, content, {\n    ...defaultProps,\n    style: StyleSheet.flatten([style, defaultProps && defaultProps.style]),\n});\nexport class Input extends React.Component {\n    static displayName = 'Input';\n    input;\n    shakeAnimationValue = new Animated.Value(0);\n    focus() {\n        this.input.focus();\n    }\n    blur() {\n        this.input.blur();\n    }\n    clear() {\n        this.input.clear();\n    }\n    isFocused() {\n        return this.input.isFocused();\n    }\n    setNativeProps(nativeProps) {\n        this.input.setNativeProps(nativeProps);\n    }\n    shake = () => {\n        const { shakeAnimationValue } = this;\n        shakeAnimationValue.setValue(0);\n        Animated.timing(shakeAnimationValue, {\n            duration: 375,\n            toValue: 3,\n            easing: Easing.bounce,\n            useNativeDriver: true,\n        }).start();\n    };\n    render() {\n        const { containerStyle, disabled, disabledInputStyle, inputContainerStyle, leftIcon, leftIconContainerStyle, rightIcon, rightIconContainerStyle, InputComponent = TextInput, inputStyle, errorProps, errorStyle, errorMessage, label, labelStyle, labelProps, theme = defaultTheme, renderErrorMessage = true, style, ...attributes } = this.props;\n        const translateX = this.shakeAnimationValue.interpolate({\n            inputRange: [0, 0.5, 1, 1.5, 2, 2.5, 3],\n            outputRange: [0, -15, 0, 15, 0, -15, 0],\n        });\n        const hideErrorMessage = !renderErrorMessage && !errorMessage;\n        return (<View testID=\"RNE__Input__view-wrapper\" style={StyleSheet.flatten([styles.container, containerStyle])}>\n        {renderText(label, { style: labelStyle, ...labelProps }, {\n                fontSize: 16,\n                color: theme?.colors?.grey3,\n                ...Platform.select({\n                    android: {\n                        ...fonts.android.bold,\n                    },\n                    default: {\n                        fontWeight: 'bold',\n                    },\n                }),\n            })}\n\n        <Animated.View style={StyleSheet.flatten([\n                {\n                    flexDirection: 'row',\n                    borderBottomWidth: 1,\n                    alignItems: 'center',\n                    borderColor: theme?.colors?.grey3,\n                },\n                inputContainerStyle,\n                { transform: [{ translateX }] },\n            ])}>\n          {leftIcon && (<View style={StyleSheet.flatten([\n                    styles.iconContainer,\n                    leftIconContainerStyle,\n                ])}>\n              {renderNode(Icon, leftIcon)}\n            </View>)}\n\n          <InputComponent testID=\"RNE__Input__text-input\" underlineColorAndroid=\"transparent\" editable={!disabled} ref={(ref) => {\n                this.input = ref;\n            }} style={StyleSheet.flatten([\n                {\n                    color: theme?.colors?.black,\n                    fontSize: 18,\n                    flex: 1,\n                    minHeight: 40,\n                },\n                inputStyle,\n                disabled && styles.disabledInput,\n                disabled && disabledInputStyle,\n                style,\n            ])} placeholderTextColor={theme?.colors?.grey3} {...patchWebProps(attributes)}/>\n\n          {rightIcon && (<View style={StyleSheet.flatten([\n                    styles.iconContainer,\n                    rightIconContainerStyle,\n                ])}>\n              {renderNode(Icon, rightIcon)}\n            </View>)}\n        </Animated.View>\n\n        <Text {...errorProps} style={StyleSheet.flatten([\n                {\n                    margin: 5,\n                    fontSize: 12,\n                    color: theme?.colors?.error,\n                },\n                errorStyle && errorStyle,\n                hideErrorMessage && {\n                    height: 0,\n                    margin: 0,\n                    padding: 0,\n                },\n            ])}>\n          {errorMessage}\n        </Text>\n      </View>);\n    }\n}\nconst styles = StyleSheet.create({\n    container: {\n        width: '100%',\n        paddingHorizontal: 10,\n    },\n    disabledInput: {\n        opacity: 0.5,\n    },\n    iconContainer: {\n        height: 40,\n        justifyContent: 'center',\n        alignItems: 'center',\n        paddingRight: 4,\n        marginVertical: 4,\n    },\n});\n"]},"metadata":{},"sourceType":"module"}