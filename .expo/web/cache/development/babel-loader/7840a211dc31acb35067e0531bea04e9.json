{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _defaultTheme$colors, _defaultTheme$colors2;\n\nvar _excluded = [\"color\", \"inset\", \"insetType\", \"orientation\", \"style\", \"subHeader\", \"subHeaderStyle\", \"width\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { defaultTheme } from \"../helpers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Divider = function Divider(_ref) {\n  var color = _ref.color,\n      _ref$inset = _ref.inset,\n      inset = _ref$inset === void 0 ? false : _ref$inset,\n      _ref$insetType = _ref.insetType,\n      insetType = _ref$insetType === void 0 ? 'left' : _ref$insetType,\n      _ref$orientation = _ref.orientation,\n      orientation = _ref$orientation === void 0 ? 'horizontal' : _ref$orientation,\n      style = _ref.style,\n      subHeader = _ref.subHeader,\n      subHeaderStyle = _ref.subHeaderStyle,\n      width = _ref.width,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(View, _objectSpread({\n      testID: \"RNE__Divider\",\n      style: StyleSheet.flatten([styles.divider, style, inset && (insetType === 'left' ? styles.leftInset : insetType === 'right' ? styles.rightInset : _objectSpread(_objectSpread({}, styles.leftInset), styles.rightInset)), orientation === 'vertical' && styles.vertical, width && (orientation === 'horizontal' ? {\n        borderBottomWidth: width\n      } : {\n        borderRightWidth: width\n      }), color && (orientation === 'horizontal' ? {\n        borderBottomColor: color\n      } : {\n        borderRightColor: color\n      })])\n    }, rest)), subHeader && orientation === 'horizontal' ? _jsx(Text, {\n      style: StyleSheet.flatten([styles.subHeader, subHeaderStyle, inset && styles.leftInset]),\n      children: subHeader\n    }) : null]\n  });\n};\nvar styles = StyleSheet.create({\n  divider: {\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderBottomColor: defaultTheme == null ? void 0 : (_defaultTheme$colors = defaultTheme.colors) == null ? void 0 : _defaultTheme$colors.divider\n  },\n  leftInset: {\n    marginLeft: 72\n  },\n  rightInset: {\n    marginRight: 72\n  },\n  vertical: {\n    borderRightWidth: StyleSheet.hairlineWidth,\n    borderRightColor: defaultTheme == null ? void 0 : (_defaultTheme$colors2 = defaultTheme.colors) == null ? void 0 : _defaultTheme$colors2.divider,\n    height: 'auto',\n    alignSelf: 'stretch'\n  },\n  subHeader: {\n    includeFontPadding: false\n  }\n});\nDivider.displayName = 'Divider';","map":{"version":3,"sources":["C:/Users/Spencer/Documents/Code/WATO/wato/node_modules/@react-native-elements/base/dist/Divider/Divider.js"],"names":["React","defaultTheme","Divider","color","inset","insetType","orientation","style","subHeader","subHeaderStyle","width","rest","StyleSheet","flatten","styles","divider","leftInset","rightInset","vertical","borderBottomWidth","borderRightWidth","borderBottomColor","borderRightColor","create","hairlineWidth","colors","marginLeft","marginRight","height","alignSelf","includeFontPadding","displayName"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,YAAT;;;;AACA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,wBAAUC,KAAV;AAAA,MAAUA,KAAV,2BAAkB,KAAlB;AAAA,4BAAyBC,SAAzB;AAAA,MAAyBA,SAAzB,+BAAqC,MAArC;AAAA,8BAA6CC,WAA7C;AAAA,MAA6CA,WAA7C,iCAA2D,YAA3D;AAAA,MAAyEC,KAAzE,QAAyEA,KAAzE;AAAA,MAAgFC,SAAhF,QAAgFA,SAAhF;AAAA,MAA2FC,cAA3F,QAA2FA,cAA3F;AAAA,MAA2GC,KAA3G,QAA2GA,KAA3G;AAAA,MAAqHC,IAArH;;AAAA,SAAiI;AAAA,eACpJ,KAAC,IAAD;AAAM,MAAA,MAAM,EAAC,cAAb;AAA4B,MAAA,KAAK,EAAEC,UAAU,CAACC,OAAX,CAAmB,CAClDC,MAAM,CAACC,OAD2C,EAElDR,KAFkD,EAGlDH,KAAK,KACAC,SAAS,KAAK,MAAd,GACKS,MAAM,CAACE,SADZ,GAEKX,SAAS,KAAK,OAAd,GACIS,MAAM,CAACG,UADX,mCAESH,MAAM,CAACE,SAFhB,GAE8BF,MAAM,CAACG,UAFrC,CAHL,CAH6C,EASlDX,WAAW,KAAK,UAAhB,IAA8BQ,MAAM,CAACI,QATa,EAUlDR,KAAK,KACAJ,WAAW,KAAK,YAAhB,GACK;AAAEa,QAAAA,iBAAiB,EAAET;AAArB,OADL,GAEK;AAAEU,QAAAA,gBAAgB,EAAEV;AAApB,OAHL,CAV6C,EAclDP,KAAK,KACAG,WAAW,KAAK,YAAhB,GACK;AAAEe,QAAAA,iBAAiB,EAAElB;AAArB,OADL,GAEK;AAAEmB,QAAAA,gBAAgB,EAAEnB;AAApB,OAHL,CAd6C,CAAnB;AAAnC,OAkBQQ,IAlBR,EADoJ,EAoBnJH,SAAS,IAAIF,WAAW,KAAK,YAA7B,GAA6C,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEM,UAAU,CAACC,OAAX,CAAmB,CACtEC,MAAM,CAACN,SAD+D,EAEtEC,cAFsE,EAGtEL,KAAK,IAAIU,MAAM,CAACE,SAHsD,CAAnB,CAAb;AAAA,gBAKzCR;AALyC,MAA7C,GAMY,IA1BuI;AAAA,IAAjI;AAAA,CAAhB;AA4BP,IAAMM,MAAM,GAAGF,UAAU,CAACW,MAAX,CAAkB;AAC7BR,EAAAA,OAAO,EAAE;AACLI,IAAAA,iBAAiB,EAAEP,UAAU,CAACY,aADzB;AAELH,IAAAA,iBAAiB,EAAEpB,YAAF,4CAAEA,YAAY,CAAEwB,MAAhB,qBAAE,qBAAsBV;AAFpC,GADoB;AAK7BC,EAAAA,SAAS,EAAE;AACPU,IAAAA,UAAU,EAAE;AADL,GALkB;AAQ7BT,EAAAA,UAAU,EAAE;AACRU,IAAAA,WAAW,EAAE;AADL,GARiB;AAW7BT,EAAAA,QAAQ,EAAE;AACNE,IAAAA,gBAAgB,EAAER,UAAU,CAACY,aADvB;AAENF,IAAAA,gBAAgB,EAAErB,YAAF,6CAAEA,YAAY,CAAEwB,MAAhB,qBAAE,sBAAsBV,OAFlC;AAGNa,IAAAA,MAAM,EAAE,MAHF;AAINC,IAAAA,SAAS,EAAE;AAJL,GAXmB;AAiB7BrB,EAAAA,SAAS,EAAE;AACPsB,IAAAA,kBAAkB,EAAE;AADb;AAjBkB,CAAlB,CAAf;AAqBA5B,OAAO,CAAC6B,WAAR,GAAsB,SAAtB","sourcesContent":["import React from 'react';\nimport { View, StyleSheet, Text, } from 'react-native';\nimport { defaultTheme } from '../helpers';\nexport const Divider = ({ color, inset = false, insetType = 'left', orientation = 'horizontal', style, subHeader, subHeaderStyle, width, ...rest }) => (<>\n    <View testID=\"RNE__Divider\" style={StyleSheet.flatten([\n        styles.divider,\n        style,\n        inset &&\n            (insetType === 'left'\n                ? styles.leftInset\n                : insetType === 'right'\n                    ? styles.rightInset\n                    : { ...styles.leftInset, ...styles.rightInset }),\n        orientation === 'vertical' && styles.vertical,\n        width &&\n            (orientation === 'horizontal'\n                ? { borderBottomWidth: width }\n                : { borderRightWidth: width }),\n        color &&\n            (orientation === 'horizontal'\n                ? { borderBottomColor: color }\n                : { borderRightColor: color }),\n    ])} {...rest}/>\n    {subHeader && orientation === 'horizontal' ? (<Text style={StyleSheet.flatten([\n            styles.subHeader,\n            subHeaderStyle,\n            inset && styles.leftInset,\n        ])}>\n        {subHeader}\n      </Text>) : null}\n  </>);\nconst styles = StyleSheet.create({\n    divider: {\n        borderBottomWidth: StyleSheet.hairlineWidth,\n        borderBottomColor: defaultTheme?.colors?.divider,\n    },\n    leftInset: {\n        marginLeft: 72,\n    },\n    rightInset: {\n        marginRight: 72,\n    },\n    vertical: {\n        borderRightWidth: StyleSheet.hairlineWidth,\n        borderRightColor: defaultTheme?.colors?.divider,\n        height: 'auto',\n        alignSelf: 'stretch',\n    },\n    subHeader: {\n        includeFontPadding: false,\n    },\n});\nDivider.displayName = 'Divider';\n"]},"metadata":{},"sourceType":"module"}