{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { renderNode } from \"../../helpers\";\nimport { Icon } from \"../../Icon\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ALIGN_STYLE = {\n  left: 'flex-start',\n  right: 'flex-end',\n  center: 'center'\n};\nexport var Children = function Children(_ref) {\n  var style = _ref.style,\n      placement = _ref.placement,\n      children = _ref.children;\n  return _jsx(View, {\n    style: StyleSheet.flatten([{\n      alignItems: ALIGN_STYLE[placement]\n    }, style]),\n    children: children == null || children === false ? null : children.text ? renderNode(Text, children.text, _objectSpread({\n      numberOfLines: 1\n    }, children)) : children.icon ? renderNode(Icon, _objectSpread(_objectSpread({}, children), {}, {\n      name: children.icon,\n      containerStyle: StyleSheet.flatten([{\n        alignItems: ALIGN_STYLE[placement]\n      }, children.containerStyle])\n    })) : renderNode(Text, children)\n  });\n};","map":{"version":3,"sources":["C:/Users/Spencer/Documents/Code/WATO/wato/node_modules/@react-native-elements/base/dist/Header/components/HeaderChildren.js"],"names":["React","renderNode","Icon","ALIGN_STYLE","left","right","center","Children","style","placement","children","StyleSheet","flatten","alignItems","text","Text","numberOfLines","icon","name","containerStyle"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,UAAT;AACA,SAASC,IAAT;;AACA,IAAMC,WAAW,GAAG;AAChBC,EAAAA,IAAI,EAAE,YADU;AAEhBC,EAAAA,KAAK,EAAE,UAFS;AAGhBC,EAAAA,MAAM,EAAE;AAHQ,CAApB;AAKA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,SAAV,QAAUA,SAAV;AAAA,MAAqBC,QAArB,QAAqBA,QAArB;AAAA,SAAsC,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,UAAU,CAACC,OAAX,CAAmB,CAAC;AAAEC,MAAAA,UAAU,EAAEV,WAAW,CAACM,SAAD;AAAzB,KAAD,EAAyCD,KAAzC,CAAnB,CAAb;AAAA,cACzDE,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,KAAK,KAAjC,GACK,IADL,GAEKA,QAAQ,CAACI,IAAT,GACIb,UAAU,CAACc,IAAD,EAAOL,QAAQ,CAACI,IAAhB;AAAwBE,MAAAA,aAAa,EAAE;AAAvC,OAA6CN,QAA7C,EADd,GAEIA,QAAQ,CAACO,IAAT,GACIhB,UAAU,CAACC,IAAD,kCACLQ,QADK;AAERQ,MAAAA,IAAI,EAAER,QAAQ,CAACO,IAFP;AAGRE,MAAAA,cAAc,EAAER,UAAU,CAACC,OAAX,CAAmB,CAC/B;AAAEC,QAAAA,UAAU,EAAEV,WAAW,CAACM,SAAD;AAAzB,OAD+B,EAE/BC,QAAQ,CAACS,cAFsB,CAAnB;AAHR,OADd,GASIlB,UAAU,CAACc,IAAD,EAAOL,QAAP;AAdkC,IAAtC;AAAA,CAAjB","sourcesContent":["import React from 'react';\nimport { View, StyleSheet, Text, } from 'react-native';\nimport { renderNode } from '../../helpers';\nimport { Icon } from '../../Icon';\nconst ALIGN_STYLE = {\n    left: 'flex-start',\n    right: 'flex-end',\n    center: 'center',\n};\nexport const Children = ({ style, placement, children, }) => (<View style={StyleSheet.flatten([{ alignItems: ALIGN_STYLE[placement] }, style])}>\n    {children == null || children === false\n        ? null\n        : children.text\n            ? renderNode(Text, children.text, { numberOfLines: 1, ...children })\n            : children.icon\n                ? renderNode(Icon, {\n                    ...children,\n                    name: children.icon,\n                    containerStyle: StyleSheet.flatten([\n                        { alignItems: ALIGN_STYLE[placement] },\n                        children.containerStyle,\n                    ]),\n                })\n                : renderNode(Text, children)}\n  </View>);\n"]},"metadata":{},"sourceType":"module"}