{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"theme\", \"clearIcon\", \"containerStyle\", \"leftIconContainerStyle\", \"rightIconContainerStyle\", \"inputContainerStyle\", \"inputStyle\", \"searchIcon\", \"cancelIcon\", \"showLoading\", \"loadingProps\"],\n    _excluded2 = [\"style\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { defaultTheme, renderNode } from \"../helpers\";\nimport { Input } from \"../Input\";\nimport { Icon } from \"../Icon\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar defaultSearchIcon = function defaultSearchIcon(theme) {\n  var _theme$colors, _theme$colors$platfor, _theme$colors$platfor2;\n\n  return {\n    type: 'material',\n    size: 25,\n    color: theme == null ? void 0 : (_theme$colors = theme.colors) == null ? void 0 : (_theme$colors$platfor = _theme$colors.platform) == null ? void 0 : (_theme$colors$platfor2 = _theme$colors$platfor.android) == null ? void 0 : _theme$colors$platfor2.grey,\n    name: 'search'\n  };\n};\n\nvar defaultCancelIcon = function defaultCancelIcon(theme) {\n  var _theme$colors2, _theme$colors2$platfo, _theme$colors2$platfo2;\n\n  return {\n    type: 'material',\n    size: 25,\n    color: theme == null ? void 0 : (_theme$colors2 = theme.colors) == null ? void 0 : (_theme$colors2$platfo = _theme$colors2.platform) == null ? void 0 : (_theme$colors2$platfo2 = _theme$colors2$platfo.android) == null ? void 0 : _theme$colors2$platfo2.grey,\n    name: 'arrow-back'\n  };\n};\n\nvar defaultClearIcon = function defaultClearIcon(theme) {\n  var _theme$colors3, _theme$colors3$platfo, _theme$colors3$platfo2;\n\n  return {\n    type: 'material',\n    size: 25,\n    color: theme == null ? void 0 : (_theme$colors3 = theme.colors) == null ? void 0 : (_theme$colors3$platfo = _theme$colors3.platform) == null ? void 0 : (_theme$colors3$platfo2 = _theme$colors3$platfo.android) == null ? void 0 : _theme$colors3$platfo2.grey,\n    name: 'clear'\n  };\n};\n\nexport var SearchBarAndroid = function (_Component) {\n  _inherits(SearchBarAndroid, _Component);\n\n  var _super = _createSuper(SearchBarAndroid);\n\n  function SearchBarAndroid(props) {\n    var _this;\n\n    _classCallCheck(this, SearchBarAndroid);\n\n    _this = _super.call(this, props);\n\n    _this.focus = function () {\n      _this.input.focus();\n    };\n\n    _this.blur = function () {\n      _this.input.blur();\n    };\n\n    _this.clear = function () {\n      _this.input.clear();\n\n      _this.onChangeText('');\n\n      _this.props.onClear();\n    };\n\n    _this.cancel = function () {\n      _this.blur();\n\n      _this.props.onCancel();\n    };\n\n    _this.onFocus = function (event) {\n      _this.props.onFocus(event);\n\n      _this.setState({\n        hasFocus: true,\n        isEmpty: _this.props.value === ''\n      });\n    };\n\n    _this.onBlur = function (event) {\n      _this.props.onBlur(event);\n\n      _this.setState({\n        hasFocus: false\n      });\n    };\n\n    _this.onChangeText = function (text) {\n      _this.props.onChangeText(text);\n\n      _this.setState({\n        isEmpty: text === ''\n      });\n    };\n\n    _this._keyboardDidHide = function () {\n      _this.cancel();\n    };\n\n    var _props$value = props.value,\n        value = _props$value === void 0 ? '' : _props$value;\n    _this.state = {\n      hasFocus: false,\n      isEmpty: value ? value === '' : true\n    };\n    _this.keyboardListener = Keyboard.addListener('keyboardDidHide', _this._keyboardDidHide);\n    return _this;\n  }\n\n  _createClass(SearchBarAndroid, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.keyboardListener) {\n        this.keyboardListener.remove();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _theme$colors4,\n          _this2 = this;\n\n      var _this$props = this.props,\n          _this$props$theme = _this$props.theme,\n          theme = _this$props$theme === void 0 ? defaultTheme : _this$props$theme,\n          _this$props$clearIcon = _this$props.clearIcon,\n          clearIcon = _this$props$clearIcon === void 0 ? {\n        name: 'clear'\n      } : _this$props$clearIcon,\n          containerStyle = _this$props.containerStyle,\n          leftIconContainerStyle = _this$props.leftIconContainerStyle,\n          rightIconContainerStyle = _this$props.rightIconContainerStyle,\n          inputContainerStyle = _this$props.inputContainerStyle,\n          inputStyle = _this$props.inputStyle,\n          _this$props$searchIco = _this$props.searchIcon,\n          searchIcon = _this$props$searchIco === void 0 ? {\n        name: 'search'\n      } : _this$props$searchIco,\n          _this$props$cancelIco = _this$props.cancelIcon,\n          cancelIcon = _this$props$cancelIco === void 0 ? {\n        name: 'arrow-back'\n      } : _this$props$cancelIco,\n          _this$props$showLoadi = _this$props.showLoading,\n          showLoading = _this$props$showLoadi === void 0 ? false : _this$props$showLoadi,\n          _this$props$loadingPr = _this$props.loadingProps,\n          loadingProps = _this$props$loadingPr === void 0 ? {} : _this$props$loadingPr,\n          attributes = _objectWithoutProperties(_this$props, _excluded);\n\n      var _this$state = this.state,\n          hasFocus = _this$state.hasFocus,\n          isEmpty = _this$state.isEmpty;\n\n      var loadingStyle = loadingProps.style,\n          otherLoadingProps = _objectWithoutProperties(loadingProps, _excluded2);\n\n      return _jsx(View, {\n        testID: \"RNE__SearchBar-wrapper\",\n        style: StyleSheet.flatten([{\n          backgroundColor: theme == null ? void 0 : (_theme$colors4 = theme.colors) == null ? void 0 : _theme$colors4.white,\n          paddingTop: 8,\n          paddingBottom: 8\n        }, containerStyle]),\n        children: _jsx(Input, _objectSpread(_objectSpread({\n          testID: \"RNE__SearchBar\",\n          renderErrorMessage: false\n        }, attributes), {}, {\n          onFocus: this.onFocus,\n          onBlur: this.onBlur,\n          onChangeText: this.onChangeText,\n          ref: function ref(input) {\n            _this2.input = input;\n          },\n          containerStyle: {\n            paddingHorizontal: 0\n          },\n          inputStyle: StyleSheet.flatten([styles.input, inputStyle]),\n          inputContainerStyle: StyleSheet.flatten([styles.inputContainer, inputContainerStyle]),\n          leftIcon: hasFocus ? renderNode(Icon, cancelIcon, _objectSpread(_objectSpread({}, defaultCancelIcon(theme)), {}, {\n            onPress: this.cancel\n          })) : renderNode(Icon, searchIcon, defaultSearchIcon(theme)),\n          leftIconContainerStyle: StyleSheet.flatten([styles.leftIconContainerStyle, leftIconContainerStyle]),\n          rightIcon: _jsxs(View, {\n            style: {\n              flexDirection: 'row'\n            },\n            children: [showLoading && _jsx(ActivityIndicator, _objectSpread({\n              style: StyleSheet.flatten([{\n                marginRight: 5\n              }, loadingStyle])\n            }, otherLoadingProps), \"loading\"), !isEmpty && renderNode(Icon, clearIcon, _objectSpread(_objectSpread({}, defaultClearIcon(theme)), {}, {\n              key: 'cancel',\n              onPress: this.clear\n            }))]\n          }),\n          rightIconContainerStyle: StyleSheet.flatten([styles.rightIconContainerStyle, rightIconContainerStyle])\n        }))\n      });\n    }\n  }]);\n\n  return SearchBarAndroid;\n}(Component);\nSearchBarAndroid.defaultProps = {\n  onClear: function onClear() {\n    return null;\n  },\n  onCancel: function onCancel() {\n    return null;\n  },\n  onFocus: function onFocus() {\n    return null;\n  },\n  onBlur: function onBlur() {\n    return null;\n  },\n  onChangeText: function onChangeText() {\n    return null;\n  }\n};\nvar styles = StyleSheet.create({\n  input: {\n    marginLeft: 24,\n    marginRight: 8\n  },\n  inputContainer: {\n    borderBottomWidth: 0,\n    width: '100%'\n  },\n  rightIconContainerStyle: {\n    marginRight: 8\n  },\n  leftIconContainerStyle: {\n    marginLeft: 8\n  }\n});","map":{"version":3,"sources":["C:/Users/Spencer/Documents/Code/WATO/wato/node_modules/@react-native-elements/base/dist/SearchBar/SearchBar-android.js"],"names":["React","Component","defaultTheme","renderNode","Input","Icon","defaultSearchIcon","theme","type","size","color","colors","platform","android","grey","name","defaultCancelIcon","defaultClearIcon","SearchBarAndroid","props","focus","input","blur","clear","onChangeText","onClear","cancel","onCancel","onFocus","event","setState","hasFocus","isEmpty","value","onBlur","text","_keyboardDidHide","state","keyboardListener","Keyboard","addListener","remove","clearIcon","containerStyle","leftIconContainerStyle","rightIconContainerStyle","inputContainerStyle","inputStyle","searchIcon","cancelIcon","showLoading","loadingProps","attributes","loadingStyle","style","otherLoadingProps","StyleSheet","flatten","backgroundColor","white","paddingTop","paddingBottom","paddingHorizontal","styles","inputContainer","onPress","flexDirection","marginRight","key","defaultProps","create","marginLeft","borderBottomWidth","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, View, ActivityIndicator, Keyboard, } from 'react-native';\nimport { defaultTheme, renderNode } from '../helpers';\nimport { Input } from '../Input';\nimport { Icon } from '../Icon';\nconst defaultSearchIcon = (theme) => ({\n    type: 'material',\n    size: 25,\n    color: theme?.colors?.platform?.android?.grey,\n    name: 'search',\n});\nconst defaultCancelIcon = (theme) => ({\n    type: 'material',\n    size: 25,\n    color: theme?.colors?.platform?.android?.grey,\n    name: 'arrow-back',\n});\nconst defaultClearIcon = (theme) => ({\n    type: 'material',\n    size: 25,\n    color: theme?.colors?.platform?.android?.grey,\n    name: 'clear',\n});\nexport class SearchBarAndroid extends Component {\n    input;\n    static defaultProps = {\n        onClear: () => null,\n        onCancel: () => null,\n        onFocus: () => null,\n        onBlur: () => null,\n        onChangeText: () => null,\n    };\n    keyboardListener;\n    focus = () => {\n        this.input.focus();\n    };\n    blur = () => {\n        this.input.blur();\n    };\n    clear = () => {\n        this.input.clear();\n        this.onChangeText('');\n        this.props.onClear();\n    };\n    cancel = () => {\n        this.blur();\n        this.props.onCancel();\n    };\n    onFocus = (event) => {\n        this.props.onFocus(event);\n        this.setState({\n            hasFocus: true,\n            isEmpty: this.props.value === '',\n        });\n    };\n    onBlur = (event) => {\n        this.props.onBlur(event);\n        this.setState({ hasFocus: false });\n    };\n    onChangeText = (text) => {\n        this.props.onChangeText(text);\n        this.setState({ isEmpty: text === '' });\n    };\n    constructor(props) {\n        super(props);\n        const { value = '' } = props;\n        this.state = {\n            hasFocus: false,\n            isEmpty: value ? value === '' : true,\n        };\n        this.keyboardListener = Keyboard.addListener('keyboardDidHide', this._keyboardDidHide);\n    }\n    _keyboardDidHide = () => {\n        this.cancel();\n    };\n    componentWillUnmount() {\n        if (this.keyboardListener) {\n            this.keyboardListener.remove();\n        }\n    }\n    render() {\n        const { theme = defaultTheme, clearIcon = { name: 'clear' }, containerStyle, leftIconContainerStyle, rightIconContainerStyle, inputContainerStyle, inputStyle, searchIcon = { name: 'search' }, cancelIcon = { name: 'arrow-back' }, showLoading = false, loadingProps = {}, ...attributes } = this.props;\n        const { hasFocus, isEmpty } = this.state;\n        const { style: loadingStyle, ...otherLoadingProps } = loadingProps;\n        return (<View testID=\"RNE__SearchBar-wrapper\" style={StyleSheet.flatten([\n                {\n                    backgroundColor: theme?.colors?.white,\n                    paddingTop: 8,\n                    paddingBottom: 8,\n                },\n                containerStyle,\n            ])}>\n        <Input testID=\"RNE__SearchBar\" renderErrorMessage={false} {...attributes} onFocus={this.onFocus} onBlur={this.onBlur} onChangeText={this.onChangeText} ref={(input) => {\n                this.input = input;\n            }} containerStyle={{ paddingHorizontal: 0 }} inputStyle={StyleSheet.flatten([styles.input, inputStyle])} inputContainerStyle={StyleSheet.flatten([\n                styles.inputContainer,\n                inputContainerStyle,\n            ])} leftIcon={hasFocus\n                ? renderNode(Icon, cancelIcon, {\n                    ...defaultCancelIcon(theme),\n                    onPress: this.cancel,\n                })\n                : renderNode(Icon, searchIcon, defaultSearchIcon(theme))} leftIconContainerStyle={StyleSheet.flatten([\n                styles.leftIconContainerStyle,\n                leftIconContainerStyle,\n            ])} rightIcon={<View style={{ flexDirection: 'row' }}>\n              {showLoading && (<ActivityIndicator key=\"loading\" style={StyleSheet.flatten([{ marginRight: 5 }, loadingStyle])} {...otherLoadingProps}/>)}\n              {!isEmpty &&\n                    renderNode(Icon, clearIcon, {\n                        ...defaultClearIcon(theme),\n                        key: 'cancel',\n                        onPress: this.clear,\n                    })}\n            </View>} rightIconContainerStyle={StyleSheet.flatten([\n                styles.rightIconContainerStyle,\n                rightIconContainerStyle,\n            ])}/>\n      </View>);\n    }\n}\nconst styles = StyleSheet.create({\n    input: {\n        marginLeft: 24,\n        marginRight: 8,\n    },\n    inputContainer: {\n        borderBottomWidth: 0,\n        width: '100%',\n    },\n    rightIconContainerStyle: {\n        marginRight: 8,\n    },\n    leftIconContainerStyle: {\n        marginLeft: 8,\n    },\n});\n"]},"metadata":{},"sourceType":"module"}