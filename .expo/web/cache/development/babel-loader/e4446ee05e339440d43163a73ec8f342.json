{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"color\", \"size\", \"visible\", \"disabled\", \"upperCase\", \"theme\", \"style\", \"titleStyle\", \"buttonStyle\", \"containerStyle\", \"iconContainerStyle\", \"placement\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { Button } from \"../Button\";\nimport { defaultTheme } from \"../helpers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var FAB = function FAB(_ref) {\n  var _ref2, _theme$colors, _theme$colors2;\n\n  var color = _ref.color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 'large' : _ref$size,\n      _ref$visible = _ref.visible,\n      visible = _ref$visible === void 0 ? true : _ref$visible,\n      disabled = _ref.disabled,\n      upperCase = _ref.upperCase,\n      _ref$theme = _ref.theme,\n      theme = _ref$theme === void 0 ? defaultTheme : _ref$theme,\n      style = _ref.style,\n      titleStyle = _ref.titleStyle,\n      buttonStyle = _ref.buttonStyle,\n      containerStyle = _ref.containerStyle,\n      iconContainerStyle = _ref.iconContainerStyle,\n      placement = _ref.placement,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useRef = React.useRef(new Animated.Value(Number(visible))),\n      animation = _React$useRef.current;\n\n  React.useEffect(function () {\n    Animated.timing(animation, {\n      toValue: Number(visible),\n      duration: 200,\n      useNativeDriver: true\n    }).start();\n  }, [animation, visible]);\n  return _jsx(Animated.View, {\n    style: StyleSheet.flatten([{\n      opacity: animation,\n      transform: [{\n        scale: animation\n      }]\n    }, styles.content, placement && (_ref2 = {}, _defineProperty(_ref2, placement, 0), _defineProperty(_ref2, \"position\", 'absolute'), _defineProperty(_ref2, \"margin\", 16), _defineProperty(_ref2, \"bottom\", 0), _ref2), style]),\n    children: _jsx(Button, _objectSpread(_objectSpread({\n      buttonStyle: StyleSheet.flatten([rest.title ? size === 'small' ? styles.smallExtendedLabel : styles.extendedLabel : size === 'small' ? styles.smallFAB : styles.largeFAB, {\n        backgroundColor: color || (theme == null ? void 0 : (_theme$colors = theme.colors) == null ? void 0 : _theme$colors.secondary)\n      }, buttonStyle]),\n      iconContainerStyle: [rest.title ? {} : size === 'small' ? styles.smallFAB : styles.largeFAB, iconContainerStyle],\n      containerStyle: StyleSheet.flatten([styles.container, disabled && styles.disabled, containerStyle]),\n      titleStyle: [styles.label, {\n        color: theme == null ? void 0 : (_theme$colors2 = theme.colors) == null ? void 0 : _theme$colors2.white\n      }, upperCase && styles.upperCaseLabel, titleStyle]\n    }, rest), {}, {\n      disabled: disabled,\n      theme: theme\n    }))\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    elevation: 4,\n    borderRadius: 28\n  },\n  largeFAB: {\n    height: 56,\n    width: 56,\n    padding: 16\n  },\n  smallFAB: {\n    height: 40,\n    width: 40,\n    padding: 8\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 28\n  },\n  label: {\n    marginHorizontal: 8\n  },\n  upperCaseLabel: {\n    textTransform: 'uppercase'\n  },\n  extendedLabel: {\n    height: 48,\n    paddingHorizontal: 16\n  },\n  smallExtendedLabel: {\n    height: 40,\n    paddingHorizontal: 12\n  },\n  disabled: {\n    elevation: 0\n  }\n});\nFAB.displayName = 'FAB';","map":{"version":3,"sources":["C:/Users/Spencer/Documents/Code/WATO/wato/node_modules/@react-native-elements/base/dist/FAB/FAB.js"],"names":["React","Button","defaultTheme","FAB","color","size","visible","disabled","upperCase","theme","style","titleStyle","buttonStyle","containerStyle","iconContainerStyle","placement","rest","useRef","Animated","Value","Number","animation","current","useEffect","timing","toValue","duration","useNativeDriver","start","StyleSheet","flatten","opacity","transform","scale","styles","content","title","smallExtendedLabel","extendedLabel","smallFAB","largeFAB","backgroundColor","colors","secondary","container","label","white","upperCaseLabel","create","elevation","borderRadius","height","width","padding","flexDirection","alignItems","justifyContent","marginHorizontal","textTransform","paddingHorizontal","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Animated } from 'react-native';\nimport { Button } from '../Button';\nimport { defaultTheme } from '../helpers';\nexport const FAB = ({ color, size = 'large', visible = true, disabled, upperCase, theme = defaultTheme, style, titleStyle, buttonStyle, containerStyle, iconContainerStyle, placement, ...rest }) => {\n    const { current: animation } = React.useRef(new Animated.Value(Number(visible)));\n    React.useEffect(() => {\n        Animated.timing(animation, {\n            toValue: Number(visible),\n            duration: 200,\n            useNativeDriver: true,\n        }).start();\n    }, [animation, visible]);\n    return (<Animated.View style={StyleSheet.flatten([\n            {\n                opacity: animation,\n                transform: [{ scale: animation }],\n            },\n            styles.content,\n            placement && {\n                [placement]: 0,\n                position: 'absolute',\n                margin: 16,\n                bottom: 0,\n            },\n            style,\n        ])}>\n      <Button buttonStyle={StyleSheet.flatten([\n            rest.title\n                ? size === 'small'\n                    ? styles.smallExtendedLabel\n                    : styles.extendedLabel\n                : size === 'small'\n                    ? styles.smallFAB\n                    : styles.largeFAB,\n            {\n                backgroundColor: color || theme?.colors?.secondary,\n            },\n            buttonStyle,\n        ])} iconContainerStyle={[\n            rest.title\n                ? {}\n                : size === 'small'\n                    ? styles.smallFAB\n                    : styles.largeFAB,\n            iconContainerStyle,\n        ]} containerStyle={StyleSheet.flatten([\n            styles.container,\n            disabled && styles.disabled,\n            containerStyle,\n        ])} titleStyle={[\n            styles.label,\n            { color: theme?.colors?.white },\n            upperCase && styles.upperCaseLabel,\n            titleStyle,\n        ]} {...rest} {...{ disabled, theme }}/>\n    </Animated.View>);\n};\nconst styles = StyleSheet.create({\n    container: {\n        elevation: 4,\n        borderRadius: 28,\n    },\n    largeFAB: {\n        height: 56,\n        width: 56,\n        padding: 16,\n    },\n    smallFAB: {\n        height: 40,\n        width: 40,\n        padding: 8,\n    },\n    content: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 28,\n    },\n    label: {\n        marginHorizontal: 8,\n    },\n    upperCaseLabel: {\n        textTransform: 'uppercase',\n    },\n    extendedLabel: {\n        height: 48,\n        paddingHorizontal: 16,\n    },\n    smallExtendedLabel: {\n        height: 40,\n        paddingHorizontal: 12,\n    },\n    disabled: {\n        elevation: 0,\n    },\n});\nFAB.displayName = 'FAB';\n"]},"metadata":{},"sourceType":"module"}