{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"theme\"],\n    _excluded2 = [\"lightTheme\", \"round\", \"clearIcon\", \"containerStyle\", \"searchIcon\", \"leftIconContainerStyle\", \"rightIconContainerStyle\", \"inputContainerStyle\", \"inputStyle\", \"showLoading\", \"loadingProps\", \"placeholderTextColor\"],\n    _excluded3 = [\"style\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { defaultTheme, renderNode } from \"../helpers\";\nimport { Input } from \"../Input\";\nimport { Icon } from \"../Icon\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar defaultSearchIcon = function defaultSearchIcon(theme) {\n  var _theme$colors;\n\n  return {\n    type: 'material',\n    size: 18,\n    name: 'search',\n    color: theme == null ? void 0 : (_theme$colors = theme.colors) == null ? void 0 : _theme$colors.grey3\n  };\n};\n\nvar defaultClearIcon = function defaultClearIcon(theme) {\n  var _theme$colors2;\n\n  return {\n    type: 'material',\n    size: 18,\n    name: 'clear',\n    color: theme == null ? void 0 : (_theme$colors2 = theme.colors) == null ? void 0 : _theme$colors2.grey3\n  };\n};\n\nexport var SearchBarDefault = function (_React$Component) {\n  _inherits(SearchBarDefault, _React$Component);\n\n  var _super = _createSuper(SearchBarDefault);\n\n  function SearchBarDefault(props) {\n    var _this;\n\n    _classCallCheck(this, SearchBarDefault);\n\n    _this = _super.call(this, props);\n\n    _this.focus = function () {\n      _this.input.focus();\n    };\n\n    _this.blur = function () {\n      _this.input.blur();\n    };\n\n    _this.clear = function () {\n      _this.input.clear();\n\n      _this.onChangeText('');\n\n      _this.props.onClear();\n    };\n\n    _this.onFocus = function (event) {\n      _this.props.onFocus(event);\n\n      _this.setState({\n        isEmpty: _this.props.value === ''\n      });\n    };\n\n    _this.onBlur = function (event) {\n      _this.props.onBlur(event);\n    };\n\n    _this.onChangeText = function (text) {\n      _this.props.onChangeText(text);\n\n      _this.setState({\n        isEmpty: text === ''\n      });\n    };\n\n    var value = props.value;\n    _this.state = {\n      isEmpty: value ? value === '' : true\n    };\n    return _this;\n  }\n\n  _createClass(SearchBarDefault, [{\n    key: \"render\",\n    value: function render() {\n      var _theme$colors3,\n          _theme$colors4,\n          _theme$colors5,\n          _this2 = this,\n          _theme$colors6,\n          _theme$colors7,\n          _theme$colors8;\n\n      var _this$props = this.props,\n          _this$props$theme = _this$props.theme,\n          theme = _this$props$theme === void 0 ? defaultTheme : _this$props$theme,\n          rest = _objectWithoutProperties(_this$props, _excluded);\n\n      var lightTheme = rest.lightTheme,\n          round = rest.round,\n          _rest$clearIcon = rest.clearIcon,\n          clearIcon = _rest$clearIcon === void 0 ? defaultClearIcon(theme) : _rest$clearIcon,\n          containerStyle = rest.containerStyle,\n          _rest$searchIcon = rest.searchIcon,\n          searchIcon = _rest$searchIcon === void 0 ? defaultSearchIcon(theme) : _rest$searchIcon,\n          leftIconContainerStyle = rest.leftIconContainerStyle,\n          rightIconContainerStyle = rest.rightIconContainerStyle,\n          inputContainerStyle = rest.inputContainerStyle,\n          inputStyle = rest.inputStyle,\n          showLoading = rest.showLoading,\n          loadingProps = rest.loadingProps,\n          _rest$placeholderText = rest.placeholderTextColor,\n          placeholderTextColor = _rest$placeholderText === void 0 ? theme == null ? void 0 : (_theme$colors3 = theme.colors) == null ? void 0 : _theme$colors3.grey3 : _rest$placeholderText,\n          attributes = _objectWithoutProperties(rest, _excluded2);\n\n      var isEmpty = this.state.isEmpty;\n\n      var loadingStyle = loadingProps.style,\n          otherLoadingProps = _objectWithoutProperties(loadingProps, _excluded3);\n\n      return _jsx(View, {\n        testID: \"RNE__SearchBar-wrapper\",\n        style: StyleSheet.flatten([{\n          borderTopWidth: 1,\n          borderBottomWidth: 1,\n          borderBottomColor: '#000',\n          borderTopColor: '#000',\n          padding: 8,\n          backgroundColor: theme == null ? void 0 : (_theme$colors4 = theme.colors) == null ? void 0 : _theme$colors4.grey0\n        }, lightTheme && {\n          borderTopColor: '#e1e1e1',\n          borderBottomColor: '#e1e1e1',\n          backgroundColor: theme == null ? void 0 : (_theme$colors5 = theme.colors) == null ? void 0 : _theme$colors5.grey5\n        }, containerStyle]),\n        children: _jsx(Input, _objectSpread(_objectSpread({\n          testID: \"RNE__SearchBar\",\n          renderErrorMessage: false\n        }, attributes), {}, {\n          onFocus: this.onFocus,\n          onBlur: this.onBlur,\n          onChangeText: this.onChangeText,\n          ref: function ref(input) {\n            _this2.input = input;\n          },\n          placeholderTextColor: placeholderTextColor,\n          inputStyle: StyleSheet.flatten([{\n            color: theme == null ? void 0 : (_theme$colors6 = theme.colors) == null ? void 0 : _theme$colors6.grey3,\n            marginLeft: 10\n          }, inputStyle]),\n          inputContainerStyle: StyleSheet.flatten([{\n            borderBottomWidth: 0,\n            borderRadius: 3,\n            overflow: 'hidden',\n            minHeight: 30,\n            backgroundColor: theme == null ? void 0 : (_theme$colors7 = theme.colors) == null ? void 0 : _theme$colors7.searchBg\n          }, lightTheme && {\n            backgroundColor: theme == null ? void 0 : (_theme$colors8 = theme.colors) == null ? void 0 : _theme$colors8.grey4\n          }, round && styles.round, inputContainerStyle]),\n          containerStyle: styles.inputContainer,\n          leftIcon: renderNode(Icon, searchIcon, defaultSearchIcon(theme)),\n          leftIconContainerStyle: StyleSheet.flatten([styles.leftIconContainerStyle, leftIconContainerStyle]),\n          rightIcon: _jsxs(View, {\n            style: {\n              flexDirection: 'row'\n            },\n            children: [showLoading && _jsx(ActivityIndicator, _objectSpread({\n              style: StyleSheet.flatten([{\n                marginRight: 5\n              }, loadingStyle])\n            }, otherLoadingProps), \"loading\"), !isEmpty && renderNode(Icon, clearIcon, _objectSpread(_objectSpread({}, defaultClearIcon(theme)), {}, {\n              key: 'cancel',\n              onPress: this.clear\n            }))]\n          }),\n          rightIconContainerStyle: StyleSheet.flatten([styles.rightIconContainerStyle, rightIconContainerStyle])\n        }))\n      });\n    }\n  }]);\n\n  return SearchBarDefault;\n}(React.Component);\nSearchBarDefault.defaultProps = {\n  value: '',\n  loadingProps: {},\n  showLoading: false,\n  lightTheme: false,\n  round: false,\n  onClear: function onClear() {\n    return null;\n  },\n  onFocus: function onFocus() {\n    return null;\n  },\n  onBlur: function onBlur() {\n    return null;\n  },\n  onChangeText: function onChangeText() {\n    return null;\n  }\n};\nvar styles = StyleSheet.create({\n  rightIconContainerStyle: {\n    marginRight: 8\n  },\n  leftIconContainerStyle: {\n    marginLeft: 8\n  },\n  inputContainer: {\n    paddingHorizontal: 0\n  },\n  round: {\n    borderRadius: 15\n  }\n});","map":{"version":3,"sources":["C:/Users/Spencer/Documents/Code/WATO/wato/node_modules/@react-native-elements/base/dist/SearchBar/SearchBar-default.js"],"names":["React","defaultTheme","renderNode","Input","Icon","defaultSearchIcon","theme","type","size","name","color","colors","grey3","defaultClearIcon","SearchBarDefault","props","focus","input","blur","clear","onChangeText","onClear","onFocus","event","setState","isEmpty","value","onBlur","text","state","rest","lightTheme","round","clearIcon","containerStyle","searchIcon","leftIconContainerStyle","rightIconContainerStyle","inputContainerStyle","inputStyle","showLoading","loadingProps","placeholderTextColor","attributes","loadingStyle","style","otherLoadingProps","StyleSheet","flatten","borderTopWidth","borderBottomWidth","borderBottomColor","borderTopColor","padding","backgroundColor","grey0","grey5","marginLeft","borderRadius","overflow","minHeight","searchBg","grey4","styles","inputContainer","flexDirection","marginRight","key","onPress","Component","defaultProps","create","paddingHorizontal"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,YAAT,EAAuBC,UAAvB;AACA,SAASC,KAAT;AACA,SAASC,IAAT;;;;AACA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD;AAAA;;AAAA,SAAY;AAClCC,IAAAA,IAAI,EAAE,UAD4B;AAElCC,IAAAA,IAAI,EAAE,EAF4B;AAGlCC,IAAAA,IAAI,EAAE,QAH4B;AAIlCC,IAAAA,KAAK,EAAEJ,KAAF,qCAAEA,KAAK,CAAEK,MAAT,qBAAE,cAAeC;AAJY,GAAZ;AAAA,CAA1B;;AAMA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACP,KAAD;AAAA;;AAAA,SAAY;AACjCC,IAAAA,IAAI,EAAE,UAD2B;AAEjCC,IAAAA,IAAI,EAAE,EAF2B;AAGjCC,IAAAA,IAAI,EAAE,OAH2B;AAIjCC,IAAAA,KAAK,EAAEJ,KAAF,sCAAEA,KAAK,CAAEK,MAAT,qBAAE,eAAeC;AAJW,GAAZ;AAAA,CAAzB;;AAMA,WAAaE,gBAAb;AAAA;;AAAA;;AAaI,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAOnBC,KAPmB,GAOX,YAAM;AACV,YAAKC,KAAL,CAAWD,KAAX;AACH,KATkB;;AAAA,UAUnBE,IAVmB,GAUZ,YAAM;AACT,YAAKD,KAAL,CAAWC,IAAX;AACH,KAZkB;;AAAA,UAanBC,KAbmB,GAaX,YAAM;AACV,YAAKF,KAAL,CAAWE,KAAX;;AACA,YAAKC,YAAL,CAAkB,EAAlB;;AACA,YAAKL,KAAL,CAAWM,OAAX;AACH,KAjBkB;;AAAA,UAkBnBC,OAlBmB,GAkBT,UAACC,KAAD,EAAW;AACjB,YAAKR,KAAL,CAAWO,OAAX,CAAmBC,KAAnB;;AACA,YAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE,MAAKV,KAAL,CAAWW,KAAX,KAAqB;AAAhC,OAAd;AACH,KArBkB;;AAAA,UAsBnBC,MAtBmB,GAsBV,UAACJ,KAAD,EAAW;AAChB,YAAKR,KAAL,CAAWY,MAAX,CAAkBJ,KAAlB;AACH,KAxBkB;;AAAA,UAyBnBH,YAzBmB,GAyBJ,UAACQ,IAAD,EAAU;AACrB,YAAKb,KAAL,CAAWK,YAAX,CAAwBQ,IAAxB;;AACA,YAAKJ,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAEG,IAAI,KAAK;AAApB,OAAd;AACH,KA5BkB;;AAEf,QAAQF,KAAR,GAAkBX,KAAlB,CAAQW,KAAR;AACA,UAAKG,KAAL,GAAa;AACTJ,MAAAA,OAAO,EAAEC,KAAK,GAAGA,KAAK,KAAK,EAAb,GAAkB;AADvB,KAAb;AAHe;AAMlB;;AAnBL;AAAA;AAAA,WA0CI,kBAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACL,wBAA0C,KAAKX,KAA/C;AAAA,0CAAQT,KAAR;AAAA,UAAQA,KAAR,kCAAgBL,YAAhB;AAAA,UAAiC6B,IAAjC;;AACA,UAAQC,UAAR,GAAmSD,IAAnS,CAAQC,UAAR;AAAA,UAAoBC,KAApB,GAAmSF,IAAnS,CAAoBE,KAApB;AAAA,4BAAmSF,IAAnS,CAA2BG,SAA3B;AAAA,UAA2BA,SAA3B,gCAAuCpB,gBAAgB,CAACP,KAAD,CAAvD;AAAA,UAAgE4B,cAAhE,GAAmSJ,IAAnS,CAAgEI,cAAhE;AAAA,6BAAmSJ,IAAnS,CAAgFK,UAAhF;AAAA,UAAgFA,UAAhF,iCAA6F9B,iBAAiB,CAACC,KAAD,CAA9G;AAAA,UAAuH8B,sBAAvH,GAAmSN,IAAnS,CAAuHM,sBAAvH;AAAA,UAA+IC,uBAA/I,GAAmSP,IAAnS,CAA+IO,uBAA/I;AAAA,UAAwKC,mBAAxK,GAAmSR,IAAnS,CAAwKQ,mBAAxK;AAAA,UAA6LC,UAA7L,GAAmST,IAAnS,CAA6LS,UAA7L;AAAA,UAAyMC,WAAzM,GAAmSV,IAAnS,CAAyMU,WAAzM;AAAA,UAAsNC,YAAtN,GAAmSX,IAAnS,CAAsNW,YAAtN;AAAA,kCAAmSX,IAAnS,CAAoOY,oBAApO;AAAA,UAAoOA,oBAApO,sCAA2PpC,KAA3P,sCAA2PA,KAAK,CAAEK,MAAlQ,qBAA2P,eAAeC,KAA1Q;AAAA,UAAoR+B,UAApR,4BAAmSb,IAAnS;;AACA,UAAQL,OAAR,GAAoB,KAAKI,KAAzB,CAAQJ,OAAR;;AACA,UAAemB,YAAf,GAAsDH,YAAtD,CAAQI,KAAR;AAAA,UAAgCC,iBAAhC,4BAAsDL,YAAtD;;AACA,aAAQ,KAAC,IAAD;AAAM,QAAA,MAAM,EAAC,wBAAb;AAAsC,QAAA,KAAK,EAAEM,UAAU,CAACC,OAAX,CAAmB,CAChE;AACIC,UAAAA,cAAc,EAAE,CADpB;AAEIC,UAAAA,iBAAiB,EAAE,CAFvB;AAGIC,UAAAA,iBAAiB,EAAE,MAHvB;AAIIC,UAAAA,cAAc,EAAE,MAJpB;AAKIC,UAAAA,OAAO,EAAE,CALb;AAMIC,UAAAA,eAAe,EAAEhD,KAAF,sCAAEA,KAAK,CAAEK,MAAT,qBAAE,eAAe4C;AANpC,SADgE,EAShExB,UAAU,IAAI;AACVqB,UAAAA,cAAc,EAAE,SADN;AAEVD,UAAAA,iBAAiB,EAAE,SAFT;AAGVG,UAAAA,eAAe,EAAEhD,KAAF,sCAAEA,KAAK,CAAEK,MAAT,qBAAE,eAAe6C;AAHtB,SATkD,EAchEtB,cAdgE,CAAnB,CAA7C;AAAA,kBAgBR,KAAC,KAAD;AAAO,UAAA,MAAM,EAAC,gBAAd;AAA+B,UAAA,kBAAkB,EAAE;AAAnD,WAA8DS,UAA9D;AAA0E,UAAA,OAAO,EAAE,KAAKrB,OAAxF;AAAiG,UAAA,MAAM,EAAE,KAAKK,MAA9G;AAAsH,UAAA,YAAY,EAAE,KAAKP,YAAzI;AAAuJ,UAAA,GAAG,EAAE,aAACH,KAAD,EAAW;AAC/J,YAAA,MAAI,CAACA,KAAL,GAAaA,KAAb;AACH,WAFL;AAEO,UAAA,oBAAoB,EAAEyB,oBAF7B;AAEmD,UAAA,UAAU,EAAEK,UAAU,CAACC,OAAX,CAAmB,CAC1E;AACItC,YAAAA,KAAK,EAAEJ,KAAF,sCAAEA,KAAK,CAAEK,MAAT,qBAAE,eAAeC,KAD1B;AAEI6C,YAAAA,UAAU,EAAE;AAFhB,WAD0E,EAK1ElB,UAL0E,CAAnB,CAF/D;AAQQ,UAAA,mBAAmB,EAAEQ,UAAU,CAACC,OAAX,CAAmB,CACxC;AACIE,YAAAA,iBAAiB,EAAE,CADvB;AAEIQ,YAAAA,YAAY,EAAE,CAFlB;AAGIC,YAAAA,QAAQ,EAAE,QAHd;AAIIC,YAAAA,SAAS,EAAE,EAJf;AAKIN,YAAAA,eAAe,EAAEhD,KAAF,sCAAEA,KAAK,CAAEK,MAAT,qBAAE,eAAekD;AALpC,WADwC,EAQxC9B,UAAU,IAAI;AACVuB,YAAAA,eAAe,EAAEhD,KAAF,sCAAEA,KAAK,CAAEK,MAAT,qBAAE,eAAemD;AADtB,WAR0B,EAWxC9B,KAAK,IAAI+B,MAAM,CAAC/B,KAXwB,EAYxCM,mBAZwC,CAAnB,CAR7B;AAqBQ,UAAA,cAAc,EAAEyB,MAAM,CAACC,cArB/B;AAqB+C,UAAA,QAAQ,EAAE9D,UAAU,CAACE,IAAD,EAAO+B,UAAP,EAAmB9B,iBAAiB,CAACC,KAAD,CAApC,CArBnE;AAqBiH,UAAA,sBAAsB,EAAEyC,UAAU,CAACC,OAAX,CAAmB,CACpJe,MAAM,CAAC3B,sBAD6I,EAEpJA,sBAFoJ,CAAnB,CArBzI;AAwBQ,UAAA,SAAS,EAAE,MAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAE6B,cAAAA,aAAa,EAAE;AAAjB,aAAb;AAAA,uBACZzB,WAAW,IAAK,KAAC,iBAAD;AAAiC,cAAA,KAAK,EAAEO,UAAU,CAACC,OAAX,CAAmB,CAAC;AAAEkB,gBAAAA,WAAW,EAAE;AAAf,eAAD,EAAqBtB,YAArB,CAAnB;AAAxC,eAAoGE,iBAApG,GAAuB,SAAvB,CADJ,EAGZ,CAACrB,OAAD,IACKvB,UAAU,CAACE,IAAD,EAAO6B,SAAP,kCACHpB,gBAAgB,CAACP,KAAD,CADb;AAEN6D,cAAAA,GAAG,EAAE,QAFC;AAGNC,cAAAA,OAAO,EAAE,KAAKjD;AAHR,eAJH;AAAA,YAxBnB;AAiCa,UAAA,uBAAuB,EAAE4B,UAAU,CAACC,OAAX,CAAmB,CACjDe,MAAM,CAAC1B,uBAD0C,EAEjDA,uBAFiD,CAAnB;AAjCtC;AAhBQ,QAAR;AAsDH;AArGL;;AAAA;AAAA,EAAsCrC,KAAK,CAACqE,SAA5C;AAAavD,gB,CAEFwD,Y,GAAe;AAClB5C,EAAAA,KAAK,EAAE,EADW;AAElBe,EAAAA,YAAY,EAAE,EAFI;AAGlBD,EAAAA,WAAW,EAAE,KAHK;AAIlBT,EAAAA,UAAU,EAAE,KAJM;AAKlBC,EAAAA,KAAK,EAAE,KALW;AAMlBX,EAAAA,OAAO,EAAE;AAAA,WAAM,IAAN;AAAA,GANS;AAOlBC,EAAAA,OAAO,EAAE;AAAA,WAAM,IAAN;AAAA,GAPS;AAQlBK,EAAAA,MAAM,EAAE;AAAA,WAAM,IAAN;AAAA,GARU;AASlBP,EAAAA,YAAY,EAAE;AAAA,WAAM,IAAN;AAAA;AATI,C;AAqG1B,IAAM2C,MAAM,GAAGhB,UAAU,CAACwB,MAAX,CAAkB;AAC7BlC,EAAAA,uBAAuB,EAAE;AACrB6B,IAAAA,WAAW,EAAE;AADQ,GADI;AAI7B9B,EAAAA,sBAAsB,EAAE;AACpBqB,IAAAA,UAAU,EAAE;AADQ,GAJK;AAO7BO,EAAAA,cAAc,EAAE;AACZQ,IAAAA,iBAAiB,EAAE;AADP,GAPa;AAU7BxC,EAAAA,KAAK,EAAE;AACH0B,IAAAA,YAAY,EAAE;AADX;AAVsB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { ActivityIndicator, StyleSheet, View, } from 'react-native';\nimport { defaultTheme, renderNode } from '../helpers';\nimport { Input } from '../Input';\nimport { Icon } from '../Icon';\nconst defaultSearchIcon = (theme) => ({\n    type: 'material',\n    size: 18,\n    name: 'search',\n    color: theme?.colors?.grey3,\n});\nconst defaultClearIcon = (theme) => ({\n    type: 'material',\n    size: 18,\n    name: 'clear',\n    color: theme?.colors?.grey3,\n});\nexport class SearchBarDefault extends React.Component {\n    input;\n    static defaultProps = {\n        value: '',\n        loadingProps: {},\n        showLoading: false,\n        lightTheme: false,\n        round: false,\n        onClear: () => null,\n        onFocus: () => null,\n        onBlur: () => null,\n        onChangeText: () => null,\n    };\n    constructor(props) {\n        super(props);\n        const { value } = props;\n        this.state = {\n            isEmpty: value ? value === '' : true,\n        };\n    }\n    focus = () => {\n        this.input.focus();\n    };\n    blur = () => {\n        this.input.blur();\n    };\n    clear = () => {\n        this.input.clear();\n        this.onChangeText('');\n        this.props.onClear();\n    };\n    onFocus = (event) => {\n        this.props.onFocus(event);\n        this.setState({ isEmpty: this.props.value === '' });\n    };\n    onBlur = (event) => {\n        this.props.onBlur(event);\n    };\n    onChangeText = (text) => {\n        this.props.onChangeText(text);\n        this.setState({ isEmpty: text === '' });\n    };\n    render() {\n        const { theme = defaultTheme, ...rest } = this.props;\n        const { lightTheme, round, clearIcon = defaultClearIcon(theme), containerStyle, searchIcon = defaultSearchIcon(theme), leftIconContainerStyle, rightIconContainerStyle, inputContainerStyle, inputStyle, showLoading, loadingProps, placeholderTextColor = theme?.colors?.grey3, ...attributes } = rest;\n        const { isEmpty } = this.state;\n        const { style: loadingStyle, ...otherLoadingProps } = loadingProps;\n        return (<View testID=\"RNE__SearchBar-wrapper\" style={StyleSheet.flatten([\n                {\n                    borderTopWidth: 1,\n                    borderBottomWidth: 1,\n                    borderBottomColor: '#000',\n                    borderTopColor: '#000',\n                    padding: 8,\n                    backgroundColor: theme?.colors?.grey0,\n                },\n                lightTheme && {\n                    borderTopColor: '#e1e1e1',\n                    borderBottomColor: '#e1e1e1',\n                    backgroundColor: theme?.colors?.grey5,\n                },\n                containerStyle,\n            ])}>\n        <Input testID=\"RNE__SearchBar\" renderErrorMessage={false} {...attributes} onFocus={this.onFocus} onBlur={this.onBlur} onChangeText={this.onChangeText} ref={(input) => {\n                this.input = input;\n            }} placeholderTextColor={placeholderTextColor} inputStyle={StyleSheet.flatten([\n                {\n                    color: theme?.colors?.grey3,\n                    marginLeft: 10,\n                },\n                inputStyle,\n            ])} inputContainerStyle={StyleSheet.flatten([\n                {\n                    borderBottomWidth: 0,\n                    borderRadius: 3,\n                    overflow: 'hidden',\n                    minHeight: 30,\n                    backgroundColor: theme?.colors?.searchBg,\n                },\n                lightTheme && {\n                    backgroundColor: theme?.colors?.grey4,\n                },\n                round && styles.round,\n                inputContainerStyle,\n            ])} containerStyle={styles.inputContainer} leftIcon={renderNode(Icon, searchIcon, defaultSearchIcon(theme))} leftIconContainerStyle={StyleSheet.flatten([\n                styles.leftIconContainerStyle,\n                leftIconContainerStyle,\n            ])} rightIcon={<View style={{ flexDirection: 'row' }}>\n              {showLoading && (<ActivityIndicator key=\"loading\" style={StyleSheet.flatten([{ marginRight: 5 }, loadingStyle])} {...otherLoadingProps}/>)}\n\n              {!isEmpty &&\n                    renderNode(Icon, clearIcon, {\n                        ...defaultClearIcon(theme),\n                        key: 'cancel',\n                        onPress: this.clear,\n                    })}\n            </View>} rightIconContainerStyle={StyleSheet.flatten([\n                styles.rightIconContainerStyle,\n                rightIconContainerStyle,\n            ])}/>\n      </View>);\n    }\n}\nconst styles = StyleSheet.create({\n    rightIconContainerStyle: {\n        marginRight: 8,\n    },\n    leftIconContainerStyle: {\n        marginLeft: 8,\n    },\n    inputContainer: {\n        paddingHorizontal: 0,\n    },\n    round: {\n        borderRadius: 15,\n    },\n});\n"]},"metadata":{},"sourceType":"module"}