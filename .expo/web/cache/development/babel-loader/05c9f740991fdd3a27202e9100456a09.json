{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"value\", \"variant\", \"color\", \"style\", \"theme\", \"trackColor\", \"animation\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Color from 'color';\nimport { defaultTheme } from \"../helpers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var LinearProgress = function LinearProgress(_ref) {\n  var _theme$colors, _theme$colors2;\n\n  var value = _ref.value,\n      _ref$variant = _ref.variant,\n      variant = _ref$variant === void 0 ? value === undefined ? 'indeterminate' : 'determinate' : _ref$variant,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'secondary' : _ref$color,\n      style = _ref.style,\n      _ref$theme = _ref.theme,\n      theme = _ref$theme === void 0 ? defaultTheme : _ref$theme,\n      trackColor = _ref.trackColor,\n      _ref$animation = _ref.animation,\n      animation = _ref$animation === void 0 ? {\n    duration: 2000\n  } : _ref$animation,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      width = _React$useState2[0],\n      setWidth = _React$useState2[1];\n\n  var _React$useRef = React.useRef(new Animated.Value(0)),\n      transition = _React$useRef.current;\n\n  var intermediate = React.useRef();\n  var startAnimation = React.useCallback(function () {\n    if (variant === 'indeterminate') {\n      intermediate.current = Animated.timing(transition, {\n        duration: typeof animation !== 'boolean' ? animation.duration : 2000,\n        toValue: 1,\n        useNativeDriver: true,\n        isInteraction: false\n      });\n      transition.setValue(0);\n      Animated.loop(intermediate.current).start();\n    } else {\n      Animated.timing(transition, {\n        duration: typeof animation !== 'boolean' ? animation.duration : 1000,\n        toValue: value || 0,\n        useNativeDriver: Platform.OS !== 'web',\n        isInteraction: false\n      }).start();\n    }\n  }, [variant, transition, animation, value]);\n  var tintColor = color === 'secondary' || color === 'primary' ? theme == null ? void 0 : (_theme$colors = theme.colors) == null ? void 0 : _theme$colors[color] : Color(color).rgb().string() || (theme == null ? void 0 : (_theme$colors2 = theme.colors) == null ? void 0 : _theme$colors2.secondary);\n  var trackTintColor = trackColor || Color(tintColor).alpha(0.4).rgb().string();\n  React.useEffect(function () {\n    if (animation) {\n      startAnimation();\n    }\n  }, [animation, startAnimation]);\n  return _jsx(View, _objectSpread(_objectSpread({\n    testID: \"RNE__LinearProgress_Bar\",\n    accessible: true,\n    accessibilityRole: \"progressbar\",\n    accessibilityValue: {\n      now: clamp(value),\n      min: 0,\n      max: 1\n    }\n  }, rest), {}, {\n    onLayout: function onLayout(e) {\n      setWidth(e.nativeEvent.layout.width);\n    },\n    style: [{\n      height: 4,\n      overflow: 'hidden',\n      width: '100%',\n      backgroundColor: trackTintColor,\n      position: 'relative'\n    }, style],\n    children: animation ? _jsx(Animated.View, {\n      testID: \"RNE__LinearProgress_Progress\",\n      style: {\n        transform: [{\n          translateX: transition.interpolate(variant === 'indeterminate' ? {\n            inputRange: [0, 1],\n            outputRange: [-width, 0.5 * width]\n          } : {\n            inputRange: [0, 1],\n            outputRange: [-0.5 * width, 0]\n          })\n        }, {\n          scaleX: transition.interpolate(variant === 'indeterminate' ? {\n            inputRange: [0, 0.5, 1],\n            outputRange: [0.0001, 1, 0.001]\n          } : {\n            inputRange: [0, 1],\n            outputRange: [0.0001, 1]\n          })\n        }],\n        backgroundColor: tintColor,\n        flex: 1\n      }\n    }) : _jsx(View, {\n      testID: \"RNE__LinearProgress_Progress\",\n      style: {\n        flex: 1,\n        width: width * clamp(value || 0),\n        backgroundColor: tintColor\n      }\n    })\n  }));\n};\nLinearProgress.displayName = 'LinearProgress';\nexport var clamp = function clamp(value) {\n  return Math.max(0, Math.min(value, 1)) || 0;\n};","map":{"version":3,"sources":["C:/Users/Spencer/Documents/Code/WATO/wato/node_modules/@react-native-elements/base/dist/LinearProgress/LinearProgress.js"],"names":["React","Color","defaultTheme","LinearProgress","value","variant","undefined","color","style","theme","trackColor","animation","duration","rest","useState","width","setWidth","useRef","Animated","Value","transition","current","intermediate","startAnimation","useCallback","timing","toValue","useNativeDriver","isInteraction","setValue","loop","start","Platform","OS","tintColor","colors","rgb","string","secondary","trackTintColor","alpha","useEffect","now","clamp","min","max","e","nativeEvent","layout","height","overflow","backgroundColor","position","transform","translateX","interpolate","inputRange","outputRange","scaleX","flex","displayName","Math"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Animated, Platform, } from 'react-native';\nimport Color from 'color';\nimport { defaultTheme } from '../helpers';\nexport const LinearProgress = ({ value, variant = value === undefined ? 'indeterminate' : 'determinate', color = 'secondary', style, theme = defaultTheme, trackColor, animation = { duration: 2000 }, ...rest }) => {\n    const [width, setWidth] = React.useState(0);\n    const { current: transition } = React.useRef(new Animated.Value(0));\n    const intermediate = React.useRef();\n    const startAnimation = React.useCallback(() => {\n        if (variant === 'indeterminate') {\n            intermediate.current = Animated.timing(transition, {\n                duration: typeof animation !== 'boolean' ? animation.duration : 2000,\n                toValue: 1,\n                useNativeDriver: true,\n                isInteraction: false,\n            });\n            transition.setValue(0);\n            Animated.loop(intermediate.current).start();\n        }\n        else {\n            Animated.timing(transition, {\n                duration: typeof animation !== 'boolean' ? animation.duration : 1000,\n                toValue: value || 0,\n                useNativeDriver: Platform.OS !== 'web',\n                isInteraction: false,\n            }).start();\n        }\n    }, [variant, transition, animation, value]);\n    const tintColor = color === 'secondary' || color === 'primary'\n        ? theme?.colors?.[color]\n        : Color(color).rgb().string() || theme?.colors?.secondary;\n    const trackTintColor = trackColor || Color(tintColor).alpha(0.4).rgb().string();\n    React.useEffect(() => {\n        if (animation) {\n            startAnimation();\n        }\n    }, [animation, startAnimation]);\n    return (<View testID=\"RNE__LinearProgress_Bar\" accessible accessibilityRole=\"progressbar\" accessibilityValue={{\n            now: clamp(value),\n            min: 0,\n            max: 1,\n        }} {...rest} onLayout={(e) => {\n            setWidth(e.nativeEvent.layout.width);\n        }} style={[\n            {\n                height: 4,\n                overflow: 'hidden',\n                width: '100%',\n                backgroundColor: trackTintColor,\n                position: 'relative',\n            },\n            style,\n        ]}>\n      {animation ? (<Animated.View testID=\"RNE__LinearProgress_Progress\" style={{\n                transform: [\n                    {\n                        translateX: transition.interpolate(variant === 'indeterminate'\n                            ? {\n                                inputRange: [0, 1],\n                                outputRange: [-width, 0.5 * width],\n                            }\n                            : {\n                                inputRange: [0, 1],\n                                outputRange: [-0.5 * width, 0],\n                            }),\n                    },\n                    {\n                        scaleX: transition.interpolate(variant === 'indeterminate'\n                            ? {\n                                inputRange: [0, 0.5, 1],\n                                outputRange: [0.0001, 1, 0.001],\n                            }\n                            : {\n                                inputRange: [0, 1],\n                                outputRange: [0.0001, 1],\n                            }),\n                    },\n                ],\n                backgroundColor: tintColor,\n                flex: 1,\n            }}/>) : (<View testID=\"RNE__LinearProgress_Progress\" style={{\n                flex: 1,\n                width: width * clamp(value || 0),\n                backgroundColor: tintColor,\n            }}/>)}\n    </View>);\n};\nLinearProgress.displayName = 'LinearProgress';\nexport const clamp = (value) => Math.max(0, Math.min(value, 1)) || 0;\n"]},"metadata":{},"sourceType":"module"}