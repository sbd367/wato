{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"leftStyle\", \"rightStyle\", \"leftContent\", \"rightContent\", \"leftWidth\", \"rightWidth\", \"onSwipeBegin\", \"onSwipeEnd\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { ListItemBase } from \"./ListItem\";\nimport { ScreenWidth } from \"../helpers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var ListItemSwipeable = function ListItemSwipeable(_ref) {\n  var children = _ref.children,\n      leftStyle = _ref.leftStyle,\n      rightStyle = _ref.rightStyle,\n      leftContent = _ref.leftContent,\n      rightContent = _ref.rightContent,\n      _ref$leftWidth = _ref.leftWidth,\n      leftWidth = _ref$leftWidth === void 0 ? ScreenWidth / 3 : _ref$leftWidth,\n      _ref$rightWidth = _ref.rightWidth,\n      rightWidth = _ref$rightWidth === void 0 ? ScreenWidth / 3 : _ref$rightWidth,\n      onSwipeBegin = _ref.onSwipeBegin,\n      onSwipeEnd = _ref.onSwipeEnd,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useRef = React.useRef(new Animated.Value(0)),\n      panX = _React$useRef.current;\n\n  var currValue = React.useRef(0);\n  var prevValue = React.useRef(0);\n  var slideAnimation = React.useCallback(function (toValue) {\n    Animated.spring(panX, {\n      toValue: toValue,\n      useNativeDriver: true\n    }).start();\n    prevValue.current = toValue;\n  }, [panX]);\n\n  var resetCallBack = function resetCallBack() {\n    slideAnimation(0);\n  };\n\n  React.useEffect(function () {\n    var subs = panX.addListener(function (_ref2) {\n      var value = _ref2.value;\n      currValue.current = value;\n    });\n    return function () {\n      panX.removeListener(subs);\n    };\n  }, [panX]);\n\n  var onPanResponderMove = function onPanResponderMove(_, _ref3) {\n    var dx = _ref3.dx;\n\n    if (dx > 0 && !leftContent) {\n      return;\n    }\n\n    if (dx < 0 && !rightContent) {\n      return;\n    }\n\n    if (!prevValue.current) {\n      prevValue.current = currValue.current;\n    }\n\n    var newDX = prevValue.current + dx;\n\n    if (Math.abs(newDX) > ScreenWidth / 2) {\n      return;\n    }\n\n    panX.setValue(newDX);\n  };\n\n  var onPanResponderRelease = function onPanResponderRelease(_, _ref4) {\n    var dx = _ref4.dx;\n    prevValue.current = currValue.current;\n\n    if (Math.sign(dx) > 0 && !leftContent || Math.sign(dx) < 0 && !rightContent) {\n      return slideAnimation(0);\n    }\n\n    if (Math.abs(currValue.current) >= ScreenWidth / 3) {\n      slideAnimation(currValue.current > 0 ? rightWidth : -leftWidth);\n    } else {\n      slideAnimation(0);\n    }\n  };\n\n  var _React$useRef2 = React.useRef(PanResponder.create({\n    onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {\n      return true;\n    },\n    onPanResponderGrant: function onPanResponderGrant(_event, _ref5) {\n      var vx = _ref5.vx;\n\n      if (vx !== 0) {\n        onSwipeBegin == null ? void 0 : onSwipeBegin(vx > 0 ? 'left' : 'right');\n      }\n    },\n    onPanResponderEnd: onSwipeEnd,\n    onPanResponderMove: onPanResponderMove,\n    onPanResponderRelease: onPanResponderRelease\n  })),\n      _panResponder = _React$useRef2.current;\n\n  return _jsxs(View, {\n    style: {\n      justifyContent: 'center'\n    },\n    children: [_jsxs(View, {\n      style: [styles.hidden, {\n        flex: 1,\n        flexDirection: 'row',\n        justifyContent: 'space-between'\n      }],\n      children: [_jsx(View, {\n        style: [{\n          width: leftWidth,\n          zIndex: 1\n        }, leftStyle],\n        children: typeof leftContent === 'function' ? leftContent(resetCallBack) : leftContent\n      }), _jsx(View, {\n        style: {\n          flex: 0\n        }\n      }), _jsx(View, {\n        style: [{\n          width: rightWidth,\n          zIndex: 1\n        }, rightStyle],\n        children: typeof rightContent === 'function' ? rightContent(resetCallBack) : rightContent\n      })]\n    }), _jsx(Animated.View, _objectSpread(_objectSpread({\n      style: {\n        transform: [{\n          translateX: panX\n        }],\n        zIndex: 2\n      }\n    }, _panResponder.panHandlers), {}, {\n      children: _jsx(ListItemBase, _objectSpread(_objectSpread({}, rest), {}, {\n        children: children\n      }))\n    }))]\n  });\n};\nvar styles = StyleSheet.create({\n  hidden: {\n    bottom: 0,\n    left: 0,\n    overflow: 'hidden',\n    position: 'absolute',\n    right: 0,\n    top: 0\n  }\n});\nListItemSwipeable.displayName = 'ListItem.Swipeable';","map":{"version":3,"sources":["C:/Users/Spencer/Documents/Code/WATO/wato/node_modules/@react-native-elements/base/dist/ListItem/ListItem.Swipeable.js"],"names":["React","ListItemBase","ScreenWidth","ListItemSwipeable","children","leftStyle","rightStyle","leftContent","rightContent","leftWidth","rightWidth","onSwipeBegin","onSwipeEnd","rest","useRef","Animated","Value","panX","current","currValue","prevValue","slideAnimation","useCallback","toValue","spring","useNativeDriver","start","resetCallBack","useEffect","subs","addListener","value","removeListener","onPanResponderMove","_","dx","newDX","Math","abs","setValue","onPanResponderRelease","sign","PanResponder","create","onMoveShouldSetPanResponderCapture","onPanResponderGrant","_event","vx","onPanResponderEnd","_panResponder","justifyContent","styles","hidden","flex","flexDirection","width","zIndex","transform","translateX","panHandlers","StyleSheet","bottom","left","overflow","position","right","top","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { PanResponder, Animated, View, StyleSheet, } from 'react-native';\nimport { ListItemBase } from './ListItem';\nimport { ScreenWidth } from '../helpers';\nexport const ListItemSwipeable = ({ children, leftStyle, rightStyle, leftContent, rightContent, leftWidth = ScreenWidth / 3, rightWidth = ScreenWidth / 3, onSwipeBegin, onSwipeEnd, ...rest }) => {\n    const { current: panX } = React.useRef(new Animated.Value(0));\n    const currValue = React.useRef(0);\n    const prevValue = React.useRef(0);\n    const slideAnimation = React.useCallback((toValue) => {\n        Animated.spring(panX, {\n            toValue,\n            useNativeDriver: true,\n        }).start();\n        prevValue.current = toValue;\n    }, [panX]);\n    const resetCallBack = () => {\n        slideAnimation(0);\n    };\n    React.useEffect(() => {\n        let subs = panX.addListener(({ value }) => {\n            currValue.current = value;\n        });\n        return () => {\n            panX.removeListener(subs);\n        };\n    }, [panX]);\n    const onPanResponderMove = (_, { dx }) => {\n        if (dx > 0 && !leftContent) {\n            return;\n        }\n        if (dx < 0 && !rightContent) {\n            return;\n        }\n        if (!prevValue.current) {\n            prevValue.current = currValue.current;\n        }\n        let newDX = prevValue.current + dx;\n        if (Math.abs(newDX) > ScreenWidth / 2) {\n            return;\n        }\n        panX.setValue(newDX);\n    };\n    const onPanResponderRelease = (_, { dx }) => {\n        prevValue.current = currValue.current;\n        if ((Math.sign(dx) > 0 && !leftContent) ||\n            (Math.sign(dx) < 0 && !rightContent)) {\n            return slideAnimation(0);\n        }\n        if (Math.abs(currValue.current) >= ScreenWidth / 3) {\n            slideAnimation(currValue.current > 0 ? rightWidth : -leftWidth);\n        }\n        else {\n            slideAnimation(0);\n        }\n    };\n    const { current: _panResponder } = React.useRef(PanResponder.create({\n        onMoveShouldSetPanResponderCapture: () => true,\n        onPanResponderGrant: (_event, { vx }) => {\n            if (vx !== 0) {\n                onSwipeBegin?.(vx > 0 ? 'left' : 'right');\n            }\n        },\n        onPanResponderEnd: onSwipeEnd,\n        onPanResponderMove,\n        onPanResponderRelease,\n    }));\n    return (<View style={{\n            justifyContent: 'center',\n        }}>\n      <View style={[\n            styles.hidden,\n            {\n                flex: 1,\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n            },\n        ]}>\n        <View style={[\n            {\n                width: leftWidth,\n                zIndex: 1,\n            },\n            leftStyle,\n        ]}>\n          {typeof leftContent === 'function'\n            ? leftContent(resetCallBack)\n            : leftContent}\n        </View>\n        <View style={{ flex: 0 }}/>\n        <View style={[\n            {\n                width: rightWidth,\n                zIndex: 1,\n            },\n            rightStyle,\n        ]}>\n          {typeof rightContent === 'function'\n            ? rightContent(resetCallBack)\n            : rightContent}\n        </View>\n      </View>\n      <Animated.View style={{\n            transform: [\n                {\n                    translateX: panX,\n                },\n            ],\n            zIndex: 2,\n        }} {..._panResponder.panHandlers}>\n        <ListItemBase {...rest}>{children}</ListItemBase>\n      </Animated.View>\n    </View>);\n};\nconst styles = StyleSheet.create({\n    hidden: {\n        bottom: 0,\n        left: 0,\n        overflow: 'hidden',\n        position: 'absolute',\n        right: 0,\n        top: 0,\n    },\n});\nListItemSwipeable.displayName = 'ListItem.Swipeable';\n"]},"metadata":{},"sourceType":"module"}